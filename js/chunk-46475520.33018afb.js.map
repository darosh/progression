{"version":3,"sources":["webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/Tone.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/context/AudioContext.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/clock/Ticker.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/util/TypeCheck.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/util/Defaults.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/util/Emitter.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/util/Timeline.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/context/ContextInitialization.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/context/Context.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/Global.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/type/Conversions.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/type/TimeBase.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/type/Time.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/type/Frequency.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/type/TransportTime.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/context/ToneWithContext.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/context/Param.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/context/ToneAudioNode.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/util/Interface.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/context/Gain.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/context/OfflineContext.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/context/ToneAudioBuffer.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/context/Offline.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/context/ToneAudioBuffers.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/context/Delay.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/util/StateTimeline.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/clock/TickSignal.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/clock/TickSource.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/clock/Clock.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/type/Ticks.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/type/Midi.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/util/Draw.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/util/IntervalTimeline.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/component/channel/Volume.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/context/Destination.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/clock/TransportEvent.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/core/clock/Transport.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/source/Source.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/source/OneShotSource.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/source/buffer/BufferSource.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/source/Noise.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/signal/Signal.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/source/oscillator/OscillatorNode.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/source/oscillator/Oscillator.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/signal/SignalOperator.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/signal/WaveShaper.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/signal/AudioToGain.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/signal/Multiply.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/source/oscillator/AMOscillator.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/source/oscillator/FMOscillator.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/source/oscillator/PulseOscillator.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/source/oscillator/FatOscillator.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/source/oscillator/PWMOscillator.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/source/oscillator/OmniOscillator.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/source/buffer/Player.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/component/envelope/Envelope.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/instrument/Instrument.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/instrument/Monophonic.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/instrument/Synth.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/instrument/Sampler.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/event/ToneEvent.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/event/Part.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/event/Sequence.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/signal/GainToAudio.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/component/channel/CrossFade.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/effect/Effect.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/effect/FeedbackEffect.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/effect/FeedbackDelay.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/effect/Convolver.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/component/analysis/Analyser.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/component/channel/Merge.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/component/filter/Filter.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/component/channel/MultibandSplit.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/component/filter/EQ3.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/index.js","webpack:///./node_modules/.pnpm/registry.npmjs.org/tone/14.1.18/node_modules/tone/build/esm/version.js"],"names":["Tone","this","debug","_wasDisposed","getDefaults","prototype","log","args","_i","arguments","length","toString","global","TONE_DEBUG_CLASS","unshift","console","apply","assert","statement","error","Error","dispose","Object","defineProperty","get","enumerable","configurable","name","version","globalContext","theWindow","self","hasAudioContext","hasOwnProperty","getAudioContext","setAudioContext","AudioContext","context","TONE_AUDIO_CONTEXT","Ticker","callback","type","updateInterval","_callback","_type","_updateInterval","_createClock","_createWorker","blob","Blob","toFixed","blobUrl","URL","createObjectURL","worker","Worker","onmessage","bind","_worker","_createTimeout","_this","_timeout","setTimeout","e","_disposeClock","clearTimeout","terminate","set","interval","Math","max","postMessage","isUndef","arg","isDefined","isFunction","isNumber","isObject","call","constructor","isBoolean","isArray","Array","isString","isNote","test","deepMerge","target","_a","_b","sources","source","shift","key","assign","concat","optionsFromArguments","defaults","argsArray","keys","objKey","opts","from","Reflect","has","partOfDefaults","some","splice","indexOf","i","getDefaultsFromInstance","instance","defaultArg","given","fallback","omitFromObject","obj","omit","forEach","prop","__extends","extendStatics","d","b","setPrototypeOf","__proto__","p","__","create","_super","Emitter","on","event","events","split","eventName","_events","push","once","boundCallback","off","eventList","emit","slice","len","mixin","constr","property","getOwnPropertyDescriptor","undefined","Timeline","_timeline","options","memory","Infinity","add","time","valueOf","index","_search","diff","remove","param","peek","getAfter","getBefore","cancel","after","cancelBefore","previousEvent","beginning","end","midPoint","floor","event_1","nextEvent","testEvent","_iterate","lowerBound","upperBound","forEachBefore","forEachAfter","forEachBetween","startTime","endTime","forEachFrom","forEachAtTime","notifyNewContext","onContextInit","cb","initializeContext","ctx","notifyCloseContext","onContextClose","closeContext","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","pop","Context","_constants","Map","_timeouts","_timeoutIds","_initialized","_context","_latencyHint","latencyHint","lookAhead","_ticker","clockSource","_timeoutLoop","addEventListener","state","initialize","createAnalyser","createOscillator","createBufferSource","createBiquadFilter","createBuffer","numberOfChannels","sampleRate","createChannelMerger","numberOfInputs","createChannelSplitter","numberOfOutputs","createConstantSource","createConvolver","createDelay","maxDelayTime","createDynamicsCompressor","createGain","createIIRFilter","feedforward","feedback","createPanner","createPeriodicWave","real","imag","constraints","createStereoPanner","createWaveShaper","decodeAudioData","audioData","currentTime","listener","_transport","_destination","hint","lookAheadValue","now","resume","close","getConstant","val","buffer","arr","getChannelData","constant","channelCount","channelCountMode","loop","start","map","disconnect","firstEvent","fn","timeout","id","dummyContext","destination","transport","getContext","setContext","TONE_SILENCE_LOGGING","prefix","printString","dbToGain","db","pow","gainToDb","gain","LN10","intervalToFrequencyRatio","A4","getA4","setA4","freq","ftom","frequency","round","log2","mtof","midi","TimeBaseClass","units","defaultUnits","_val","_units","_expressions","_getExpressions","hz","method","_frequencyToUnits","parseFloat","regexp","_ticksToUnits","parseInt","m","_beatsToUnits","_getTimeSignature","dot","numericValue","scalar","number","s","_secondsToUnits","samples","tr","q","total","fromType","_noArg","trim","typeName","quantity","expr","matching","match","beats","_getBpm","seconds","ticks","_getPPQ","_now","bpm","timeSignature","PPQ","toSeconds","toTicks","toFrequency","toMidi","toSamples","toMilliseconds","TimeClass","capture","quantize","quantTo","nextSubdivision","subdiv","percent","subdivision","multiple","ideal","toNotation","testNotations","power","closest","closestSeconds","notation","notationSeconds","abs","toBarsBeatsSixteenths","quarterTime","quarters","measures","sixteenths","sixteenthString","progress","join","Time","FrequencyClass","note","pitch","octave","noteToScaleIndex","toLowerCase","noteNumber","transpose","harmonize","intervals","toNote","noteName","scaleIndexToNote","Frequency","TransportTimeClass","TransportTime","ToneWithContext","defaultContext","immediate","attribute","member","setValueAtTime","props","Param","overridden","_minOutput","AudioParam","_param","input","_initialValue","convert","getValueAtTime","_fromType","cancelScheduledValues","minValue","maxValue","_is","min","_toType","computedTime","isFinite","JSON","stringify","before","beforeValue","previous","_linearInterpolate","_exponentialInterpolate","previousVal","_exponentialApproach","setRampPoint","currentVal","cancelAndHoldAtTime","linearRampToValueAtTime","exponentialRampToValueAtTime","exponentialRampTo","rampTime","linearRampTo","targetRampTo","exponentialApproachValueAtTime","timeConstant","setTargetAtTime","setValueCurveAtTime","values","duration","scaling","startingValue","segTime","valueAtTime","sampleTime","rampTo","t0","v0","v1","exp","t1","ToneAudioNode","_internalChannels","output","_isAudioNode","node","AudioNode","_getInternalNodes","nodeList","_setChannelProperties","channelInterpretation","_getChannelProperties","connect","outputNum","inputNum","toDestination","toMaster","warn","chain","nodes","connectSeries","fan","first","reduce","prev","current","srcNode","dstNode","outputNumber","inputNumber","readOnly","str","writable","noOp","Gain","_gainNode","OfflineContext","channels","OfflineAudioContext","_currentTime","_duration","render","startRendering","ToneAudioBuffer","onload","reverse","url","AudioBuffer","load","catch","onerror","_buffer","loaded","_reversed","_reverse","promise","audioBuffer","e_1","downloads","fromArray","array","isMultidimensional","multiChannelArray","c","copyToChannel","toMono","chanNum","toArray","outputArray","Float32Array","numChannels_1","channel","channelArray","sample","ret","startSamples","endSamples","retBuffer","subarray","rev","fromUrl","matches","extensions","extension","extensions_1","ext","response","arrayBuffer","supportsType","replace","fetch","baseUrl","ok","document","createElement","canPlayType","Offline","originalContext","bufferPromise","ToneAudioBuffers","_buffers","_loadingCount","urls","_bufferLoaded","every","clear","Delay","maxDelayInSeconds","maxDelay","delayTime","_delayNode","StateTimeline","initial","_initial","setStateAtTime","getLastState","getNextState","event_2","TickSignal","_sig","offset","_multiplier","multiplier","computedValue","prevEvent","segments","rampVal","ticksUntilTime","_getTicksUntilEvent","computedVal","segmentDur","val0","val1","onTheLineEvent","getTicksAtTime","getDurationOfTicks","currentTick","getTimeOfTick","tick","delta","k","sqrt","sol1","sol2","ticksToTime","when","timeToTicks","computedDuration","startTicks","endTicks","TickSource","_state","_tickOffset","setTicksAtTime","stop","pause","stopEvent","tmpEvent","lastState","elapsedTicks","periodStartTime","offsetEvent","getSecondsAtTime","elapsedSeconds","getStateAtTime","absoluteTicks","forEachTickBetween","computedStartTime","computedEndTime","lastStateEvent","maxStartTime","ticksAtStart","nextTickTime","Clock","_lastUpdate","_boundLoop","_loop","_tickSource","ceil","TicksClass","Ticks","MidiClass","Midi","Draw","expiration","anticipation","_boundDrawLoop","_drawLoop","_animationFrame","schedule","requestAnimationFrame","cancelAnimationFrame","IntervalTimeline","_root","_length","IntervalNode","insert","updateHeight","updateMax","_rebalance","parent","results","search","results_1","_removeNode","_setRoot","_replaceNodeInParent","replacement","isLeftChild","left","right","balance","getBalance","temp","_rotateLeft","pivotNode","_rotateRight","low","allNodes_1","traverse","searchAfter","high","_left","_right","height","point","Volume","volume","_unmutedVolume","mute","Destination","rawContext","TransportEvent","_eventId","_once","invoke","TransportRepeatEvent","_currentId","_nextId","_nextTick","_boundRestart","_restart","_interval","_createEvents","scheduleOnce","Transport","_loopStart","_loopEnd","_scheduledEvents","_repeatedEvents","_syncedSignals","_swingAmount","_ppq","ppq","_clock","_processTick","_bindClockEvents","_timeSignature","_swingTicks","loopEnd","loopStart","swing","swingSubdivision","tickTime","amount","sin","PI","_addEvent","scheduleRepeat","eventId","item","timeline","computedAfter","offsetTicks","toggle","timeSig","startPosition","endPosition","setLoopPoints","transportPos","remainingTicks","syncSignal","signal","ratio","computedFreq","ratioSignal","unsyncSignal","syncedSignal","Source","_volume","_synced","_scheduled","_syncedStart","_syncedStop","restart","sched","_start","_stop","sync","stateEvent","startOffset","unsync","OneShotSource","onended","_startTime","_stopTime","_fadeIn","fadeIn","_fadeOut","fadeOut","_curve","curve","_startGain","fadeInTime","_stopGain","cancelStop","fadeOutTime","additionalTail","_stopSource","_onended","ToneBufferSource","_source","_sourceStarted","_sourceStopped","playbackRate","computedOffset","loopDuration","computedDur","Noise","_playbackRate","_noiseBuffers","rate","random","BUFFER_LENGTH","NUM_CHANNELS","_noiseCache","brown","pink","white","channelNum","lastOut","b0","b1","b2","b3","b4","b5","b6","Signal","override","_constantSource","connectSignal","ToneOscillatorNode","_oscillator","detune","setPeriodicWave","periodicWave","Oscillator","_partials","partials","_partialCount","partialCount","_phase","phase","baseType","oscillator","_wave","syncFrequency","unsyncFrequency","isBasicType","_getRealImaginary","partial","exec","fftSize","periodicWaveSize","piFactor","cos","_inverseFFT","sum","_getInitialValue","twoPi","SignalOperator","WaveShaper","_shaper","mapping","setMap","normalized","oversample","oversampling","isOverSampleType","includes","AudioToGain","_norm","x","Multiply","_mult","factor","AMOscillator","_carrier","_modulator","_modulationScale","harmonicity","_modulationNode","modulationType","FMOscillator","modulationIndex","PulseOscillator","width","_widthGate","_sawtooth","_thresh","FatOscillator","_oscillators","_spread","spread","count","_forEach","osc","start_1","step_1","PWMOscillator","sourceType","_pulse","_scale","modulationFrequency","OmniOscillatorSourceMap","am","fat","fm","pulse","pwm","OmniOscillator","_sourceType","substr","_createNewOscillator","_getOscType","oscType","oscConstructor","oldOsc_1","blockTime","sType","mType","Player","_activeSources","Set","_onload","autostart","_onSourceEnd","delete","size","comptuedOffset","origDuration","implicitEnd","seek","Envelope","attack","decay","sustain","release","attackCurve","releaseCurve","decayCurve","_getCurve","direction","curveName","EnvelopeCurves","_setCurve","curveDef","_attackCurve","_releaseCurve","_decayCurve","triggerAttack","velocity","originalAttack","currentValue","attackRate","remainingDistance","decayValue","decayStart","triggerRelease","triggerAttackRelease","curveLen","cosineCurve","rippleCurve","rippleCurveFreq","sineWave","stairsCurve","steps","sineCurve","bounceCurve","invertCurve","out","j","reverseCurve","bounce","In","Out","cosine","exponential","linear","ripple","sine","AmplitudeEnvelope","Instrument","_original_triggerAttack","_original_triggerRelease","_syncMethod","timePosition","originalMethod","Monophonic","portamento","_triggerEnvelopeAttack","setNote","_triggerEnvelopeRelease","getLevelAtTime","envelope","computedFrequency","portTime","Synth","computedAttack","computedDecay","Sampler","urlMap","mid","_findClosest","MAX_INTERVAL","notes","difference","closestNote","releaseAll","ToneEvent","_startOffset","_probability","probability","_humanize","humanize","_rescheduleEvents","startTick","_getLoopDuration","_tick","prob","variation","reschedulTime","lastEvent","Part","computedOffset_1","_startNote","at","timeInTicks","_restartEvent","_setAll","attr","_testLoopBoundries","Sequence","_part","_seqCallback","_eventsArray","_subdivision","_createSequence","_eventsUpdated","_indexTime","Proxy","_rescheduleSequence","sequence","eventOffset","l","GainToAudio","CrossFade","_panner","_split","_g2a","a","fade","pan","Effect","_dryWet","wet","effectSend","effectReturn","connectEffect","effect","FeedbackEffect","_feedbackGain","FeedbackDelay","Convolver","_convolver","normalize","buff","norm","Analyser","_analyser","smoothing","getValue","getFloatFrequencyData","getFloatTimeDomainData","frequencyBinCount","smoothingTimeConstant","Merge","_merger","Filter","_filters","Q","rolloff","types","filter","_rolloff","rolloffNum","possibilities","cascadingCount","getFrequencyResponse","totalResponse","freqValues","magValues","phaseValues","filterClone","MultibandSplit","_lowMidFilter","lowFrequency","highFrequency","EQ3","_multibandSplit","_lowGain","_midGain","_highGain"],"mappings":"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","file":"js/chunk-46475520.33018afb.js","sourcesContent":["/**\n *  Tone.js\n *  @author Yotam Mann\n *  @license http://opensource.org/licenses/MIT MIT License\n *  @copyright 2014-2019 Yotam Mann\n */\nimport { version } from \"../version\";\n/**\n *  @class  Tone is the base class of all other classes.\n *  @constructor\n */\nvar Tone = /** @class */ (function () {\n    function Tone() {\n        ///////////////////////////////////////////////////////////////////////////\n        // \tDEBUGGING\n        ///////////////////////////////////////////////////////////////////////////\n        /**\n         * Set this debug flag to log all events that happen in this class.\n         */\n        this.debug = false;\n        ///////////////////////////////////////////////////////////////////////////\n        // \tDISPOSING\n        ///////////////////////////////////////////////////////////////////////////\n        /**\n         * Indicates if the instance was disposed\n         */\n        this._wasDisposed = false;\n        ///////////////////////////////////////////////////////////////////////////\n        // \tSTATIC\n        ///////////////////////////////////////////////////////////////////////////\n        // static get context(): import(\"./context/Context\").Context {\n        // \treturn getContext();\n        // }\n        // static now(): Seconds {\n        // \treturn Tone.context.now();\n        // }\n    }\n    /**\n     * Takes a partial options an returns the completed options by filling in the defaults\n     */\n    Tone.getDefaults = function () {\n        return {};\n    };\n    /**\n     * Prints the outputs to the console log for debugging purposes.\n     * Prints the contents only if either the object has a property\n     * called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n     * is set to the name of the class.\n     * @param args\n     *  @example\n     * //prints all logs originating from Tone.OscillatorNode\n     * Tone.global.TONE_DEBUG_CLASS = \"OscillatorNode\"\n     */\n    Tone.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // if the object is either set to debug = true\n        // or if there is a string on the Tone.global.with the class name\n        // @ts-ignore\n        if (this.debug || this.toString() === global.TONE_DEBUG_CLASS) {\n            args.unshift(this.toString() + \":\");\n            // tslint:disable-next-line: no-console\n            console.log.apply(console, args);\n        }\n    };\n    /**\n     *  Assert that the statement is true, otherwise invoke the error.\n     *  @param {Boolean} statement\n     *  @param {String} error The message which is passed into an Error\n     *  @private\n     */\n    Tone.prototype.assert = function (statement, error) {\n        if (!statement) {\n            throw new Error(error);\n        }\n    };\n    /**\n     *  disconnect and dispose.\n     */\n    Tone.prototype.dispose = function () {\n        this._wasDisposed = true;\n        return this;\n    };\n    Object.defineProperty(Tone.prototype, \"disposed\", {\n        /**\n         * Indicates if the instance was disposed. 'Disposing' an\n         * instance means that all of the Web Audio nodes that were\n         * created for the instance are disconnected and freed for garbage collection.\n         */\n        get: function () {\n            return this._wasDisposed;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ///////////////////////////////////////////////////////////////////////////\n    // \tDEFAULTS\n    ///////////////////////////////////////////////////////////////////////////\n    /**\n     *  If the `given` parameter is undefined, use the `fallback`.\n     *  If both `given` and `fallback` are object literals, it will\n     *  return a deep copy which includes all of the parameters from both\n     *  objects. If a parameter is undefined in given, it will return\n     *  the fallback property.\n     *  <br><br>\n     *  WARNING: if object is self referential, it will go into an an\n     *  infinite recursive loop.\n     *  @memberOf Tone\n     *  @param  {*} given\n     *  @param  {*} fallback\n     *  @return {*}\n     */\n    // static defaultArg(given, fallback) {\n    // if (isObject(given) && isObject(fallback)) {\n    // \tconst ret = {};\n    // \t// make a deep copy of the given object\n    // \tfor (const givenProp in given) {\n    // \t\tret[givenProp] = Tone.defaultArg(fallback[givenProp], given[givenProp]);\n    // \t}\n    // \tfor (const fallbackProp in fallback) {\n    // \t\tret[fallbackProp] = Tone.defaultArg(given[fallbackProp], fallback[fallbackProp]);\n    // \t}\n    // \treturn ret;\n    // } else {\n    // \treturn isUndef(given) ? fallback : given;\n    // }\n    // }\n    // protected options(argsArray: IArguments, keys: string[]): object {\n    // \tlet options: any = {};\n    // \tconst args = Array.from(argsArray);\n    // \tif (args[0] instanceof BaseAudioContext) {\n    // \t\toptions.context = args.shift();\n    // \t}\n    // \tif (args.length === 1 && isObject(args[0])) {\n    // \t\toptions = Object.assign(options, args[0]);\n    // \t} else {\n    // \t\tfor (let i = 0; i < keys.length; i++) {\n    // \t\t\tif (isDefined(args[i])) {\n    // \t\t\t\toptions[keys[i]] = args[i];\n    // \t\t\t}\n    // \t\t}\n    // \t}\n    // \treturn deepMerge(this.getDefaults(), options);\n    // }\n    /**\n     * Convert the class to a string\n     * @example\n     * const osc = new Oscillator()\n     * osc.toString() // \"Oscillator\"\n     */\n    Tone.prototype.toString = function () {\n        return this.name;\n    };\n    /**\n     * The version number semver\n     */\n    Tone.version = version;\n    return Tone;\n}());\nexport { Tone };\n//# sourceMappingURL=Tone.js.map","/**\n * A reference to the window object\n */\nexport var theWindow = typeof self === \"object\" ? self : null;\n/**\n * If the browser has a window object which has an AudioContext\n */\nexport var hasAudioContext = theWindow && theWindow.hasOwnProperty(\"AudioContext\");\n/**\n * The global audio context which is getable and assignable through\n * getAudioContext and setAudioContext\n */\nvar globalContext;\n// if it was created already, use that one\n// this enables multiple versions of Tone.js to run on the same page.\nif (theWindow && theWindow.TONE_AUDIO_CONTEXT) {\n    globalContext = theWindow.TONE_AUDIO_CONTEXT;\n}\n/**\n * Returns the default system-wide AudioContext\n */\nexport function getAudioContext() {\n    if (!globalContext && hasAudioContext) {\n        setAudioContext(new AudioContext());\n    }\n    return globalContext;\n}\n/**\n * Set the default audio context\n */\nexport function setAudioContext(context) {\n    globalContext = context;\n    if (theWindow) {\n        theWindow.TONE_AUDIO_CONTEXT = globalContext;\n    }\n}\n//# sourceMappingURL=AudioContext.js.map","/**\n * A class which provides a reliable callback using either\n * a Web Worker, or if that isn't supported, falls back to setTimeout.\n */\nvar Ticker = /** @class */ (function () {\n    function Ticker(callback, type, updateInterval) {\n        this._callback = callback;\n        this._type = type;\n        this._updateInterval = updateInterval;\n        // create the clock source for the first time\n        this._createClock();\n    }\n    /**\n     *  Generate a web worker\n     */\n    Ticker.prototype._createWorker = function () {\n        var blob = new Blob([\n            // the initial timeout time\n            \"var timeoutTime =  \" + (this._updateInterval * 1000).toFixed(1) + \";\\n\\t\\t\\t// onmessage callback\\n\\t\\t\\tself.onmessage = function(msg){\\n\\t\\t\\t\\ttimeoutTime = parseInt(msg.data);\\n\\t\\t\\t};\\n\\t\\t\\t// the tick function which posts a message\\n\\t\\t\\t// and schedules a new tick\\n\\t\\t\\tfunction tick(){\\n\\t\\t\\t\\tsetTimeout(tick, timeoutTime);\\n\\t\\t\\t\\tself.postMessage('tick');\\n\\t\\t\\t}\\n\\t\\t\\t// call tick initially\\n\\t\\t\\ttick();\",\n        ]);\n        var blobUrl = URL.createObjectURL(blob);\n        var worker = new Worker(blobUrl);\n        worker.onmessage = this._callback.bind(this);\n        this._worker = worker;\n    };\n    /**\n     * Create a timeout loop\n     */\n    Ticker.prototype._createTimeout = function () {\n        var _this = this;\n        this._timeout = setTimeout(function () {\n            _this._createTimeout();\n            _this._callback();\n        }, this._updateInterval * 1000);\n    };\n    /**\n     * Create the clock source.\n     */\n    Ticker.prototype._createClock = function () {\n        if (this._type === \"worker\") {\n            try {\n                this._createWorker();\n            }\n            catch (e) {\n                // workers not supported, fallback to timeout\n                this._type = \"timeout\";\n                this._createClock();\n            }\n        }\n        else if (this._type === \"timeout\") {\n            this._createTimeout();\n        }\n    };\n    /**\n     * Clean up the current clock source\n     */\n    Ticker.prototype._disposeClock = function () {\n        if (this._timeout) {\n            clearTimeout(this._timeout);\n            this._timeout = 0;\n        }\n        if (this._worker) {\n            this._worker.terminate();\n            this._worker.onmessage = null;\n        }\n    };\n    Object.defineProperty(Ticker.prototype, \"updateInterval\", {\n        /**\n         * The rate in seconds the ticker will update\n         */\n        get: function () {\n            return this._updateInterval;\n        },\n        set: function (interval) {\n            this._updateInterval = Math.max(interval, 128 / 44100);\n            if (this._type === \"worker\") {\n                this._worker.postMessage(Math.max(interval * 1000, 1));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Ticker.prototype, \"type\", {\n        /**\n         * The type of the ticker, either a worker or a timeout\n         */\n        get: function () {\n            return this._type;\n        },\n        set: function (type) {\n            this._disposeClock();\n            this._type = type;\n            this._createClock();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clean up\n     */\n    Ticker.prototype.dispose = function () {\n        this._disposeClock();\n    };\n    return Ticker;\n}());\nexport { Ticker };\n//# sourceMappingURL=Ticker.js.map","/**\n *  Test if the arg is undefined\n */\nexport function isUndef(arg) {\n    return typeof arg === \"undefined\";\n}\n/**\n *  Test if the arg is not undefined\n */\nexport function isDefined(arg) {\n    return !isUndef(arg);\n}\n/**\n *  Test if the arg is a function\n */\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\n/**\n *  Test if the argument is a number.\n */\nexport function isNumber(arg) {\n    return (typeof arg === \"number\");\n}\n/**\n *  Test if the given argument is an object literal (i.e. `{}`);\n */\nexport function isObject(arg) {\n    return (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n}\n/**\n *  Test if the argument is a boolean.\n */\nexport function isBoolean(arg) {\n    return (typeof arg === \"boolean\");\n}\n/**\n *  Test if the argument is an Array\n */\nexport function isArray(arg) {\n    return (Array.isArray(arg));\n}\n/**\n *  Test if the argument is a string.\n */\nexport function isString(arg) {\n    return (typeof arg === \"string\");\n}\n/**\n *  Test if the argument is in the form of a note in scientific pitch notation.\n *  e.g. \"C4\"\n */\nexport function isNote(arg) {\n    return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n}\n//# sourceMappingURL=TypeCheck.js.map","// import { BaseToneOptions } from \"../Tone\";\nimport { isDefined, isObject, isUndef } from \"./TypeCheck\";\n/**\n * Recursively merge an object\n * @param target the object to merge into\n * @param sources the source objects to merge\n */\nexport function deepMerge(target) {\n    var _a, _b;\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    if (!sources.length) {\n        return target;\n    }\n    var source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for (var key in source) {\n            // values with the key 'value' are an exception\n            // they don't get deep merged\n            if (key === \"value\") {\n                target[key] = source[key];\n            }\n            else if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, (_a = {}, _a[key] = {}, _a));\n                }\n                deepMerge(target[key], source[key]);\n            }\n            else {\n                Object.assign(target, (_b = {}, _b[key] = source[key], _b));\n            }\n        }\n    }\n    return deepMerge.apply(void 0, [target].concat(sources));\n}\n/**\n * Convert an args array into an object.\n */\nexport function optionsFromArguments(defaults, argsArray, keys, objKey) {\n    var _a;\n    if (keys === void 0) { keys = []; }\n    var opts = {};\n    var args = Array.from(argsArray);\n    // if the first argument is an object and has an object key\n    if (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n        // if it's not part of the defaults\n        var partOfDefaults = Object.keys(args[0]).some(function (key) { return Reflect.has(defaults, key); });\n        if (!partOfDefaults) {\n            // merge that key\n            deepMerge(opts, (_a = {}, _a[objKey] = args[0], _a));\n            // remove the obj key from the keys\n            keys.splice(keys.indexOf(objKey), 1);\n            // shift the first argument off\n            args.shift();\n        }\n    }\n    if (args.length === 1 && isObject(args[0])) {\n        deepMerge(opts, args[0]);\n    }\n    else {\n        for (var i = 0; i < keys.length; i++) {\n            if (isDefined(args[i])) {\n                opts[keys[i]] = args[i];\n            }\n        }\n    }\n    return deepMerge(defaults, opts);\n}\n/**\n * Return this instances default values by calling Constructor.getDefaults()\n */\nexport function getDefaultsFromInstance(instance) {\n    return instance.constructor.getDefaults();\n}\n/**\n * Returns the fallback if the given object is undefined.\n * Take an array of arguments and return a formatted options object.\n */\nexport function defaultArg(given, fallback) {\n    if (isUndef(given)) {\n        return fallback;\n    }\n    else {\n        return given;\n    }\n}\n/**\n * Remove all of the properties belonging to omit from obj.\n */\nexport function omitFromObject(obj, omit) {\n    omit.forEach(function (prop) {\n        if (Reflect.has(obj, prop)) {\n            delete obj[prop];\n        }\n    });\n    return obj;\n}\n//# sourceMappingURL=Defaults.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n */\nvar Emitter = /** @class */ (function (_super) {\n    __extends(Emitter, _super);\n    function Emitter() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Emitter\";\n        return _this;\n    }\n    /**\n     *  Bind a callback to a specific event.\n     *  @param  event     The name of the event to listen for.\n     *  @param  callback  The callback to invoke when the event is emitted\n     */\n    Emitter.prototype.on = function (event, callback) {\n        var _this = this;\n        // split the event\n        var events = event.split(/\\W+/);\n        events.forEach(function (eventName) {\n            if (isUndef(_this._events)) {\n                _this._events = {};\n            }\n            if (!_this._events.hasOwnProperty(eventName)) {\n                _this._events[eventName] = [];\n            }\n            _this._events[eventName].push(callback);\n        });\n        return this;\n    };\n    /**\n     *  Bind a callback which is only invoked once\n     *  @param  event     The name of the event to listen for.\n     *  @param  callback  The callback to invoke when the event is emitted\n     */\n    Emitter.prototype.once = function (event, callback) {\n        var _this = this;\n        var boundCallback = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // invoke the callback\n            callback.apply(void 0, args);\n            // remove the event\n            _this.off(event, boundCallback);\n        };\n        this.on(event, boundCallback);\n        return this;\n    };\n    /**\n     *  Remove the event listener.\n     *  @param  event     The event to stop listening to.\n     *  @param  callback  The callback which was bound to the event with Emitter.on.\n     *                    If no callback is given, all callbacks events are removed.\n     */\n    Emitter.prototype.off = function (event, callback) {\n        var _this = this;\n        var events = event.split(/\\W+/);\n        events.forEach(function (eventName) {\n            if (isUndef(_this._events)) {\n                _this._events = {};\n            }\n            if (_this._events.hasOwnProperty(event)) {\n                if (isUndef(callback)) {\n                    _this._events[event] = [];\n                }\n                else {\n                    var eventList = _this._events[event];\n                    for (var i = 0; i < eventList.length; i++) {\n                        if (eventList[i] === callback) {\n                            eventList.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        });\n        return this;\n    };\n    /**\n     *  Invoke all of the callbacks bound to the event\n     *  with any arguments passed in.\n     *  @param  event  The name of the event.\n     *  @param args The arguments to pass to the functions listening.\n     */\n    Emitter.prototype.emit = function (event) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (this._events) {\n            if (this._events.hasOwnProperty(event)) {\n                var eventList = this._events[event].slice(0);\n                for (var i = 0, len = eventList.length; i < len; i++) {\n                    eventList[i].apply(this, args);\n                }\n            }\n        }\n        return this;\n    };\n    /**\n     *  Add Emitter functions (on/off/emit) to the object\n     */\n    Emitter.mixin = function (constr) {\n        // instance._events = {};\n        [\"on\", \"once\", \"off\", \"emit\"].forEach(function (name) {\n            var property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);\n            Object.defineProperty(constr.prototype, name, property);\n        });\n    };\n    /**\n     *  Clean up\n     */\n    Emitter.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._events = undefined;\n        return this;\n    };\n    return Emitter;\n}(Tone));\nexport { Emitter };\n//# sourceMappingURL=Emitter.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"./Defaults\";\n/**\n *  @class A Timeline class for scheduling and maintaining state\n *         along a timeline. All events must have a \"time\" property.\n *         Internally, events are stored in time order for fast\n *         retrieval.\n *  @param memory The number of previous events that are retained.\n */\nvar Timeline = /** @class */ (function (_super) {\n    __extends(Timeline, _super);\n    function Timeline() {\n        var _this = _super.call(this) || this;\n        _this.name = \"Timeline\";\n        /**\n         * The array of scheduled timeline events\n         */\n        _this._timeline = [];\n        var options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n        _this.memory = options.memory;\n        return _this;\n    }\n    Timeline.getDefaults = function () {\n        return {\n            memory: Infinity,\n        };\n    };\n    Object.defineProperty(Timeline.prototype, \"length\", {\n        /**\n         *  The number of items in the timeline.\n         */\n        get: function () {\n            return this._timeline.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Insert an event object onto the timeline. Events must have a \"time\" attribute.\n     *  @param event  The event object to insert into the timeline.\n     */\n    Timeline.prototype.add = function (event) {\n        // the event needs to have a time attribute\n        this.assert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n        event.time = event.time.valueOf();\n        var index = this._search(event.time);\n        this._timeline.splice(index + 1, 0, event);\n        // if the length is more than the memory, remove the previous ones\n        if (this.length > this.memory) {\n            var diff = this.length - this.memory;\n            this._timeline.splice(0, diff);\n        }\n        return this;\n    };\n    /**\n     *  Remove an event from the timeline.\n     *  @param  {Object}  event  The event object to remove from the list.\n     *  @returns {Timeline} this\n     */\n    Timeline.prototype.remove = function (event) {\n        var index = this._timeline.indexOf(event);\n        if (index !== -1) {\n            this._timeline.splice(index, 1);\n        }\n        return this;\n    };\n    /**\n     *  Get the nearest event whose time is less than or equal to the given time.\n     *  @param  time  The time to query.\n     */\n    Timeline.prototype.get = function (time, param) {\n        if (param === void 0) { param = \"time\"; }\n        var index = this._search(time, param);\n        if (index !== -1) {\n            return this._timeline[index];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     *  Return the first event in the timeline without removing it\n     *  @returns {Object} The first event object\n     */\n    Timeline.prototype.peek = function () {\n        return this._timeline[0];\n    };\n    /**\n     *  Return the first event in the timeline and remove it\n     */\n    Timeline.prototype.shift = function () {\n        return this._timeline.shift();\n    };\n    /**\n     *  Get the event which is scheduled after the given time.\n     *  @param  time  The time to query.\n     */\n    Timeline.prototype.getAfter = function (time, param) {\n        if (param === void 0) { param = \"time\"; }\n        var index = this._search(time, param);\n        if (index + 1 < this._timeline.length) {\n            return this._timeline[index + 1];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     *  Get the event before the event at the given time.\n     *  @param  time  The time to query.\n     */\n    Timeline.prototype.getBefore = function (time) {\n        var len = this._timeline.length;\n        // if it's after the last item, return the last item\n        if (len > 0 && this._timeline[len - 1].time < time) {\n            return this._timeline[len - 1];\n        }\n        var index = this._search(time);\n        if (index - 1 >= 0) {\n            return this._timeline[index - 1];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     *  Cancel events at and after the given time\n     *  @param  time  The time to query.\n     */\n    Timeline.prototype.cancel = function (after) {\n        if (this._timeline.length > 1) {\n            var index = this._search(after);\n            if (index >= 0) {\n                if (this._timeline[index].time === after) {\n                    // get the first item with that time\n                    for (var i = index; i >= 0; i--) {\n                        if (this._timeline[i].time === after) {\n                            index = i;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    this._timeline = this._timeline.slice(0, index);\n                }\n                else {\n                    this._timeline = this._timeline.slice(0, index + 1);\n                }\n            }\n            else {\n                this._timeline = [];\n            }\n        }\n        else if (this._timeline.length === 1) {\n            // the first item's time\n            if (this._timeline[0].time >= after) {\n                this._timeline = [];\n            }\n        }\n        return this;\n    };\n    /**\n     *  Cancel events before or equal to the given time.\n     *  @param  {Number}  time  The time to cancel before.\n     *  @returns {Timeline} this\n     */\n    Timeline.prototype.cancelBefore = function (time) {\n        var index = this._search(time);\n        if (index >= 0) {\n            this._timeline = this._timeline.slice(index + 1);\n        }\n        return this;\n    };\n    /**\n     * Returns the previous event if there is one. null otherwise\n     * @param  {Object} event The event to find the previous one of\n     * @return {Object}       The event right before the given event\n     */\n    Timeline.prototype.previousEvent = function (event) {\n        var index = this._timeline.indexOf(event);\n        if (index > 0) {\n            return this._timeline[index - 1];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     *  Does a binary search on the timeline array and returns the\n     *  nearest event index whose time is after or equal to the given time.\n     *  If a time is searched before the first index in the timeline, -1 is returned.\n     *  If the time is after the end, the index of the last item is returned.\n     *  @param  time\n     */\n    Timeline.prototype._search = function (time, param) {\n        if (param === void 0) { param = \"time\"; }\n        if (this._timeline.length === 0) {\n            return -1;\n        }\n        var beginning = 0;\n        var len = this._timeline.length;\n        var end = len;\n        if (len > 0 && this._timeline[len - 1][param] <= time) {\n            return len - 1;\n        }\n        while (beginning < end) {\n            // calculate the midpoint for roughly equal partition\n            var midPoint = Math.floor(beginning + (end - beginning) / 2);\n            var event_1 = this._timeline[midPoint];\n            var nextEvent = this._timeline[midPoint + 1];\n            if (event_1[param] === time) {\n                // choose the last one that has the same time\n                for (var i = midPoint; i < this._timeline.length; i++) {\n                    var testEvent = this._timeline[i];\n                    if (testEvent[param] === time) {\n                        midPoint = i;\n                    }\n                }\n                return midPoint;\n            }\n            else if (event_1[param] < time && nextEvent[param] > time) {\n                return midPoint;\n            }\n            else if (event_1[param] > time) {\n                // search lower\n                end = midPoint;\n            }\n            else {\n                // search upper\n                beginning = midPoint + 1;\n            }\n        }\n        return -1;\n    };\n    /**\n     *  Internal iterator. Applies extra safety checks for\n     *  removing items from the array.\n     */\n    Timeline.prototype._iterate = function (callback, lowerBound, upperBound) {\n        if (lowerBound === void 0) { lowerBound = 0; }\n        if (upperBound === void 0) { upperBound = this._timeline.length - 1; }\n        this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n    };\n    /**\n     *  Iterate over everything in the array\n     *  @param  callback The callback to invoke with every item\n     */\n    Timeline.prototype.forEach = function (callback) {\n        this._iterate(callback);\n        return this;\n    };\n    /**\n     *  Iterate over everything in the array at or before the given time.\n     *  @param  time The time to check if items are before\n     *  @param  callback The callback to invoke with every item\n     */\n    Timeline.prototype.forEachBefore = function (time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        var upperBound = this._search(time);\n        if (upperBound !== -1) {\n            this._iterate(callback, 0, upperBound);\n        }\n        return this;\n    };\n    /**\n     *  Iterate over everything in the array after the given time.\n     *  @param  time The time to check if items are before\n     *  @param  callback The callback to invoke with every item\n     */\n    Timeline.prototype.forEachAfter = function (time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        var lowerBound = this._search(time);\n        this._iterate(callback, lowerBound + 1);\n        return this;\n    };\n    /**\n     *  Iterate over everything in the array between the startTime and endTime.\n     *  The timerange is inclusive of the startTime, but exclusive of the endTime.\n     *  range = [startTime, endTime).\n     *  @param  startTime The time to check if items are before\n     *  @param  endTime The end of the test interval.\n     *  @param  callback The callback to invoke with every item\n     */\n    Timeline.prototype.forEachBetween = function (startTime, endTime, callback) {\n        var lowerBound = this._search(startTime);\n        var upperBound = this._search(endTime);\n        if (lowerBound !== -1 && upperBound !== -1) {\n            if (this._timeline[lowerBound].time !== startTime) {\n                lowerBound += 1;\n            }\n            // exclusive of the end time\n            if (this._timeline[upperBound].time === endTime) {\n                upperBound -= 1;\n            }\n            this._iterate(callback, lowerBound, upperBound);\n        }\n        else if (lowerBound === -1) {\n            this._iterate(callback, 0, upperBound);\n        }\n        return this;\n    };\n    /**\n     *  Iterate over everything in the array at or after the given time. Similar to\n     *  forEachAfter, but includes the item(s) at the given time.\n     *  @param  time The time to check if items are before\n     *  @param  callback The callback to invoke with every item\n     */\n    Timeline.prototype.forEachFrom = function (time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        var lowerBound = this._search(time);\n        // work backwards until the event time is less than time\n        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n            lowerBound--;\n        }\n        this._iterate(callback, lowerBound + 1);\n        return this;\n    };\n    /**\n     *  Iterate over everything in the array at the given time\n     *  @param  time The time to check if items are before\n     *  @param  callback The callback to invoke with every item\n     */\n    Timeline.prototype.forEachAtTime = function (time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        var upperBound = this._search(time);\n        if (upperBound !== -1) {\n            this._iterate(function (event) {\n                if (event.time === time) {\n                    callback(event);\n                }\n            }, 0, upperBound);\n        }\n        return this;\n    };\n    /**\n     *  Clean up.\n     */\n    Timeline.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._timeline = [];\n        return this;\n    };\n    return Timeline;\n}(Tone));\nexport { Timeline };\n//# sourceMappingURL=Timeline.js.map","///////////////////////////////////////////////////////////////////////////\n// INITIALIZING NEW CONTEXT\n///////////////////////////////////////////////////////////////////////////\n/**\n * Array of callbacks to invoke when a new context is created\n */\nvar notifyNewContext = [];\n/**\n * Used internally to setup a new Context\n */\nexport function onContextInit(cb) {\n    notifyNewContext.push(cb);\n}\n/**\n * Invoke any classes which need to also be initialized when a new context is created.\n */\nexport function initializeContext(ctx) {\n    // add any additional modules\n    notifyNewContext.forEach(function (cb) { return cb(ctx); });\n}\n/**\n * Array of callbacks to invoke when a new context is created\n */\nvar notifyCloseContext = [];\n/**\n * Used internally to tear down a Context\n */\nexport function onContextClose(cb) {\n    notifyCloseContext.push(cb);\n}\nexport function closeContext(ctx) {\n    // add any additional modules\n    notifyCloseContext.forEach(function (cb) { return cb(ctx); });\n}\n//# sourceMappingURL=ContextInitialization.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Ticker } from \"../clock/Ticker\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isString } from \"../util/TypeCheck\";\nimport { getAudioContext } from \"./AudioContext\";\nimport { closeContext, initializeContext } from \"./ContextInitialization\";\n/**\n * Wrapper around the native AudioContext.\n */\nvar Context = /** @class */ (function (_super) {\n    __extends(Context, _super);\n    function Context() {\n        var _this = _super.call(this) || this;\n        _this.name = \"Context\";\n        /**\n         *  An object containing all of the constants AudioBufferSourceNodes\n         */\n        _this._constants = new Map();\n        /**\n         *  All of the setTimeout events.\n         */\n        _this._timeouts = new Timeline();\n        /**\n         *  The timeout id counter\n         */\n        _this._timeoutIds = 0;\n        /**\n         * Private indicator if the context has been initialized\n         */\n        _this._initialized = false;\n        var options = optionsFromArguments(Context.getDefaults(), arguments, [\"context\"]);\n        _this._context = options.context;\n        _this._latencyHint = options.latencyHint;\n        _this.lookAhead = options.lookAhead;\n        _this._ticker = new Ticker(_this.emit.bind(_this, \"tick\"), options.clockSource, options.updateInterval);\n        _this.on(\"tick\", _this._timeoutLoop.bind(_this));\n        // fwd events from the context\n        _this._context.addEventListener(\"statechange\", function () {\n            _this.emit(\"statechange\", _this.state);\n        });\n        return _this;\n    }\n    Context.getDefaults = function () {\n        return {\n            clockSource: \"worker\",\n            context: getAudioContext(),\n            latencyHint: \"interactive\",\n            lookAhead: 0.1,\n            updateInterval: 0.03,\n        };\n    };\n    /**\n     * Finish setting up the context. **You usually do not need to do this manually.**\n     */\n    Context.prototype.initialize = function () {\n        if (!this._initialized) {\n            // add any additional modules\n            initializeContext(this);\n            this._initialized = true;\n        }\n        return this;\n    };\n    ///////////////////////////////////////////////////////////////////////\n    // BASE AUDIO CONTEXT METHODS\n    ///////////////////////////////////////////////////////////////////////\n    Context.prototype.createAnalyser = function () {\n        return this._context.createAnalyser();\n    };\n    Context.prototype.createOscillator = function () {\n        return this._context.createOscillator();\n    };\n    Context.prototype.createBufferSource = function () {\n        return this._context.createBufferSource();\n    };\n    Context.prototype.createBiquadFilter = function () {\n        return this._context.createBiquadFilter();\n    };\n    Context.prototype.createBuffer = function (numberOfChannels, length, sampleRate) {\n        return this._context.createBuffer(numberOfChannels, length, sampleRate);\n    };\n    Context.prototype.createChannelMerger = function (numberOfInputs) {\n        return this._context.createChannelMerger(numberOfInputs);\n    };\n    Context.prototype.createChannelSplitter = function (numberOfOutputs) {\n        return this._context.createChannelSplitter(numberOfOutputs);\n    };\n    Context.prototype.createConstantSource = function () {\n        return this._context.createConstantSource();\n    };\n    Context.prototype.createConvolver = function () {\n        return this._context.createConvolver();\n    };\n    Context.prototype.createDelay = function (maxDelayTime) {\n        return this._context.createDelay(maxDelayTime);\n    };\n    Context.prototype.createDynamicsCompressor = function () {\n        return this._context.createDynamicsCompressor();\n    };\n    Context.prototype.createGain = function () {\n        return this._context.createGain();\n    };\n    Context.prototype.createIIRFilter = function (feedforward, feedback) {\n        return this._context.createIIRFilter(feedforward, feedback);\n    };\n    Context.prototype.createPanner = function () {\n        return this._context.createPanner();\n    };\n    Context.prototype.createPeriodicWave = function (real, imag, constraints) {\n        return this._context.createPeriodicWave(real, imag, constraints);\n    };\n    Context.prototype.createStereoPanner = function () {\n        return this._context.createStereoPanner();\n    };\n    Context.prototype.createWaveShaper = function () {\n        return this._context.createWaveShaper();\n    };\n    Context.prototype.decodeAudioData = function (audioData) {\n        return this._context.decodeAudioData(audioData);\n    };\n    Object.defineProperty(Context.prototype, \"currentTime\", {\n        /**\n         *  The current time in seconds of the AudioContext.\n         */\n        get: function () {\n            return this._context.currentTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"state\", {\n        /**\n         *  The current time in seconds of the AudioContext.\n         */\n        get: function () {\n            return this._context.state;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"sampleRate\", {\n        /**\n         *  The current time in seconds of the AudioContext.\n         */\n        get: function () {\n            return this._context.sampleRate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"listener\", {\n        /**\n         *  The listener\n         */\n        get: function () {\n            return this._context.listener;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"transport\", {\n        /**\n         *  There is only one Transport per Context. It is created on initialization.\n         */\n        get: function () {\n            this.assert(this._initialized, \"The context must be initialized before being used by invoking context.initialize()\");\n            return this._transport;\n        },\n        set: function (t) {\n            this.assert(!this._initialized, \"The transport cannot be set after initialization.\");\n            this._transport = t;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"destination\", {\n        /**\n         *  A reference to the Context's destination node.\n         */\n        get: function () {\n            this.assert(this._initialized, \"The context must be initialized before being used by invoking context.initialize()\");\n            return this._destination;\n        },\n        set: function (d) {\n            this.assert(!this._initialized, \"The transport cannot be set after initialization.\");\n            this._destination = d;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"updateInterval\", {\n        ///////////////////////////////////////////////////////////////////////\n        // TICKER\n        ///////////////////////////////////////////////////////////////////////\n        /**\n         *  How often the interval callback is invoked.\n         *  This number corresponds to how responsive the scheduling\n         *  can be. context.updateInterval + context.lookAhead gives you the\n         *  total latency between scheduling an event and hearing it.\n         */\n        get: function () {\n            return this._ticker.updateInterval;\n        },\n        set: function (interval) {\n            this._ticker.updateInterval = interval;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"clockSource\", {\n        /**\n         *  What the source of the clock is, either \"worker\" (default),\n         *  \"timeout\", or \"offline\" (none).\n         */\n        get: function () {\n            return this._ticker.type;\n        },\n        set: function (type) {\n            this._ticker.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"latencyHint\", {\n        /**\n         * The type of playback, which affects tradeoffs between audio\n         * output latency and responsiveness.\n         * In addition to setting the value in seconds, the latencyHint also\n         * accepts the strings \"interactive\" (prioritizes low latency),\n         * \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n         * latency and performance), and \"fastest\" (lowest latency, might glitch more often).\n         * @example\n         * //set the lookAhead to 0.3 seconds\n         * Tone.context.latencyHint = 0.3;\n         */\n        get: function () {\n            return this._latencyHint;\n        },\n        set: function (hint) {\n            var lookAheadValue = 0;\n            this._latencyHint = hint;\n            if (isString(hint)) {\n                switch (hint) {\n                    case \"interactive\":\n                        lookAheadValue = 0.1;\n                        break;\n                    case \"playback\":\n                        lookAheadValue = 0.8;\n                        break;\n                    case \"balanced\":\n                        lookAheadValue = 0.25;\n                        break;\n                    case \"fastest\":\n                        lookAheadValue = 0.01;\n                        break;\n                }\n            }\n            this.lookAhead = lookAheadValue;\n            this.updateInterval = lookAheadValue / 3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Context.prototype, \"rawContext\", {\n        /**\n         *  The unwrapped AudioContext.\n         */\n        get: function () {\n            return this._context;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * The current audio context time plus a short {@link lookAhead}.\n     */\n    Context.prototype.now = function () {\n        return this._context.currentTime + this.lookAhead;\n    };\n    /**\n     *  Starts the audio context from a suspended state. This is required\n     *  to initially start the AudioContext.\n     */\n    Context.prototype.resume = function () {\n        if (this._context.state === \"suspended\" && this._context instanceof AudioContext) {\n            return this._context.resume();\n        }\n        else {\n            return Promise.resolve();\n        }\n    };\n    /**\n     *  Promise which is invoked when the context is running.\n     *  Tries to resume the context if it's not started.\n     */\n    Context.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this._context instanceof AudioContext)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._context.close()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        if (this._initialized) {\n                            closeContext(this);\n                        }\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     *  Generate a looped buffer at some constant value.\n     */\n    Context.prototype.getConstant = function (val) {\n        if (this._constants.has(val)) {\n            return this._constants.get(val);\n        }\n        else {\n            var buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n            var arr = buffer.getChannelData(0);\n            for (var i = 0; i < arr.length; i++) {\n                arr[i] = val;\n            }\n            var constant = this._context.createBufferSource();\n            constant.channelCount = 1;\n            constant.channelCountMode = \"explicit\";\n            constant.buffer = buffer;\n            constant.loop = true;\n            constant.start(0);\n            this._constants.set(val, constant);\n            return constant;\n        }\n    };\n    /**\n     *  Clean up. Also closes the audio context.\n     */\n    Context.prototype.dispose = function () {\n        var _this = this;\n        _super.prototype.dispose.call(this);\n        this._ticker.dispose();\n        this._timeouts.dispose();\n        Object.keys(this._constants).map(function (val) { return _this._constants[val].disconnect(); });\n        return this;\n    };\n    ///////////////////////////////////////////////////////////////////////\n    // TIMEOUTS\n    ///////////////////////////////////////////////////////////////////////\n    /**\n     *  The private loop which keeps track of the context scheduled timeouts\n     *  Is invoked from the clock source\n     */\n    Context.prototype._timeoutLoop = function () {\n        var now = this.now();\n        var firstEvent = this._timeouts.peek();\n        while (this._timeouts.length && firstEvent && firstEvent.time <= now) {\n            // invoke the callback\n            firstEvent.callback();\n            // shift the first event off\n            this._timeouts.shift();\n            // get the next one\n            firstEvent = this._timeouts.peek();\n        }\n    };\n    /**\n     *  A setTimeout which is guarented by the clock source.\n     *  Also runs in the offline context.\n     *  @param  fn       The callback to invoke\n     *  @param  timeout  The timeout in seconds\n     *  @returns ID to use when invoking Context.clearTimeout\n     */\n    Context.prototype.setTimeout = function (fn, timeout) {\n        this._timeoutIds++;\n        var now = this.now();\n        this._timeouts.add({\n            callback: fn,\n            id: this._timeoutIds,\n            time: now + timeout,\n        });\n        return this._timeoutIds;\n    };\n    /**\n     *  Clears a previously scheduled timeout with Tone.context.setTimeout\n     *  @param  id  The ID returned from setTimeout\n     */\n    Context.prototype.clearTimeout = function (id) {\n        var _this = this;\n        this._timeouts.forEach(function (event) {\n            if (event.id === id) {\n                _this._timeouts.remove(event);\n            }\n        });\n        return this;\n    };\n    return Context;\n}(Emitter));\nexport { Context };\n//# sourceMappingURL=Context.js.map","import { version } from \"../version\";\nimport { hasAudioContext, theWindow } from \"./context/AudioContext\";\nimport { Context } from \"./context/Context\";\n/**\n * This dummy context is used to avoid throwing immediate errors when importing in Node.js\n */\nvar dummyContext = {\n    destination: {},\n    transport: {},\n};\n/**\n * The global audio context which is getable and assignable through\n * getContext and setContext\n */\nvar globalContext = dummyContext;\n/**\n * Returns the default system-wide AudioContext\n */\nexport function getContext() {\n    if (globalContext === dummyContext && hasAudioContext) {\n        setContext(new Context());\n    }\n    return globalContext;\n}\n/**\n * Set the default audio context\n */\nexport function setContext(context) {\n    globalContext = context;\n    context.initialize();\n}\n/**\n * Most browsers will not play _any_ audio until a user\n * clicks something (like a play button). Invoke this method\n * on a click or keypress event handler to start the audio context.\n * More about the Autoplay policy\n * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n * @example\n * document.querySelector('#playbutton').addEventListener('click', () => Tone.start())\n */\nexport function start() {\n    return globalContext.resume();\n}\n/**\n * Log Tone.js + version in the console.\n */\nif (theWindow && !theWindow.TONE_SILENCE_LOGGING) {\n    var prefix = \"v\";\n    if (version === \"dev\") {\n        prefix = \"\";\n    }\n    var printString = \" * Tone.js \" + prefix + version + \" * \";\n    // tslint:disable-next-line: no-console\n    console.log(\"%c\" + printString, \"background: #000; color: #fff\");\n}\n//# sourceMappingURL=Global.js.map","/**\n *  Equal power gain scale. Good for cross-fading.\n *  @param  percent (0-1)\n */\nexport function equalPowerScale(percent) {\n    var piFactor = 0.5 * Math.PI;\n    return Math.sin(percent * piFactor);\n}\n/**\n *  Convert decibels into gain.\n */\nexport function dbToGain(db) {\n    return Math.pow(10, db / 20);\n}\n/**\n *  Convert gain to decibels.\n */\nexport function gainToDb(gain) {\n    return 20 * (Math.log(gain) / Math.LN10);\n}\n/**\n * Convert an interval (in semitones) to a frequency ratio.\n * @param interval the number of semitones above the base note\n * @example\n * tone.intervalToFrequencyRatio(0); // 1\n * tone.intervalToFrequencyRatio(12); // 2\n * tone.intervalToFrequencyRatio(-12); // 0.5\n */\nexport function intervalToFrequencyRatio(interval) {\n    return Math.pow(2, (interval / 12));\n}\n/**\n * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n * to generate all the other pitch values from notes. A4's values in Hertz.\n */\nvar A4 = 440;\nexport function getA4() {\n    return A4;\n}\nexport function setA4(freq) {\n    A4 = freq;\n}\n/**\n * Convert a frequency value to a MIDI note.\n * @param frequency The value to frequency value to convert.\n * @example\n * ftom(440); // returns 69\n */\nexport function ftom(frequency) {\n    return 69 + Math.round(12 * Math.log2(frequency / A4));\n}\n/**\n * Convert a MIDI note to frequency value.\n * @param  midi The midi number to convert.\n * @return The corresponding frequency value\n * @example\n */\nexport function mtof(midi) {\n    return A4 * Math.pow(2, (midi - 69) / 12);\n}\n//# sourceMappingURL=Conversions.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Tone } from \"../Tone\";\nimport { isDefined, isObject, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * TimeBase is a flexible encoding of time which can be evaluated to and from a string.\n * @param  val    The time value as a number, string or object\n * @param  units  Unit values\n * @example\n * new TimeBase(4, \"n\")\n * new TimeBase(2, \"t\")\n * new TimeBase(\"2t\")\n * new TimeBase({\"2t\" : 2})\n * new TimeBase(\"2t\") + new TimeBase(\"4n\");\n */\nvar TimeBaseClass = /** @class */ (function (_super) {\n    __extends(TimeBaseClass, _super);\n    function TimeBaseClass(context, value, units) {\n        var _this = _super.call(this) || this;\n        /**\n         * The default units\n         */\n        _this.defaultUnits = \"s\";\n        _this._val = value;\n        _this._units = units;\n        _this.context = context;\n        _this._expressions = _this._getExpressions();\n        return _this;\n    }\n    /**\n     * All of the time encoding expressions\n     */\n    TimeBaseClass.prototype._getExpressions = function () {\n        var _this = this;\n        return {\n            hz: {\n                method: function (value) {\n                    return _this._frequencyToUnits(parseFloat(value));\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)hz$/i,\n            },\n            i: {\n                method: function (value) {\n                    return _this._ticksToUnits(parseInt(value, 10));\n                },\n                regexp: /^(\\d+)i$/i,\n            },\n            m: {\n                method: function (value) {\n                    return _this._beatsToUnits(parseInt(value, 10) * _this._getTimeSignature());\n                },\n                regexp: /^(\\d+)m$/i,\n            },\n            n: {\n                method: function (value, dot) {\n                    var numericValue = parseInt(value, 10);\n                    var scalar = dot === \".\" ? 1.5 : 1;\n                    if (numericValue === 1) {\n                        return _this._beatsToUnits(_this._getTimeSignature()) * scalar;\n                    }\n                    else {\n                        return _this._beatsToUnits(4 / numericValue) * scalar;\n                    }\n                },\n                regexp: /^(\\d+)n(\\.?)$/i,\n            },\n            number: {\n                method: function (value) {\n                    return _this._expressions[_this.defaultUnits].method.call(_this, value);\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)$/,\n            },\n            s: {\n                method: function (value) {\n                    return _this._secondsToUnits(parseFloat(value));\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)s$/,\n            },\n            samples: {\n                method: function (value) {\n                    return parseInt(value, 10) / _this.context.sampleRate;\n                },\n                regexp: /^(\\d+)samples$/,\n            },\n            t: {\n                method: function (value) {\n                    var numericValue = parseInt(value, 10);\n                    return _this._beatsToUnits(8 / (Math.floor(numericValue) * 3));\n                },\n                regexp: /^(\\d+)t$/i,\n            },\n            tr: {\n                method: function (m, q, s) {\n                    var total = 0;\n                    if (m && m !== \"0\") {\n                        total += _this._beatsToUnits(_this._getTimeSignature() * parseFloat(m));\n                    }\n                    if (q && q !== \"0\") {\n                        total += _this._beatsToUnits(parseFloat(q));\n                    }\n                    if (s && s !== \"0\") {\n                        total += _this._beatsToUnits(parseFloat(s) / 4);\n                    }\n                    return total;\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n            },\n        };\n    };\n    ///////////////////////////////////////////////////////////////////////////\n    // \tVALUE OF\n    ///////////////////////////////////////////////////////////////////////////\n    /**\n     *  Evaluate the time value. Returns the time in seconds.\n     */\n    TimeBaseClass.prototype.valueOf = function () {\n        if (this._val instanceof TimeBaseClass) {\n            this.fromType(this._val);\n        }\n        if (isUndef(this._val)) {\n            return this._noArg();\n        }\n        else if (isString(this._val) && isUndef(this._units)) {\n            for (var units in this._expressions) {\n                if (this._expressions[units].regexp.test(this._val.trim())) {\n                    this._units = units;\n                    break;\n                }\n            }\n        }\n        else if (isObject(this._val)) {\n            var total = 0;\n            for (var typeName in this._val) {\n                if (isDefined(this._val[typeName])) {\n                    var quantity = this._val[typeName];\n                    // @ts-ignore\n                    var time = (new this.constructor(this.context, typeName)).valueOf() * quantity;\n                    total += time;\n                }\n            }\n            return total;\n        }\n        if (isDefined(this._units)) {\n            var expr = this._expressions[this._units];\n            var matching = this._val.toString().trim().match(expr.regexp);\n            if (matching) {\n                return expr.method.apply(this, matching.slice(1));\n            }\n            else {\n                return expr.method.call(this, this._val);\n            }\n        }\n        else if (isString(this._val)) {\n            return parseFloat(this._val);\n        }\n        else {\n            return this._val;\n        }\n    };\n    ///////////////////////////////////////////////////////////////////////////\n    // \tUNIT CONVERSIONS\n    ///////////////////////////////////////////////////////////////////////////\n    /**\n     *  Returns the value of a frequency in the current units\n     */\n    TimeBaseClass.prototype._frequencyToUnits = function (freq) {\n        return 1 / freq;\n    };\n    /**\n     *  Return the value of the beats in the current units\n     */\n    TimeBaseClass.prototype._beatsToUnits = function (beats) {\n        return (60 / this._getBpm()) * beats;\n    };\n    /**\n     *  Returns the value of a second in the current units\n     */\n    TimeBaseClass.prototype._secondsToUnits = function (seconds) {\n        return seconds;\n    };\n    /**\n     *  Returns the value of a tick in the current time units\n     *  @private\n     */\n    TimeBaseClass.prototype._ticksToUnits = function (ticks) {\n        return (ticks * (this._beatsToUnits(1)) / this._getPPQ());\n    };\n    /**\n     *  With no arguments, return 'now'\n     */\n    TimeBaseClass.prototype._noArg = function () {\n        return this._now();\n    };\n    ///////////////////////////////////////////////////////////////////////////\n    // \tTEMPO CONVERSIONS\n    ///////////////////////////////////////////////////////////////////////////\n    /**\n     * Return the bpm\n     */\n    TimeBaseClass.prototype._getBpm = function () {\n        return this.context.transport.bpm.value;\n    };\n    /**\n     * Return the timeSignature\n     */\n    TimeBaseClass.prototype._getTimeSignature = function () {\n        return this.context.transport.timeSignature;\n    };\n    /**\n     * Return the PPQ or 192 if Transport is not available\n     */\n    TimeBaseClass.prototype._getPPQ = function () {\n        return this.context.transport.PPQ;\n    };\n    ///////////////////////////////////////////////////////////////////////////\n    // \tCONVERSION INTERFACE\n    ///////////////////////////////////////////////////////////////////////////\n    /**\n     * Coerce a time type into this units type.\n     * @param type Any time type units\n     */\n    TimeBaseClass.prototype.fromType = function (type) {\n        this._units = undefined;\n        switch (this.defaultUnits) {\n            case \"s\":\n                this._val = type.toSeconds();\n                break;\n            case \"i\":\n                this._val = type.toTicks();\n                break;\n            case \"hz\":\n                this._val = type.toFrequency();\n                break;\n            case \"midi\":\n                this._val = type.toMidi();\n                break;\n        }\n        return this;\n    };\n    /**\n     *  Return the value in hertz\n     */\n    TimeBaseClass.prototype.toFrequency = function () {\n        return 1 / this.toSeconds();\n    };\n    /**\n     *  Return the time in samples\n     */\n    TimeBaseClass.prototype.toSamples = function () {\n        return this.toSeconds() * this.context.sampleRate;\n    };\n    /**\n     *  Return the time in milliseconds.\n     */\n    TimeBaseClass.prototype.toMilliseconds = function () {\n        return this.toSeconds() * 1000;\n    };\n    return TimeBaseClass;\n}(Tone));\nexport { TimeBaseClass };\n//# sourceMappingURL=TimeBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getContext } from \"../Global\";\nimport { ftom } from \"./Conversions\";\nimport { TimeBaseClass } from \"./TimeBase\";\n/**\n * TimeClass is a primitive type for encoding and decoding Time values.\n * TimeClass can be passed into the parameter of any method which takes time as an argument.\n * @param  val    The time value.\n * @param  units  The units of the value.\n * @example\n * var t = Time(\"4n\");//a quarter note\n */\nvar TimeClass = /** @class */ (function (_super) {\n    __extends(TimeClass, _super);\n    function TimeClass() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Time\";\n        return _this;\n    }\n    TimeClass.prototype._getExpressions = function () {\n        var _this = this;\n        return Object.assign(_super.prototype._getExpressions.call(this), {\n            now: {\n                method: function (capture) {\n                    return _this._now() + new _this.constructor(_this.context, capture).valueOf();\n                },\n                regexp: /^\\+(.+)/,\n            },\n            quantize: {\n                method: function (capture) {\n                    var quantTo = new TimeClass(_this.context, capture).valueOf();\n                    return _this._secondsToUnits(_this.context.transport.nextSubdivision(quantTo));\n                },\n                regexp: /^@(.+)/,\n            },\n        });\n    };\n    /**\n     * Quantize the time by the given subdivision. Optionally add a\n     * percentage which will move the time value towards the ideal\n     * quantized value by that percentage.\n     * @param  val    The subdivision to quantize to\n     * @param  percent  Move the time value towards the quantized value by a percentage.\n     * @example\n     * Time(21).quantize(2) //returns 22\n     * Time(0.6).quantize(\"4n\", 0.5) //returns 0.55\n     */\n    TimeClass.prototype.quantize = function (subdiv, percent) {\n        if (percent === void 0) { percent = 1; }\n        var subdivision = new this.constructor(this.context, subdiv).valueOf();\n        var value = this.valueOf();\n        var multiple = Math.round(value / subdivision);\n        var ideal = multiple * subdivision;\n        var diff = ideal - value;\n        return value + diff * percent;\n    };\n    ///////////////////////////////////////////////////////////////////////////\n    // CONVERSIONS\n    ///////////////////////////////////////////////////////////////////////////\n    /**\n     *  Convert a Time to Notation. The notation values are will be the\n     *  closest representation between 1m to 128th note.\n     *  @return {Notation}\n     *  @example\n     * //if the Transport is at 120bpm:\n     * Time(2).toNotation();//returns \"1m\"\n     */\n    TimeClass.prototype.toNotation = function () {\n        var _this = this;\n        var time = this.toSeconds();\n        var testNotations = [\"1m\"];\n        for (var power = 1; power < 9; power++) {\n            var subdiv = Math.pow(2, power);\n            testNotations.push(subdiv + \"n.\");\n            testNotations.push(subdiv + \"n\");\n            testNotations.push(subdiv + \"t\");\n        }\n        testNotations.push(\"0\");\n        // find the closets notation representation\n        var closest = testNotations[0];\n        var closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();\n        testNotations.forEach(function (notation) {\n            var notationSeconds = new TimeClass(_this.context, notation).toSeconds();\n            if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {\n                closest = notation;\n                closestSeconds = notationSeconds;\n            }\n        });\n        return closest;\n    };\n    /**\n     *  Return the time encoded as Bars:Beats:Sixteenths.\n     */\n    TimeClass.prototype.toBarsBeatsSixteenths = function () {\n        var quarterTime = this._beatsToUnits(1);\n        var quarters = this.valueOf() / quarterTime;\n        quarters = parseFloat(quarters.toFixed(4));\n        var measures = Math.floor(quarters / this._getTimeSignature());\n        var sixteenths = (quarters % 1) * 4;\n        quarters = Math.floor(quarters) % this._getTimeSignature();\n        var sixteenthString = sixteenths.toString();\n        if (sixteenthString.length > 3) {\n            // the additional parseFloat removes insignificant trailing zeroes\n            sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));\n        }\n        var progress = [measures, quarters, sixteenths];\n        return progress.join(\":\");\n    };\n    /**\n     *  Return the time in ticks.\n     */\n    TimeClass.prototype.toTicks = function () {\n        var quarterTime = this._beatsToUnits(1);\n        var quarters = this.valueOf() / quarterTime;\n        return Math.round(quarters * this._getPPQ());\n    };\n    /**\n     *  Return the time in seconds.\n     */\n    TimeClass.prototype.toSeconds = function () {\n        return this.valueOf();\n    };\n    /**\n     *  Return the value as a midi note.\n     */\n    TimeClass.prototype.toMidi = function () {\n        return ftom(this.toFrequency());\n    };\n    TimeClass.prototype._now = function () {\n        return this.context.now();\n    };\n    return TimeClass;\n}(TimeBaseClass));\nexport { TimeClass };\n/**\n * Create a TimeClass from a time string or number.\n * @param value A value which reprsents time\n * @param units The value's units if they can't be inferred by the value.\n */\nexport function Time(value, units) {\n    return new TimeClass(getContext(), value, units);\n}\n//# sourceMappingURL=Time.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getContext } from \"../Global\";\nimport { intervalToFrequencyRatio, mtof } from \"./Conversions\";\nimport { ftom, getA4, setA4 } from \"./Conversions\";\nimport { TimeClass } from \"./Time\";\n/**\n * Frequency is a primitive type for encoding Frequency values.\n * Eventually all time values are evaluated to hertz using the `eval` method.\n * @example\n * Frequency(\"C3\") // 261\n * Frequency(38, \"midi\") //\n * Frequency(\"C3\").transpose(4);\n */\nvar FrequencyClass = /** @class */ (function (_super) {\n    __extends(FrequencyClass, _super);\n    function FrequencyClass() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Frequency\";\n        _this.defaultUnits = \"hz\";\n        return _this;\n    }\n    Object.defineProperty(FrequencyClass, \"A4\", {\n        /**\n         * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n         * to generate all the other pitch values from notes. A4's values in Hertz.\n         */\n        get: function () {\n            return getA4();\n        },\n        set: function (freq) {\n            setA4(freq);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ///////////////////////////////////////////////////////////////////////////\n    // \tAUGMENT BASE EXPRESSIONS\n    ///////////////////////////////////////////////////////////////////////////\n    FrequencyClass.prototype._getExpressions = function () {\n        return Object.assign({}, _super.prototype._getExpressions.call(this), {\n            midi: {\n                regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n                method: function (value) {\n                    if (this.defaultUnits === \"midi\") {\n                        return value;\n                    }\n                    else {\n                        return FrequencyClass.mtof(value);\n                    }\n                },\n            },\n            note: {\n                regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n                method: function (pitch, octave) {\n                    var index = noteToScaleIndex[pitch.toLowerCase()];\n                    var noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n                    if (this.defaultUnits === \"midi\") {\n                        return noteNumber;\n                    }\n                    else {\n                        return FrequencyClass.mtof(noteNumber);\n                    }\n                },\n            },\n            tr: {\n                regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n                method: function (m, q, s) {\n                    var total = 1;\n                    if (m && m !== \"0\") {\n                        total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n                    }\n                    if (q && q !== \"0\") {\n                        total *= this._beatsToUnits(parseFloat(q));\n                    }\n                    if (s && s !== \"0\") {\n                        total *= this._beatsToUnits(parseFloat(s) / 4);\n                    }\n                    return total;\n                },\n            },\n        });\n    };\n    ///////////////////////////////////////////////////////////////////////////\n    // \tEXPRESSIONS\n    ///////////////////////////////////////////////////////////////////////////\n    /**\n     *  Transposes the frequency by the given number of semitones.\n     *  @return  A new transposed frequency\n     *  @example\n     * Frequency(\"A4\").transpose(3); //\"C5\"\n     */\n    FrequencyClass.prototype.transpose = function (interval) {\n        return new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));\n    };\n    /**\n     *  Takes an array of semitone intervals and returns\n     *  an array of frequencies transposed by those intervals.\n     *  @return  Returns an array of Frequencies\n     *  @example\n     * Frequency(\"A4\").harmonize([0, 3, 7]); //[\"A4\", \"C5\", \"E5\"]\n     */\n    FrequencyClass.prototype.harmonize = function (intervals) {\n        var _this = this;\n        return intervals.map(function (interval) {\n            return _this.transpose(interval);\n        });\n    };\n    ///////////////////////////////////////////////////////////////////////////\n    // \tUNIT CONVERSIONS\n    ///////////////////////////////////////////////////////////////////////////\n    /**\n     *  Return the value of the frequency as a MIDI note\n     *  @return  {MIDI}\n     *  @example\n     * Frequency(\"C4\").toMidi(); //60\n     */\n    FrequencyClass.prototype.toMidi = function () {\n        return ftom(this.valueOf());\n    };\n    /**\n     *  Return the value of the frequency in Scientific Pitch Notation\n     *  @return  {Note}\n     *  @example\n     * Frequency(69, \"midi\").toNote(); //\"A4\"\n     */\n    FrequencyClass.prototype.toNote = function () {\n        var freq = this.toFrequency();\n        var log = Math.log2(freq / FrequencyClass.A4);\n        var noteNumber = Math.round(12 * log) + 57;\n        var octave = Math.floor(noteNumber / 12);\n        if (octave < 0) {\n            noteNumber += -12 * octave;\n        }\n        var noteName = scaleIndexToNote[noteNumber % 12];\n        return noteName + octave.toString();\n    };\n    /**\n     *  Return the duration of one cycle in seconds.\n     */\n    FrequencyClass.prototype.toSeconds = function () {\n        return 1 / _super.prototype.toSeconds.call(this);\n    };\n    /**\n     *  Return the duration of one cycle in ticks\n     */\n    FrequencyClass.prototype.toTicks = function () {\n        var quarterTime = this._beatsToUnits(1);\n        var quarters = this.valueOf() / quarterTime;\n        return Math.floor(quarters * this._getPPQ());\n    };\n    ///////////////////////////////////////////////////////////////////////////\n    // \tUNIT CONVERSIONS HELPERS\n    ///////////////////////////////////////////////////////////////////////////\n    /**\n     *  With no arguments, return 0\n     */\n    FrequencyClass.prototype._noArg = function () {\n        return 0;\n    };\n    /**\n     *  Returns the value of a frequency in the current units\n     */\n    FrequencyClass.prototype._frequencyToUnits = function (freq) {\n        return freq;\n    };\n    /**\n     *  Returns the value of a tick in the current time units\n     */\n    FrequencyClass.prototype._ticksToUnits = function (ticks) {\n        return 1 / ((ticks * 60) / (this._getBpm() * this._getPPQ()));\n    };\n    /**\n     *  Return the value of the beats in the current units\n     */\n    FrequencyClass.prototype._beatsToUnits = function (beats) {\n        return 1 / _super.prototype._beatsToUnits.call(this, beats);\n    };\n    /**\n     *  Returns the value of a second in the current units\n     */\n    FrequencyClass.prototype._secondsToUnits = function (seconds) {\n        return 1 / seconds;\n    };\n    /**\n     * Convert a MIDI note to frequency value.\n     * @param  midi The midi number to convert.\n     * @return The corresponding frequency value\n     * @example\n     * FrequencyClass.mtof(69); // returns 440\n     */\n    FrequencyClass.mtof = function (midi) {\n        return mtof(midi);\n    };\n    /**\n     * Convert a frequency value to a MIDI note.\n     * @param frequency The value to frequency value to convert.\n     * @example\n     * Frequency.ftom(440); // returns 69\n     */\n    FrequencyClass.ftom = function (frequency) {\n        return ftom(frequency);\n    };\n    return FrequencyClass;\n}(TimeClass));\nexport { FrequencyClass };\n///////////////////////////////////////////////////////////////////////////\n// \tFREQUENCY CONVERSIONS\n///////////////////////////////////////////////////////////////////////////\n/**\n *  Note to scale index\n *  @type  {Object}\n *  @private\n */\nvar noteToScaleIndex = {\n    // tslint:disable-next-line\n    \"cbb\": -2, \"cb\": -1, \"c\": 0, \"c#\": 1, \"cx\": 2,\n    \"dbb\": 0, \"db\": 1, \"d\": 2, \"d#\": 3, \"dx\": 4,\n    \"ebb\": 2, \"eb\": 3, \"e\": 4, \"e#\": 5, \"ex\": 6,\n    \"fbb\": 3, \"fb\": 4, \"f\": 5, \"f#\": 6, \"fx\": 7,\n    \"gbb\": 5, \"gb\": 6, \"g\": 7, \"g#\": 8, \"gx\": 9,\n    \"abb\": 7, \"ab\": 8, \"a\": 9, \"a#\": 10, \"ax\": 11,\n    \"bbb\": 9, \"bb\": 10, \"b\": 11, \"b#\": 12, \"bx\": 13,\n};\n/**\n *  scale index to note (sharps)\n *  @type  {Array}\n *  @private\n */\nvar scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n/**\n * Convert a value into a FrequencyClass object.\n */\nexport function Frequency(value, units) {\n    return new FrequencyClass(getContext(), value, units);\n}\n//# sourceMappingURL=Frequency.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getContext } from \"../Global\";\nimport { TimeClass } from \"./Time\";\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n */\nvar TransportTimeClass = /** @class */ (function (_super) {\n    __extends(TransportTimeClass, _super);\n    function TransportTimeClass() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"TransportTime\";\n        return _this;\n    }\n    /**\n     * Return the current time in whichever context is relevant\n     */\n    TransportTimeClass.prototype._now = function () {\n        return this.context.transport.seconds;\n    };\n    return TransportTimeClass;\n}(TimeClass));\nexport { TransportTimeClass };\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n */\nexport function TransportTime(value, units) {\n    return new TransportTimeClass(getContext(), value, units);\n}\n//# sourceMappingURL=TransportTime.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { FrequencyClass } from \"../type/Frequency\";\nimport { TimeClass } from \"../type/Time\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { getDefaultsFromInstance, optionsFromArguments } from \"../util/Defaults\";\nimport { isArray, isBoolean, isDefined, isNumber, isString } from \"../util/TypeCheck\";\n/**\n * The Base class for all nodes that have an AudioContext.\n */\nvar ToneWithContext = /** @class */ (function (_super) {\n    __extends(ToneWithContext, _super);\n    function ToneWithContext(context) {\n        var _this = this;\n        var options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, [\"context\"]);\n        _this = _super.call(this) || this;\n        if (_this.defaultContext) {\n            _this.context = _this.defaultContext;\n        }\n        else {\n            _this.context = options.context;\n        }\n        return _this;\n    }\n    ToneWithContext.getDefaults = function () {\n        return {\n            context: getContext(),\n        };\n    };\n    /**\n     * Return the current time of the Context clock plus the lookAhead.\n     */\n    ToneWithContext.prototype.now = function () {\n        return this.context.currentTime + this.context.lookAhead;\n    };\n    /**\n     * Return the current time of the Context clock without any lookAhead.\n     */\n    ToneWithContext.prototype.immediate = function () {\n        return this.context.currentTime;\n    };\n    Object.defineProperty(ToneWithContext.prototype, \"sampleTime\", {\n        /**\n         * The duration in seconds of one sample.\n         */\n        get: function () {\n            return 1 / this.context.sampleRate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneWithContext.prototype, \"blockTime\", {\n        /**\n         * The number of seconds of 1 processing block (128 samples)\n         */\n        get: function () {\n            return 128 / this.context.sampleRate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Convert the incoming time to seconds\n     */\n    ToneWithContext.prototype.toSeconds = function (time) {\n        return new TimeClass(this.context, time).toSeconds();\n    };\n    /**\n     * Convert the input to a frequency number\n     */\n    ToneWithContext.prototype.toFrequency = function (freq) {\n        return new FrequencyClass(this.context, freq).toFrequency();\n    };\n    /**\n     * Convert the input time into ticks\n     */\n    ToneWithContext.prototype.toTicks = function (time) {\n        return new TransportTimeClass(this.context, time).toTicks();\n    };\n    ///////////////////////////////////////////////////////////////////////////\n    // \tGET/SET\n    ///////////////////////////////////////////////////////////////////////////\n    /**\n     * Get the object's attributes.\n     * @example\n     * osc.get();\n     * //returns {\"type\" : \"sine\", \"frequency\" : 440, ...etc}\n     */\n    ToneWithContext.prototype.get = function () {\n        var _this = this;\n        var defaults = getDefaultsFromInstance(this);\n        Object.keys(defaults).forEach(function (attribute) {\n            if (Reflect.has(_this, attribute)) {\n                var member = _this[attribute];\n                if (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {\n                    defaults[attribute] = member.value;\n                }\n                else if (member instanceof ToneWithContext) {\n                    defaults[attribute] = member.get();\n                    // otherwise make sure it's a serializable type\n                }\n                else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {\n                    defaults[attribute] = member;\n                }\n                else {\n                    // remove all undefined and unserializable attributes\n                    delete defaults[attribute];\n                }\n            }\n        });\n        return defaults;\n    };\n    /**\n     * Set the parameters at once. Either pass in an\n     * object mapping parameters to values, or to set a\n     * single parameter, by passing in a string and value.\n     * The last argument is an optional ramp time which\n     * will ramp any signal values to their destination value\n     * over the duration of the rampTime.\n     * @param  params\n     * @example\n     * //set values using an object\n     * filter.set({\n     * \t\"frequency\" : 300,\n     * \t\"type\" : \"highpass\"\n     * });\n     */\n    ToneWithContext.prototype.set = function (props) {\n        var _this = this;\n        Object.keys(props).forEach(function (attribute) {\n            if (Reflect.has(_this, attribute) && isDefined(_this[attribute])) {\n                if (_this[attribute] && isDefined(_this[attribute].value) && isDefined(_this[attribute].setValueAtTime)) {\n                    _this[attribute].value = props[attribute];\n                }\n                else if (_this[attribute] instanceof ToneWithContext) {\n                    _this[attribute].set(props[attribute]);\n                }\n                else {\n                    _this[attribute] = props[attribute];\n                }\n            }\n        });\n        return this;\n    };\n    return ToneWithContext;\n}(Tone));\nexport { ToneWithContext };\n//# sourceMappingURL=ToneWithContext.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { dbToGain, gainToDb } from \"../type/Conversions\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { ToneWithContext } from \"./ToneWithContext\";\n/**\n *  Param wraps the native Web Audio's AudioParam to provide\n * additional unit conversion functionality. It also\n * serves as a base-class for classes which have a single,\n * automatable parameter.\n */\nvar Param = /** @class */ (function (_super) {\n    __extends(Param, _super);\n    function Param() {\n        var _this = _super.call(this, optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"])) || this;\n        _this.name = \"Param\";\n        _this.overridden = false;\n        /**\n         *  The minimum output value\n         */\n        _this._minOutput = 1e-5;\n        var options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n        _this.assert(isDefined(options.param) && options.param instanceof AudioParam, \"param must be an AudioParam\");\n        // initialize\n        _this._param = _this.input = options.param;\n        _this._events = new Timeline(1000);\n        _this._initialValue = _this._param.value;\n        _this.units = options.units;\n        _this.convert = options.convert;\n        // if the value is defined, set it immediately\n        if (isDefined(options.value)) {\n            _this.setValueAtTime(options.value, 0);\n        }\n        return _this;\n    }\n    Param.getDefaults = function () {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            convert: true,\n            units: \"number\",\n        });\n    };\n    Object.defineProperty(Param.prototype, \"value\", {\n        get: function () {\n            var now = this.now();\n            return this.getValueAtTime(now);\n        },\n        set: function (value) {\n            this._initialValue = this._fromType(value);\n            this.cancelScheduledValues(this.now());\n            this.setValueAtTime(value, this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Param.prototype, \"minValue\", {\n        get: function () {\n            if (this.units === \"time\" || this.units === \"frequency\" ||\n                this.units === \"normalRange\" || this.units === \"positive\" ||\n                this.units === \"transportTime\" || this.units === \"ticks\" ||\n                this.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n                return 0;\n            }\n            else if (this.units === \"audioRange\") {\n                return -1;\n            }\n            else if (this.units === \"decibels\") {\n                return -Infinity;\n            }\n            else {\n                return this._param.minValue;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Param.prototype, \"maxValue\", {\n        get: function () {\n            if (this.units === \"normalRange\" ||\n                this.units === \"audioRange\") {\n                return 1;\n            }\n            else {\n                return this._param.maxValue;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Type guard based on the unit name\n     */\n    Param.prototype._is = function (arg, type) {\n        return this.units === type;\n    };\n    /**\n     *  Convert the given value from the type specified by Param.units\n     *  into the destination value (such as Gain or Frequency).\n     */\n    Param.prototype._fromType = function (val) {\n        if (this.convert && !this.overridden) {\n            if (this._is(val, \"time\")) {\n                return this.toSeconds(val);\n            }\n            else if (this._is(val, \"decibels\")) {\n                return dbToGain(val);\n            }\n            else if (this._is(val, \"frequency\")) {\n                return this.toFrequency(val);\n            }\n            else if (this._is(val, \"normalRange\")) {\n                return Math.min(Math.max(val, 0), 1);\n            }\n            else if (this._is(val, \"audioRange\")) {\n                return Math.min(Math.max(val, -1), 1);\n            }\n            else if (this._is(val, \"positive\")) {\n                return Math.max(val, 0);\n            }\n            else if (this._is(val, \"number\")) {\n                return val;\n            }\n            else {\n                return val;\n            }\n        }\n        else {\n            return val;\n        }\n    };\n    /**\n     * Convert the parameters value into the units specified by Param.units.\n     */\n    Param.prototype._toType = function (val) {\n        if (this.convert && this.units === \"decibels\") {\n            return gainToDb(val);\n        }\n        else {\n            return val;\n        }\n    };\n    ///////////////////////////////////////////////////////////////////////////\n    // ABSTRACT PARAM INTERFACE\n    // all docs are generated from ParamInterface.ts\n    ///////////////////////////////////////////////////////////////////////////\n    Param.prototype.setValueAtTime = function (value, time) {\n        var computedTime = this.toSeconds(time);\n        var numericValue = this._fromType(value);\n        this._events.add({\n            time: computedTime,\n            type: \"setValue\",\n            value: numericValue,\n        });\n        this.log(\"setValue\", value, computedTime);\n        this.assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to setValueAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(time));\n        this._param.setValueAtTime(numericValue, computedTime);\n        return this;\n    };\n    Param.prototype.getValueAtTime = function (time) {\n        var computedTime = Math.max(this.toSeconds(time), 0);\n        var after = this._events.getAfter(computedTime);\n        var before = this._events.get(computedTime);\n        var value = this._initialValue;\n        // if it was set by\n        if (before === null) {\n            value = this._initialValue;\n        }\n        else if (before.type === \"setTarget\" && (after === null || after.type === \"setValue\")) {\n            var previous = this._events.getBefore(before.time);\n            var previousVal = void 0;\n            if (previous === null) {\n                previousVal = this._initialValue;\n            }\n            else {\n                previousVal = previous.value;\n            }\n            if (isDefined(before.constant)) {\n                value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n            }\n        }\n        else if (after === null) {\n            value = before.value;\n        }\n        else if (after.type === \"linear\" || after.type === \"exponential\") {\n            var beforeValue = before.value;\n            if (before.type === \"setTarget\") {\n                var previous = this._events.getBefore(before.time);\n                if (previous === null) {\n                    beforeValue = this._initialValue;\n                }\n                else {\n                    beforeValue = previous.value;\n                }\n            }\n            if (after.type === \"linear\") {\n                value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n            }\n            else {\n                value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n            }\n        }\n        else {\n            value = before.value;\n        }\n        return this._toType(value);\n    };\n    Param.prototype.setRampPoint = function (time) {\n        time = this.toSeconds(time);\n        var currentVal = this.getValueAtTime(time);\n        this.cancelAndHoldAtTime(time);\n        if (this._fromType(currentVal) === 0) {\n            currentVal = this._toType(this._minOutput);\n        }\n        this.setValueAtTime(currentVal, time);\n        return this;\n    };\n    Param.prototype.linearRampToValueAtTime = function (value, endTime) {\n        var numericValue = this._fromType(value);\n        var computedTime = this.toSeconds(endTime);\n        this._events.add({\n            time: computedTime,\n            type: \"linear\",\n            value: numericValue,\n        });\n        this.log(\"linear\", value, computedTime);\n        this.assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to linearRampToValueAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(endTime));\n        this._param.linearRampToValueAtTime(numericValue, computedTime);\n        return this;\n    };\n    Param.prototype.exponentialRampToValueAtTime = function (value, endTime) {\n        var numericValue = this._fromType(value);\n        numericValue = Math.max(this._minOutput, numericValue);\n        var computedTime = this.toSeconds(endTime);\n        // store the event\n        this._events.add({\n            time: computedTime,\n            type: \"exponential\",\n            value: numericValue,\n        });\n        this.log(\"exponential\", value, computedTime);\n        this.assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to exponentialRampToValueAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(endTime));\n        this._param.exponentialRampToValueAtTime(numericValue, computedTime);\n        return this;\n    };\n    Param.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n        return this;\n    };\n    Param.prototype.linearRampTo = function (value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n        return this;\n    };\n    Param.prototype.targetRampTo = function (value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.exponentialApproachValueAtTime(value, startTime, rampTime);\n        return this;\n    };\n    Param.prototype.exponentialApproachValueAtTime = function (value, time, rampTime) {\n        time = this.toSeconds(time);\n        rampTime = this.toSeconds(rampTime);\n        var timeConstant = Math.log(rampTime + 1) / Math.log(200);\n        this.setTargetAtTime(value, time, timeConstant);\n        // at 90% start a linear ramp to the final value\n        this.cancelAndHoldAtTime(time + rampTime * 0.9);\n        this.linearRampToValueAtTime(value, time + rampTime);\n        return this;\n    };\n    Param.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n        var numericValue = this._fromType(value);\n        // The value will never be able to approach without timeConstant > 0.\n        this.assert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n        var computedTime = this.toSeconds(startTime);\n        this._events.add({\n            constant: timeConstant,\n            time: computedTime,\n            type: \"setTarget\",\n            value: numericValue,\n        });\n        this.log(\"setTarget\", value, computedTime, timeConstant);\n        this.assert(isFinite(numericValue) && isFinite(computedTime), \"Invalid argument(s) to setTargetAtTime: \" + JSON.stringify(value) + \", \" + JSON.stringify(startTime));\n        this._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n        return this;\n    };\n    Param.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n        if (scaling === void 0) { scaling = 1; }\n        duration = this.toSeconds(duration);\n        startTime = this.toSeconds(startTime);\n        var startingValue = this._fromType(values[0]) * scaling;\n        this.setValueAtTime(this._toType(startingValue), startTime);\n        var segTime = duration / (values.length - 1);\n        for (var i = 1; i < values.length; i++) {\n            var numericValue = this._fromType(values[i]) * scaling;\n            this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n        }\n        return this;\n    };\n    Param.prototype.cancelScheduledValues = function (time) {\n        var computedTime = this.toSeconds(time);\n        this._events.cancel(computedTime);\n        this.assert(isFinite(computedTime), \"Invalid argument to cancelScheduledValues: \" + JSON.stringify(time));\n        this._param.cancelScheduledValues(computedTime);\n        this.log(\"cancel\", computedTime);\n        return this;\n    };\n    Param.prototype.cancelAndHoldAtTime = function (time) {\n        var computedTime = this.toSeconds(time);\n        var valueAtTime = this._fromType(this.getValueAtTime(computedTime));\n        this.log(\"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime);\n        // remove the schedule events\n        this.assert(isFinite(computedTime), \"Invalid argument to cancelAndHoldAtTime: \" + JSON.stringify(time));\n        this._param.cancelScheduledValues(computedTime);\n        // if there is an event at the given computedTime\n        // and that even is not a \"set\"\n        var before = this._events.get(computedTime);\n        var after = this._events.getAfter(computedTime);\n        if (before && before.time === computedTime) {\n            // remove everything after\n            if (after) {\n                this._events.cancel(after.time);\n            }\n            else {\n                this._events.cancel(computedTime + this.sampleTime);\n            }\n        }\n        else if (after) {\n            // cancel the next event(s)\n            this._events.cancel(after.time);\n            if (after.type === \"linear\") {\n                this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n            }\n            else if (after.type === \"exponential\") {\n                this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n            }\n        }\n        // set the value at the given time\n        this._events.add({\n            time: computedTime,\n            type: \"setValue\",\n            value: valueAtTime,\n        });\n        this._param.setValueAtTime(valueAtTime, computedTime);\n        return this;\n    };\n    Param.prototype.rampTo = function (value, rampTime, startTime) {\n        if (rampTime === void 0) { rampTime = 0.1; }\n        if (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n            this.exponentialRampTo(value, rampTime, startTime);\n        }\n        else {\n            this.linearRampTo(value, rampTime, startTime);\n        }\n        return this;\n    };\n    Param.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._events.dispose();\n        return this;\n    };\n    ///////////////////////////////////////////////////////////////////////////\n    // \tAUTOMATION CURVE CALCULATIONS\n    // \tMIT License, copyright (c) 2014 Jordan Santell\n    ///////////////////////////////////////////////////////////////////////////\n    // Calculates the the value along the curve produced by setTargetAtTime\n    Param.prototype._exponentialApproach = function (t0, v0, v1, timeConstant, t) {\n        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n    };\n    // Calculates the the value along the curve produced by linearRampToValueAtTime\n    Param.prototype._linearInterpolate = function (t0, v0, t1, v1, t) {\n        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n    };\n    // Calculates the the value along the curve produced by exponentialRampToValueAtTime\n    Param.prototype._exponentialInterpolate = function (t0, v0, t1, v1, t) {\n        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n    };\n    return Param;\n}(ToneWithContext));\nexport { Param };\n//# sourceMappingURL=Param.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isDefined } from \"../util/TypeCheck\";\nimport { Param } from \"./Param\";\nimport { ToneWithContext } from \"./ToneWithContext\";\n/**\n *  ToneAudioNode is the base class for classes which process audio.\n */\nvar ToneAudioNode = /** @class */ (function (_super) {\n    __extends(ToneAudioNode, _super);\n    function ToneAudioNode() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"AudioNode\";\n        /**\n         * List all of the node that must be set to match the ChannelProperties\n         */\n        _this._internalChannels = [];\n        return _this;\n    }\n    Object.defineProperty(ToneAudioNode.prototype, \"numberOfInputs\", {\n        /**\n         *  The number of inputs feeding into the AudioNode.\n         *  For source nodes, this will be 0.\n         */\n        get: function () {\n            if (isDefined(this.input)) {\n                if (this.input instanceof AudioParam || this.input instanceof Param) {\n                    return 1;\n                }\n                else {\n                    return this.input.numberOfInputs;\n                }\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneAudioNode.prototype, \"numberOfOutputs\", {\n        /**\n         *  The number of outputs of the AudioNode.\n         */\n        get: function () {\n            if (isDefined(this.output)) {\n                return this.output.numberOfOutputs;\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ///////////////////////////////////////////////////////////////////////////\n    // AUDIO PROPERTIES\n    ///////////////////////////////////////////////////////////////////////////\n    /**\n     * Used to decide which nodes to get/set properties on\n     */\n    ToneAudioNode.prototype._isAudioNode = function (node) {\n        return isDefined(node) && (node instanceof ToneAudioNode || node instanceof AudioNode);\n    };\n    /**\n     * Get all of the audio nodes (either internal or input/output) which together\n     * make up how the class node responds to channel input/output\n     */\n    ToneAudioNode.prototype._getInternalNodes = function () {\n        var nodeList = this._internalChannels.slice(0);\n        if (this._isAudioNode(this.input)) {\n            nodeList.push(this.input);\n        }\n        if (this._isAudioNode(this.output)) {\n            if (this.input !== this.output) {\n                nodeList.push(this.output);\n            }\n        }\n        return nodeList;\n    };\n    /**\n     * Set the audio options for this node such as channelInterpretation\n     * channelCount, etc.\n     * @param options\n     */\n    ToneAudioNode.prototype._setChannelProperties = function (options) {\n        var nodeList = this._getInternalNodes();\n        nodeList.forEach(function (node) {\n            node.channelCount = options.channelCount;\n            node.channelCountMode = options.channelCountMode;\n            node.channelInterpretation = options.channelInterpretation;\n        });\n    };\n    /**\n     * Get the current audio options for this node such as channelInterpretation\n     * channelCount, etc.\n     */\n    ToneAudioNode.prototype._getChannelProperties = function () {\n        var nodeList = this._getInternalNodes();\n        this.assert(nodeList.length > 0, \"ToneAudioNode does not have any internal nodes\");\n        // use the first node to get properties\n        // they should all be the same\n        var node = nodeList[0];\n        return {\n            channelCount: node.channelCount,\n            channelCountMode: node.channelCountMode,\n            channelInterpretation: node.channelInterpretation,\n        };\n    };\n    Object.defineProperty(ToneAudioNode.prototype, \"channelCount\", {\n        /**\n         *  channelCount is the number of channels used when up-mixing and down-mixing\n         *  connections to any inputs to the node. The default value is 2 except for\n         *  specific nodes where its value is specially determined.\n         */\n        get: function () {\n            return this._getChannelProperties().channelCount;\n        },\n        set: function (channelCount) {\n            var props = this._getChannelProperties();\n            // merge it with the other properties\n            this._setChannelProperties(Object.assign(props, { channelCount: channelCount }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneAudioNode.prototype, \"channelCountMode\", {\n        /**\n         *  channelCountMode determines how channels will be counted when up-mixing and\n         *  down-mixing connections to any inputs to the node.\n         *  The default value is \"max\". This attribute has no effect for nodes with no inputs.\n         * * \"max\" - computedNumberOfChannels is the maximum of the number of channels of all\n         * \t\tconnections to an input. In this mode channelCount is ignored.\n         * * \"clamped-max\" - computedNumberOfChannels is determined as for \"max\" and then clamped\n         * \t\tto a maximum value of the given channelCount.\n         * * \"explicit\" - computedNumberOfChannels is the exact value as specified by the channelCount.\n         */\n        get: function () {\n            return this._getChannelProperties().channelCountMode;\n        },\n        set: function (channelCountMode) {\n            var props = this._getChannelProperties();\n            // merge it with the other properties\n            this._setChannelProperties(Object.assign(props, { channelCountMode: channelCountMode }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneAudioNode.prototype, \"channelInterpretation\", {\n        /**\n         *  channelInterpretation determines how individual channels will be treated\n         *  when up-mixing and down-mixing connections to any inputs to the node.\n         *  The default value is \"speakers\".\n         */\n        get: function () {\n            return this._getChannelProperties().channelInterpretation;\n        },\n        set: function (channelInterpretation) {\n            var props = this._getChannelProperties();\n            // merge it with the other properties\n            this._setChannelProperties(Object.assign(props, { channelInterpretation: channelInterpretation }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ///////////////////////////////////////////////////////////////////////////\n    // CONNECTIONS\n    ///////////////////////////////////////////////////////////////////////////\n    /**\n     * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode\n     * @param unit The output to connect to\n     * @param outputNum The output to connect from\n     * @param inputNum The input to connect to\n     */\n    ToneAudioNode.prototype.connect = function (destination, outputNum, inputNum) {\n        if (outputNum === void 0) { outputNum = 0; }\n        if (inputNum === void 0) { inputNum = 0; }\n        connect(this, destination, outputNum, inputNum);\n        return this;\n    };\n    /**\n     * Connect the output to the context's destination node.\n     */\n    ToneAudioNode.prototype.toDestination = function () {\n        this.connect(this.context.destination);\n        return this;\n    };\n    /**\n     * Connect the output to the context's destination node.\n     * alias for {@link toDestination}\n     */\n    ToneAudioNode.prototype.toMaster = function () {\n        console.warn(\"toMaster() has been renamed toDestination()\");\n        return this.toDestination();\n    };\n    /**\n     *  disconnect the output\n     *  @param output Either the output index to disconnect if the output is an array, or the node to disconnect from.\n     */\n    ToneAudioNode.prototype.disconnect = function (destination, outputNum, inputNum) {\n        if (outputNum === void 0) { outputNum = 0; }\n        if (inputNum === void 0) { inputNum = 0; }\n        disconnect(this, destination, outputNum, inputNum);\n        return this;\n    };\n    /**\n     *  Connect the output of this node to the rest of the nodes in series.\n     *  @example\n     *  //connect a node to an effect, panVol and then to the master output\n     *  node.chain(effect, panVol, Tone.Destination);\n     */\n    ToneAudioNode.prototype.chain = function () {\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        connectSeries.apply(void 0, [this].concat(nodes));\n        return this;\n    };\n    /**\n     *  connect the output of this node to the rest of the nodes in parallel.\n     */\n    ToneAudioNode.prototype.fan = function () {\n        var _this = this;\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        nodes.forEach(function (node) { return _this.connect(node); });\n        return this;\n    };\n    /**\n     * Dispose and disconnect\n     */\n    ToneAudioNode.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (isDefined(this.input)) {\n            if (this.input instanceof ToneAudioNode) {\n                this.input.dispose();\n            }\n            else if (this.input instanceof AudioNode) {\n                this.input.disconnect();\n            }\n        }\n        if (isDefined(this.output)) {\n            if (this.output instanceof ToneAudioNode) {\n                this.output.dispose();\n            }\n            else if (this.output instanceof AudioNode) {\n                this.output.disconnect();\n            }\n        }\n        this._internalChannels = [];\n        return this;\n    };\n    return ToneAudioNode;\n}(ToneWithContext));\nexport { ToneAudioNode };\n///////////////////////////////////////////////////////////////////////////////\n// CONNECTIONS\n///////////////////////////////////////////////////////////////////////////////\n/**\n *  connect together all of the arguments in series\n *  @param nodes\n */\nexport function connectSeries() {\n    var nodes = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        nodes[_i] = arguments[_i];\n    }\n    var first = nodes.shift();\n    nodes.reduce(function (prev, current) {\n        if (prev instanceof ToneAudioNode) {\n            prev.connect(current);\n        }\n        else if (prev instanceof AudioNode) {\n            connect(prev, current);\n        }\n        return current;\n    }, first);\n}\n/**\n * Connect two nodes together so that signal flows from the\n * first node to the second. Optionally specify the input and output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function connect(srcNode, dstNode, outputNumber, inputNumber) {\n    if (outputNumber === void 0) { outputNumber = 0; }\n    if (inputNumber === void 0) { inputNumber = 0; }\n    // resolve the input of the dstNode\n    while (!(dstNode instanceof AudioNode || dstNode instanceof AudioParam)) {\n        if (isDefined(dstNode.input)) {\n            dstNode = dstNode.input;\n        }\n    }\n    while (srcNode instanceof ToneAudioNode) {\n        if (isDefined(srcNode.output)) {\n            srcNode = srcNode.output;\n        }\n    }\n    // make the connection\n    if (dstNode instanceof AudioParam) {\n        srcNode.connect(dstNode, outputNumber);\n    }\n    else {\n        srcNode.connect(dstNode, outputNumber, inputNumber);\n    }\n}\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function disconnect(srcNode, dstNode, outputNumber, inputNumber) {\n    if (outputNumber === void 0) { outputNumber = 0; }\n    if (inputNumber === void 0) { inputNumber = 0; }\n    // resolve the destination node\n    if (isDefined(dstNode)) {\n        while (dstNode instanceof ToneAudioNode) {\n            if (dstNode.input) {\n                dstNode = dstNode.input;\n            }\n        }\n    }\n    // resolve the src node\n    while (!(srcNode instanceof AudioNode)) {\n        if (isDefined(srcNode.output)) {\n            srcNode = srcNode.output;\n        }\n    }\n    if (dstNode instanceof AudioParam) {\n        srcNode.disconnect(dstNode, outputNumber);\n    }\n    else if (dstNode instanceof AudioNode) {\n        srcNode.disconnect(dstNode, outputNumber, inputNumber);\n    }\n    else {\n        srcNode.disconnect();\n    }\n}\n//# sourceMappingURL=ToneAudioNode.js.map","import { isArray } from \"./TypeCheck\";\n/**\n *  Make the property not writable using `defineProperty`. Internal use only.\n */\nexport function readOnly(target, property) {\n    if (isArray(property)) {\n        property.forEach(function (str) { return readOnly(target, str); });\n    }\n    else {\n        Object.defineProperty(target, property, {\n            enumerable: true,\n            writable: false,\n        });\n    }\n}\n/**\n *  Make an attribute writeable. Internal use only.\n */\nexport function writable(target, property) {\n    if (isArray(property)) {\n        property.forEach(function (str) { return writable(target, str); });\n    }\n    else {\n        Object.defineProperty(target, property, {\n            writable: true,\n        });\n    }\n}\nexport var noOp = function () {\n    // no op!\n};\n//# sourceMappingURL=Interface.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A thin wrapper around the Native Web Audio GainNode.\n * The GainNode is a basic building block of the Web Audio\n * API and is useful for routing audio and adjusting gains.\n * @param  gain The initial gain of the GainNode\n * @param units The units of the gain parameter.\n */\nvar Gain = /** @class */ (function (_super) {\n    __extends(Gain, _super);\n    function Gain() {\n        var _this = _super.call(this, optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"])) || this;\n        _this.name = \"Gain\";\n        /**\n         * The wrapped GainNode.\n         */\n        _this._gainNode = _this.context.createGain();\n        // input = output\n        _this.input = _this._gainNode;\n        _this.output = _this._gainNode;\n        var options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n        _this.gain = new Param({\n            context: _this.context,\n            convert: options.convert,\n            param: _this._gainNode.gain,\n            units: options.units,\n            value: options.gain,\n        });\n        readOnly(_this, \"gain\");\n        return _this;\n    }\n    Gain.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            convert: true,\n            gain: 1,\n            units: \"gain\",\n        });\n    };\n    /**\n     *  Clean up.\n     */\n    Gain.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._gainNode.disconnect();\n        this.gain.dispose();\n        return this;\n    };\n    return Gain;\n}(ToneAudioNode));\nexport { Gain };\n//# sourceMappingURL=Gain.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Context } from \"../context/Context\";\n/**\n *  Wrapper around the OfflineAudioContext\n *  @param  channels  The number of channels to render\n *  @param  duration  The duration to render in samples\n *  @param sampleRate the sample rate to render at\n */\nvar OfflineContext = /** @class */ (function (_super) {\n    __extends(OfflineContext, _super);\n    function OfflineContext(channels, duration, sampleRate) {\n        var _this = _super.call(this, {\n            clockSource: \"offline\",\n            context: channels instanceof OfflineAudioContext ?\n                channels : new OfflineAudioContext(channels, duration * sampleRate, sampleRate),\n            lookAhead: 0,\n            updateInterval: channels instanceof OfflineAudioContext ?\n                128 / channels.sampleRate : 128 / sampleRate,\n        }) || this;\n        _this.name = \"OfflineContext\";\n        /**\n         *  An artificial clock source\n         */\n        _this._currentTime = 0;\n        _this._duration = channels instanceof OfflineAudioContext ?\n            channels.length / channels.sampleRate : duration;\n        return _this;\n    }\n    /**\n     *  Override the now method to point to the internal clock time\n     */\n    OfflineContext.prototype.now = function () {\n        return this._currentTime;\n    };\n    Object.defineProperty(OfflineContext.prototype, \"currentTime\", {\n        /**\n         * Same as this.now()\n         */\n        get: function () {\n            return this._currentTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Render the output of the OfflineContext\n     */\n    OfflineContext.prototype.render = function () {\n        while (this._duration - this._currentTime >= 0) {\n            // invoke all the callbacks on that time\n            this.emit(\"tick\");\n            // increment the clock in 5ms chunks\n            this._currentTime += 0.005;\n        }\n        return this._context.startRendering();\n    };\n    /**\n     *  Close the context\n     */\n    OfflineContext.prototype.close = function () {\n        return Promise.resolve(this);\n    };\n    return OfflineContext;\n}(Context));\nexport { OfflineContext };\n//# sourceMappingURL=OfflineContext.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isArray, isNumber, isString } from \"../util/TypeCheck\";\n/**\n * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all\n * classes that make requests for audio files such as Tone.Player,\n * Tone.Sampler and Tone.Convolver.\n *\n * Aside from load callbacks from individual buffers, ToneAudioBuffer\n * provides events which keep track of the loading progress\n * of _all_ of the buffers. These are ToneAudioBuffer.on(\"load\" / \"progress\" / \"error\")\n *\n * @param url The url to load, or the audio buffer to set.\n * @param onload A callback which is invoked after the buffer is loaded.\n *                            It's recommended to use `ToneAudioBuffer.on('load', callback)` instead\n *                            since it will give you a callback when _all_ buffers are loaded.\n * @param onerror The callback to invoke if there is an error\n * @example\n * var buffer = new ToneAudioBuffer(\"path/to/sound.mp3\", function(){\n * \t//the buffer is now available.\n * \tvar buff = buffer.get();\n * });\n * @example\n * //can load provide fallback extension types if the first type is not supported.\n * var buffer = new ToneAudioBuffer(\"path/to/sound.[mp3|ogg|wav]\");\n */\nvar ToneAudioBuffer = /** @class */ (function (_super) {\n    __extends(ToneAudioBuffer, _super);\n    function ToneAudioBuffer() {\n        var _this = _super.call(this) || this;\n        _this.name = \"ToneAudioBuffer\";\n        /**\n         * Callback when the buffer is loaded.\n         */\n        _this.onload = noOp;\n        var options = optionsFromArguments(ToneAudioBuffer.getDefaults(), arguments, [\"url\", \"onload\", \"onerror\"]);\n        _this.reverse = options.reverse;\n        _this.onload = options.onload;\n        if (options.url && options.url instanceof AudioBuffer || options.url instanceof ToneAudioBuffer) {\n            _this.set(options.url);\n        }\n        else if (isString(options.url)) {\n            // initiate the download\n            _this.load(options.url).catch(options.onerror);\n        }\n        return _this;\n    }\n    ToneAudioBuffer.getDefaults = function () {\n        return {\n            onerror: noOp,\n            onload: noOp,\n            reverse: false,\n        };\n    };\n    Object.defineProperty(ToneAudioBuffer.prototype, \"sampleRate\", {\n        /**\n         * The sample rate of the AudioBuffer\n         */\n        get: function () {\n            if (this._buffer) {\n                return this._buffer.sampleRate;\n            }\n            else {\n                return getContext().sampleRate;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.\n     */\n    ToneAudioBuffer.prototype.set = function (buffer) {\n        var _this = this;\n        if (buffer instanceof ToneAudioBuffer) {\n            // if it's loaded, set it\n            if (buffer.loaded) {\n                this._buffer = buffer.get();\n            }\n            else {\n                // otherwise when it's loaded, invoke it's callback\n                buffer.onload = function () {\n                    _this.set(buffer);\n                    _this.onload(_this);\n                };\n            }\n        }\n        else {\n            this._buffer = buffer;\n        }\n        // reverse it initially\n        if (this._reversed) {\n            this._reverse();\n        }\n        return this;\n    };\n    /**\n     *  The audio buffer stored in the object.\n     */\n    ToneAudioBuffer.prototype.get = function () {\n        return this._buffer;\n    };\n    /**\n     *  Makes an fetch request for the selected url then decodes the file as an audio buffer.\n     * \tInvokes the callback once the audio buffer loads.\n     *  @param url The url of the buffer to load. filetype support depends on the browser.\n     *  @returns A Promise which resolves with this ToneAudioBuffer\n     */\n    ToneAudioBuffer.prototype.load = function (url) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promise, audioBuffer, e_1, index;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promise = ToneAudioBuffer.load(url);\n                        ToneAudioBuffer.downloads.push(promise);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, promise];\n                    case 2:\n                        audioBuffer = _a.sent();\n                        this.set(audioBuffer);\n                        // invoke the onload method\n                        this.onload(this);\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        index = ToneAudioBuffer.downloads.indexOf(promise);\n                        ToneAudioBuffer.downloads.splice(index, 1);\n                        throw e_1;\n                    case 4: return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     *  clean up\n     */\n    ToneAudioBuffer.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._buffer = undefined;\n        return this;\n    };\n    /**\n     * Set the audio buffer from the array.\n     * To create a multichannel AudioBuffer, pass in a multidimensional array.\n     * @param array The array to fill the audio buffer\n     */\n    ToneAudioBuffer.prototype.fromArray = function (array) {\n        var isMultidimensional = isArray(array) && array[0].length > 0;\n        var channels = isMultidimensional ? array.length : 1;\n        var len = isMultidimensional ? array[0].length : array.length;\n        var context = getContext();\n        var buffer = context.createBuffer(channels, len, context.sampleRate);\n        var multiChannelArray = !isMultidimensional && channels === 1 ?\n            [array] : array;\n        for (var c = 0; c < channels; c++) {\n            buffer.copyToChannel(multiChannelArray[c], c);\n        }\n        this._buffer = buffer;\n        return this;\n    };\n    /**\n     * \tSums multiple channels into 1 channel\n     *  @param channel Optionally only copy a single channel from the array.\n     */\n    ToneAudioBuffer.prototype.toMono = function (chanNum) {\n        if (isNumber(chanNum)) {\n            this.fromArray(this.toArray(chanNum));\n        }\n        else {\n            var outputArray = new Float32Array(this.length);\n            var numChannels_1 = this.numberOfChannels;\n            for (var channel = 0; channel < numChannels_1; channel++) {\n                var channelArray = this.toArray(channel);\n                for (var i = 0; i < channelArray.length; i++) {\n                    outputArray[i] += channelArray[i];\n                }\n            }\n            // divide by the number of channels\n            outputArray = outputArray.map(function (sample) { return sample / numChannels_1; });\n            this.fromArray(outputArray);\n        }\n        return this;\n    };\n    /**\n     * \tGet the buffer as an array. Single channel buffers will return a 1-dimensional\n     * \tFloat32Array, and multichannel buffers will return multidimensional arrays.\n     *  @param channel Optionally only copy a single channel from the array.\n     */\n    ToneAudioBuffer.prototype.toArray = function (channel) {\n        if (isNumber(channel)) {\n            return this.getChannelData(channel);\n        }\n        else if (this.numberOfChannels === 1) {\n            return this.toArray(0);\n        }\n        else {\n            var ret = [];\n            for (var c = 0; c < this.numberOfChannels; c++) {\n                ret[c] = this.getChannelData(c);\n            }\n            return ret;\n        }\n    };\n    /**\n     *  Returns the Float32Array representing the PCM audio data for the specific channel.\n     *  @param  channel  The channel number to return\n     *  @return The audio as a TypedArray\n     */\n    ToneAudioBuffer.prototype.getChannelData = function (channel) {\n        if (this._buffer) {\n            return this._buffer.getChannelData(channel);\n        }\n        else {\n            return new Float32Array(0);\n        }\n    };\n    /**\n     *  Cut a subsection of the array and return a buffer of the\n     *  subsection. Does not modify the original buffer\n     *  @param start The time to start the slice\n     *  @param end The end time to slice. If none is given will default to the end of the buffer\n     */\n    ToneAudioBuffer.prototype.slice = function (start, end) {\n        if (end === void 0) { end = this.duration; }\n        var startSamples = Math.floor(start * this.sampleRate);\n        var endSamples = Math.floor(end * this.sampleRate);\n        this.assert(startSamples < endSamples, \"The start time must be less than the end time\");\n        var length = endSamples - startSamples;\n        var retBuffer = getContext().createBuffer(this.numberOfChannels, length, this.sampleRate);\n        for (var channel = 0; channel < this.numberOfChannels; channel++) {\n            retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);\n        }\n        return new ToneAudioBuffer(retBuffer);\n    };\n    /**\n     *  Reverse the buffer.\n     */\n    ToneAudioBuffer.prototype._reverse = function () {\n        if (this.loaded) {\n            for (var i = 0; i < this.numberOfChannels; i++) {\n                this.getChannelData(i).reverse();\n            }\n        }\n        return this;\n    };\n    Object.defineProperty(ToneAudioBuffer.prototype, \"loaded\", {\n        /**\n         * If the buffer is loaded or not\n         */\n        get: function () {\n            return this.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneAudioBuffer.prototype, \"duration\", {\n        /**\n         * The duration of the buffer in seconds.\n         */\n        get: function () {\n            if (this._buffer) {\n                return this._buffer.duration;\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneAudioBuffer.prototype, \"length\", {\n        /**\n         * The length of the buffer in samples\n         */\n        get: function () {\n            if (this._buffer) {\n                return this._buffer.length;\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneAudioBuffer.prototype, \"numberOfChannels\", {\n        /**\n         * The number of discrete audio channels. Returns 0 if no buffer is loaded.\n         */\n        get: function () {\n            if (this._buffer) {\n                return this._buffer.numberOfChannels;\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneAudioBuffer.prototype, \"reverse\", {\n        /**\n         * Reverse the buffer.\n         */\n        get: function () {\n            return this._reversed;\n        },\n        set: function (rev) {\n            if (this._reversed !== rev) {\n                this._reversed = rev;\n                this._reverse();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,\n     *  pass in a multidimensional array.\n     *  @param array The array to fill the audio buffer\n     *  @return A ToneAudioBuffer created from the array\n     */\n    ToneAudioBuffer.fromArray = function (array) {\n        return (new ToneAudioBuffer()).fromArray(array);\n    };\n    /**\n     * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer\n     * @param  url The url to load.\n     * @return A promise which resolves to a ToneAudioBuffer\n     */\n    ToneAudioBuffer.fromUrl = function (url) {\n        return __awaiter(this, void 0, void 0, function () {\n            var buffer;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        buffer = new ToneAudioBuffer();\n                        return [4 /*yield*/, buffer.load(url)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     *  Loads a url using fetch and returns the AudioBuffer.\n     */\n    ToneAudioBuffer.load = function (url) {\n        return __awaiter(this, void 0, void 0, function () {\n            var matches, extensions, extension, _i, extensions_1, ext, response, arrayBuffer, audioBuffer;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        matches = url.match(/\\[(.+\\|?)+\\]$/);\n                        if (matches) {\n                            extensions = matches[1].split(\"|\");\n                            extension = extensions[0];\n                            for (_i = 0, extensions_1 = extensions; _i < extensions_1.length; _i++) {\n                                ext = extensions_1[_i];\n                                if (ToneAudioBuffer.supportsType(ext)) {\n                                    extension = ext;\n                                    break;\n                                }\n                            }\n                            url = url.replace(matches[0], extension);\n                        }\n                        return [4 /*yield*/, fetch(ToneAudioBuffer.baseUrl + url)];\n                    case 1:\n                        response = _a.sent();\n                        if (!response.ok) {\n                            throw new Error(\"could not load url: \" + url);\n                        }\n                        return [4 /*yield*/, response.arrayBuffer()];\n                    case 2:\n                        arrayBuffer = _a.sent();\n                        return [4 /*yield*/, getContext().decodeAudioData(arrayBuffer)];\n                    case 3:\n                        audioBuffer = _a.sent();\n                        return [2 /*return*/, audioBuffer];\n                }\n            });\n        });\n    };\n    /**\n     *  Checks a url's extension to see if the current browser can play that file type.\n     *  @param url The url/extension to test\n     *  @return If the file extension can be played\n     *  @static\n     *  @example\n     * ToneAudioBuffer.supportsType(\"wav\"); //returns true\n     * ToneAudioBuffer.supportsType(\"path/to/file.wav\"); //returns true\n     */\n    ToneAudioBuffer.supportsType = function (url) {\n        var extensions = url.split(\".\");\n        var extension = extensions[extensions.length - 1];\n        var response = document.createElement(\"audio\").canPlayType(\"audio/\" + extension);\n        return response !== \"\";\n    };\n    /**\n     *  Returns a Promise which resolves when all of the buffers have loaded\n     */\n    ToneAudioBuffer.loaded = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, promise;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _i = 0, _a = ToneAudioBuffer.downloads;\n                        _b.label = 1;\n                    case 1:\n                        if (!(_i < _a.length)) return [3 /*break*/, 4];\n                        promise = _a[_i];\n                        return [4 /*yield*/, promise];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ///////////////////////////////////////////////////////////////////////////\n    // STATIC METHODS\n    ///////////////////////////////////////////////////////////////////////////\n    /**\n     *  A path which is prefixed before every url.\n     */\n    ToneAudioBuffer.baseUrl = \"\";\n    /**\n     * All of the downloads\n     */\n    ToneAudioBuffer.downloads = [];\n    return ToneAudioBuffer;\n}(Tone));\nexport { ToneAudioBuffer };\n//# sourceMappingURL=ToneAudioBuffer.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { getContext, setContext } from \"../Global\";\nimport { OfflineContext } from \"./OfflineContext\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n/**\n * Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.\n * The OfflineAudioContext is capable of rendering much faster than real time in many cases.\n * The callback function also passes in an offline instance of Tone.Transport which can be used\n * to schedule events along the Transport. **NOTE** OfflineAudioContext has the same restrictions\n * as the AudioContext in that on certain platforms (like iOS) it must be invoked by an explicit\n * user action like a click or tap.\n * @param  callback  All Tone.js nodes which are created and scheduled\n * \t\t\t\t\twithin this callback are recorded into the output Buffer.\n * @param  duration     the amount of time to record for.\n * @return  The promise which is invoked with the Tone.Buffer of the recorded output.\n * @example\n * //render 2 seconds of the oscillator\n * Tone.Offline(function(){\n * \t//only nodes created in this callback will be recorded\n * \tvar oscillator = new Tone.Oscillator().toDestination().start(0)\n * \t//schedule their events\n * }, 2).then(function(buffer){\n * \t//do something with the output buffer\n * })\n * @example\n * //can also schedule events along the Transport\n * //using the passed in Offline Transport\n * Tone.Offline(function(Transport){\n * \tvar osc = new Tone.Oscillator().toDestination()\n * \tTransport.schedule(function(time){\n * \t\tosc.start(time).stop(time + 0.1)\n * \t}, 1)\n * \tTransport.start(0.2)\n * }, 4).then(function(buffer){\n * \t//do something with the output buffer\n * })\n */\nexport function Offline(callback, duration, channels, sampleRate) {\n    if (channels === void 0) { channels = 2; }\n    if (sampleRate === void 0) { sampleRate = getContext().sampleRate; }\n    return __awaiter(this, void 0, void 0, function () {\n        var originalContext, context, bufferPromise, buffer;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    originalContext = getContext();\n                    context = new OfflineContext(channels, duration, sampleRate);\n                    setContext(context);\n                    // invoke the callback/scheduling\n                    return [4 /*yield*/, callback(context)];\n                case 1:\n                    // invoke the callback/scheduling\n                    _a.sent();\n                    bufferPromise = context.render();\n                    // return the original AudioContext\n                    setContext(originalContext);\n                    return [4 /*yield*/, bufferPromise];\n                case 2:\n                    buffer = _a.sent();\n                    // return the audio\n                    return [2 /*return*/, new ToneAudioBuffer(buffer)];\n            }\n        });\n    });\n}\n//# sourceMappingURL=Offline.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isString } from \"../util/TypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n/**\n * A data structure for holding multiple buffers in a Map-like datastructure.\n *\n * @param  urls      An object literal or array of urls to load.\n * @param onload  The callback to invoke when the buffers are loaded.\n * @example\n * //load a whole bank of piano samples\n * var pianoSamples = new ToneAudioBuffers({\n * \t\"C4\" : \"path/to/C4.mp3\"\n * \t\"C#4\" : \"path/to/C#4.mp3\"\n * \t\"D4\" : \"path/to/D4.mp3\"\n * \t\"D#4\" : \"path/to/D#4.mp3\"\n * }, function(){\n * \t//play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"C4\");\n * \tplayer.start();\n * });\n * @example\n * //To pass in additional parameters in the second parameter\n * var buffers = new ToneAudioBuffers(urls, {\n * \t\"onload\" : callback,\n * \t\"baseUrl\" : \"../path/to/audio/\"\n * })\n */\nvar ToneAudioBuffers = /** @class */ (function (_super) {\n    __extends(ToneAudioBuffers, _super);\n    function ToneAudioBuffers() {\n        var _this = _super.call(this) || this;\n        _this.name = \"ToneAudioBuffers\";\n        /**\n         *  All of the buffers\n         */\n        _this._buffers = new Map();\n        /**\n         * Keep track of the number of loaded buffers\n         */\n        _this._loadingCount = 0;\n        var options = optionsFromArguments(ToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n        _this.baseUrl = options.baseUrl;\n        var urlMap = {};\n        // add each one\n        Object.keys(options.urls).forEach(function (name) {\n            _this._loadingCount++;\n            var url = options.urls[name];\n            _this.add(name, url, _this._bufferLoaded.bind(_this, options.onload));\n        });\n        return _this;\n    }\n    ToneAudioBuffers.getDefaults = function () {\n        return {\n            baseUrl: \"\",\n            onerror: noOp,\n            onload: noOp,\n            urls: {},\n        };\n    };\n    /**\n     *  True if the buffers object has a buffer by that name.\n     *  @param  name  The key or index of the buffer.\n     */\n    ToneAudioBuffers.prototype.has = function (name) {\n        return this._buffers.has(name.toString());\n    };\n    /**\n     *  Get a buffer by name. If an array was loaded,\n     *  then use the array index.\n     *  @param  name  The key or index of the buffer.\n     */\n    ToneAudioBuffers.prototype.get = function (name) {\n        this.assert(this.has(name), \"ToneAudioBuffers has no buffer named: \" + name);\n        return this._buffers.get(name.toString());\n    };\n    /**\n     *  A buffer was loaded. decrement the counter.\n     */\n    ToneAudioBuffers.prototype._bufferLoaded = function (callback) {\n        this._loadingCount--;\n        if (this._loadingCount === 0 && callback) {\n            callback();\n        }\n    };\n    Object.defineProperty(ToneAudioBuffers.prototype, \"loaded\", {\n        /**\n         * If the buffers are loaded or not\n         */\n        get: function () {\n            return Array.from(this._buffers).every(function (_a) {\n                var name = _a[0], buffer = _a[1];\n                return buffer.loaded;\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Add a buffer by name and url to the Buffers\n     *  @param  name      A unique name to give the buffer\n     *  @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n     *  @param  callback  The callback to invoke when the url is loaded.\n     */\n    ToneAudioBuffers.prototype.add = function (name, url, callback) {\n        if (callback === void 0) { callback = noOp; }\n        if (url instanceof ToneAudioBuffer) {\n            this._buffers.set(name.toString(), url);\n            callback();\n        }\n        else if (url instanceof AudioBuffer) {\n            this._buffers.set(name.toString(), new ToneAudioBuffer(url));\n            callback();\n        }\n        else if (isString(url)) {\n            this._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback));\n        }\n        return this;\n    };\n    /**\n     *  Clean up.\n     */\n    ToneAudioBuffers.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._buffers.forEach(function (buffer) { return buffer.dispose(); });\n        this._buffers.clear();\n        return this;\n    };\n    return ToneAudioBuffers;\n}(Tone));\nexport { ToneAudioBuffers };\n//# sourceMappingURL=ToneAudioBuffers.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n *  Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n *  @param delayTime The delay applied to the incoming signal.\n *  @param maxDelay The maximum delay time.\n */\nvar Delay = /** @class */ (function (_super) {\n    __extends(Delay, _super);\n    function Delay() {\n        var _this = _super.call(this, optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"])) || this;\n        _this.name = \"Delay\";\n        var options = optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]);\n        var maxDelayInSeconds = _this.toSeconds(options.maxDelay);\n        _this.maxDelay = Math.max(maxDelayInSeconds, _this.toSeconds(options.delayTime));\n        _this._delayNode = _this.input = _this.output = _this.context.createDelay(maxDelayInSeconds);\n        _this.delayTime = new Param({\n            context: _this.context,\n            param: _this._delayNode.delayTime,\n            units: \"time\",\n            value: options.delayTime,\n        });\n        readOnly(_this, \"delayTime\");\n        return _this;\n    }\n    Delay.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            delayTime: 0,\n            maxDelay: 1,\n        });\n    };\n    /**\n     *  Clean up.\n     */\n    Delay.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._delayNode.disconnect();\n        this.delayTime.dispose();\n        return this;\n    };\n    return Delay;\n}(ToneAudioNode));\nexport { Delay };\n//# sourceMappingURL=Delay.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Timeline } from \"./Timeline\";\n/**\n *  A Timeline State. Provides the methods: `setStateAtTime(\"state\", time)` and `getValueAtTime(time)`\n *  @param initial The initial state of the StateTimeline.  Defaults to `undefined`\n */\nvar StateTimeline = /** @class */ (function (_super) {\n    __extends(StateTimeline, _super);\n    function StateTimeline(initial) {\n        if (initial === void 0) { initial = \"stopped\"; }\n        var _this = _super.call(this) || this;\n        _this._initial = initial;\n        return _this;\n    }\n    /**\n     *  Returns the scheduled state scheduled before or at\n     *  the given time.\n     *  @param  time  The time to query.\n     *  @return  The name of the state input in setStateAtTime.\n     */\n    StateTimeline.prototype.getValueAtTime = function (time) {\n        var event = this.get(time);\n        if (event !== null) {\n            return event.state;\n        }\n        else {\n            return this._initial;\n        }\n    };\n    /**\n     *  Add a state to the timeline.\n     * @param  state The name of the state to set.\n     * @param  time  The time to query.\n     * @param options Any additional options that are needed in the timeline.\n     */\n    StateTimeline.prototype.setStateAtTime = function (state, time, options) {\n        // all state changes need to be >= the previous state time\n        // TODO throw error if time < the previous event time\n        this.add(Object.assign({}, options, {\n            state: state,\n            time: time,\n        }));\n        return this;\n    };\n    /**\n     *  Return the event before the time with the given state\n     *  @param  state The state to look for\n     *  @param  time  When to check before\n     *  @return  The event with the given state before the time\n     */\n    StateTimeline.prototype.getLastState = function (state, time) {\n        // time = this.toSeconds(time);\n        var index = this._search(time);\n        for (var i = index; i >= 0; i--) {\n            var event_1 = this._timeline[i];\n            if (event_1.state === state) {\n                return event_1;\n            }\n        }\n    };\n    /**\n     *  Return the event after the time with the given state\n     *  @param  state The state to look for\n     *  @param  time  When to check from\n     *  @return  The event with the given state after the time\n     */\n    StateTimeline.prototype.getNextState = function (state, time) {\n        // time = this.toSeconds(time);\n        var index = this._search(time);\n        if (index !== -1) {\n            for (var i = index; i < this._timeline.length; i++) {\n                var event_2 = this._timeline[i];\n                if (event_2.state === state) {\n                    return event_2;\n                }\n            }\n        }\n    };\n    return StateTimeline;\n}(Timeline));\nexport { StateTimeline };\n//# sourceMappingURL=StateTimeline.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { connect } from \"../Connect\";\nimport { Param } from \"../context/Param\";\nimport { getContext } from \"../Global\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isUndef } from \"../util/TypeCheck\";\n/**\n * TickSignal extends Tone.Signal, but adds the capability\n * to calculate the number of elapsed ticks. exponential and target curves\n * are approximated with multiple linear ramps.\n *\n * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,\n * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n * describing integrating timing functions for tempo calculations.\n *\n * @param value The initial value of the signal\n */\nvar TickSignal = /** @class */ (function (_super) {\n    __extends(TickSignal, _super);\n    function TickSignal() {\n        var _this = _super.call(this, optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"])) || this;\n        _this.name = \"TickSignal\";\n        _this._events = new Timeline(Infinity);\n        _this._sig = _this.context.createConstantSource();\n        _this._param = _this._sig.offset;\n        _this._multiplier = 1;\n        var options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n        _this._sig = _this.context.createConstantSource();\n        _this._sig.start(0);\n        _this._param = _this._sig.offset;\n        // set the multiplier\n        _this.multiplier = options.multiplier;\n        // clear the ticks from the beginning\n        _this.cancelScheduledValues(0);\n        // set an initial event\n        _this._events.add({\n            ticks: 0,\n            time: 0,\n            type: \"setValue\",\n            value: _this._fromType(options.value),\n        });\n        _this.setValueAtTime(options.value, 0);\n        return _this;\n    }\n    TickSignal.getDefaults = function () {\n        return Object.assign(Param.getDefaults(), {\n            multiplier: 1,\n            param: getContext().createConstantSource().offset,\n            units: \"hertz\",\n            value: 1,\n        });\n    };\n    TickSignal.prototype.setTargetAtTime = function (value, time, constant) {\n        // approximate it with multiple linear ramps\n        time = this.toSeconds(time);\n        this.setRampPoint(time);\n        var computedValue = this._fromType(value);\n        // start from previously scheduled value\n        var prevEvent = this._events.get(time);\n        var segments = Math.round(Math.max(1 / constant, 1));\n        for (var i = 0; i <= segments; i++) {\n            var segTime = constant * i + time;\n            var rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);\n            this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n        }\n        return this;\n    };\n    TickSignal.prototype.setValueAtTime = function (value, time) {\n        var computedTime = this.toSeconds(time);\n        _super.prototype.setValueAtTime.call(this, value, time);\n        var event = this._events.get(computedTime);\n        var previousEvent = this._events.previousEvent(event);\n        var ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n        event.ticks = Math.max(ticksUntilTime, 0);\n        return this;\n    };\n    TickSignal.prototype.linearRampToValueAtTime = function (value, time) {\n        var computedTime = this.toSeconds(time);\n        _super.prototype.linearRampToValueAtTime.call(this, value, time);\n        var event = this._events.get(computedTime);\n        var previousEvent = this._events.previousEvent(event);\n        var ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n        event.ticks = Math.max(ticksUntilTime, 0);\n        return this;\n    };\n    TickSignal.prototype.exponentialRampToValueAtTime = function (value, time) {\n        // aproximate it with multiple linear ramps\n        time = this.toSeconds(time);\n        var computedVal = this._fromType(value);\n        // start from previously scheduled value\n        var prevEvent = this._events.get(time);\n        // approx 10 segments per second\n        var segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));\n        var segmentDur = ((time - prevEvent.time) / segments);\n        for (var i = 0; i <= segments; i++) {\n            var segTime = segmentDur * i + prevEvent.time;\n            var rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);\n            this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n        }\n        return this;\n    };\n    /**\n     * Returns the tick value at the time. Takes into account\n     * any automation curves scheduled on the signal.\n     * @param  time The time to get the tick count at\n     * @return The number of ticks which have elapsed at the time given any automations.\n     */\n    TickSignal.prototype._getTicksUntilEvent = function (event, time) {\n        if (event === null) {\n            event = {\n                ticks: 0,\n                time: 0,\n                type: \"setValue\",\n                value: 0,\n            };\n        }\n        else if (isUndef(event.ticks)) {\n            var previousEvent = this._events.previousEvent(event);\n            event.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n        }\n        var val0 = this._fromType(this.getValueAtTime(event.time));\n        var val1 = this._fromType(this.getValueAtTime(time));\n        // if it's right on the line, take the previous value\n        var onTheLineEvent = this._events.get(time);\n        if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === \"setValue\") {\n            val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));\n        }\n        return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n    };\n    /**\n     * Returns the tick value at the time. Takes into account\n     * any automation curves scheduled on the signal.\n     * @param  time The time to get the tick count at\n     * @return The number of ticks which have elapsed at the time given any automations.\n     */\n    TickSignal.prototype.getTicksAtTime = function (time) {\n        var computedTime = this.toSeconds(time);\n        var event = this._events.get(computedTime);\n        return Math.max(this._getTicksUntilEvent(event, computedTime), 0);\n    };\n    /**\n     * Return the elapsed time of the number of ticks from the given time\n     * @param ticks The number of ticks to calculate\n     * @param  time The time to get the next tick from\n     * @return The duration of the number of ticks from the given time in seconds\n     */\n    TickSignal.prototype.getDurationOfTicks = function (ticks, time) {\n        var computedTime = this.toSeconds(time);\n        var currentTick = this.getTicksAtTime(time);\n        return this.getTimeOfTick(currentTick + ticks) - computedTime;\n    };\n    /**\n     * Given a tick, returns the time that tick occurs at.\n     * @return The time that the tick occurs.\n     */\n    TickSignal.prototype.getTimeOfTick = function (tick) {\n        var before = this._events.get(tick, \"ticks\");\n        var after = this._events.getAfter(tick, \"ticks\");\n        if (before && before.ticks === tick) {\n            return before.time;\n        }\n        else if (before && after &&\n            after.type === \"linear\" &&\n            before.value !== after.value) {\n            var val0 = this._fromType(this.getValueAtTime(before.time));\n            var val1 = this._fromType(this.getValueAtTime(after.time));\n            var delta = (val1 - val0) / (after.time - before.time);\n            var k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n            var sol1 = (-val0 + k) / delta;\n            var sol2 = (-val0 - k) / delta;\n            return (sol1 > 0 ? sol1 : sol2) + before.time;\n        }\n        else if (before) {\n            if (before.value === 0) {\n                return Infinity;\n            }\n            else {\n                return before.time + (tick - before.ticks) / before.value;\n            }\n        }\n        else {\n            return tick / this._initialValue;\n        }\n    };\n    /**\n     * Convert some number of ticks their the duration in seconds accounting\n     * for any automation curves starting at the given time.\n     * @param  ticks The number of ticks to convert to seconds.\n     * @param  when  When along the automation timeline to convert the ticks.\n     * @return The duration in seconds of the ticks.\n     */\n    TickSignal.prototype.ticksToTime = function (ticks, when) {\n        return this.getDurationOfTicks(ticks, when);\n    };\n    /**\n     * The inverse of [ticksToTime](#tickstotime). Convert a duration in\n     * seconds to the corresponding number of ticks accounting for any\n     * automation curves starting at the given time.\n     * @param  duration The time interval to convert to ticks.\n     * @param  when When along the automation timeline to convert the ticks.\n     * @return The duration in ticks.\n     */\n    TickSignal.prototype.timeToTicks = function (duration, when) {\n        var computedTime = this.toSeconds(when);\n        var computedDuration = this.toSeconds(duration);\n        var startTicks = this.getTicksAtTime(computedTime);\n        var endTicks = this.getTicksAtTime(computedTime + computedDuration);\n        return endTicks - startTicks;\n    };\n    /**\n     * Convert from the type when the unit value is BPM\n     */\n    TickSignal.prototype._fromType = function (val) {\n        if (this.units === \"bpm\" && this.multiplier) {\n            return 1 / (60 / val / this.multiplier);\n        }\n        else {\n            return _super.prototype._fromType.call(this, val);\n        }\n    };\n    /**\n     * Special case of type conversion where the units === \"bpm\"\n     */\n    TickSignal.prototype._toType = function (val) {\n        if (this.units === \"bpm\" && this.multiplier) {\n            return (val / this.multiplier) * 60;\n        }\n        else {\n            return _super.prototype._toType.call(this, val);\n        }\n    };\n    Object.defineProperty(TickSignal.prototype, \"multiplier\", {\n        /**\n         * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n         */\n        get: function () {\n            return this._multiplier;\n        },\n        set: function (m) {\n            // get and reset the current value with the new multipler\n            // might be necessary to clear all the previous values\n            var currentVal = this.value;\n            this._multiplier = m;\n            this.value = currentVal;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Connect the output signal\n     */\n    TickSignal.prototype.connect = function (dstNode, outputNumber, inputNumber) {\n        if (outputNumber === void 0) { outputNumber = 0; }\n        if (inputNumber === void 0) { inputNumber = 0; }\n        connect(this._sig, dstNode, outputNumber, inputNumber);\n        return this;\n    };\n    return TickSignal;\n}(Param));\nexport { TickSignal };\n//# sourceMappingURL=TickSignal.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { TickSignal } from \"./TickSignal\";\n/**\n *  Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.\n *\n *  @param frequency The initial frequency that the signal ticks at\n */\nvar TickSource = /** @class */ (function (_super) {\n    __extends(TickSource, _super);\n    function TickSource() {\n        var _this = _super.call(this, optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"])) || this;\n        _this.name = \"TickSource\";\n        /**\n         *  The state timeline\n         */\n        _this._state = new StateTimeline();\n        /**\n         * The offset values of the ticks\n         */\n        _this._tickOffset = new Timeline();\n        var options = optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]);\n        _this.frequency = new TickSignal({\n            context: _this.context,\n            units: options.units,\n            value: _this.toFrequency(options.frequency),\n        });\n        readOnly(_this, \"frequency\");\n        // set the inital state\n        _this._state.setStateAtTime(\"stopped\", 0);\n        // add the first event\n        _this.setTicksAtTime(0, 0);\n        return _this;\n    }\n    TickSource.getDefaults = function () {\n        return Object.assign({\n            frequency: 1,\n            units: \"hertz\",\n        }, ToneWithContext.getDefaults());\n    };\n    Object.defineProperty(TickSource.prototype, \"state\", {\n        /**\n         *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n         */\n        get: function () {\n            return this._state.getValueAtTime(this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Start the clock at the given time. Optionally pass in an offset\n     *  of where to start the tick counter from.\n     *  @param  time    The time the clock should start\n     *  @param offset The number of ticks to start the source at\n     */\n    TickSource.prototype.start = function (time, offset) {\n        var computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) !== \"started\") {\n            this._state.setStateAtTime(\"started\", computedTime);\n            if (isDefined(offset)) {\n                this.setTicksAtTime(offset, computedTime);\n            }\n        }\n        return this;\n    };\n    /**\n     * Stop the clock. Stopping the clock resets the tick counter to 0.\n     * @param time The time when the clock should stop.\n     */\n    TickSource.prototype.stop = function (time) {\n        var computedTime = this.toSeconds(time);\n        // cancel the previous stop\n        if (this._state.getValueAtTime(computedTime) === \"stopped\") {\n            var event_1 = this._state.get(computedTime);\n            if (event_1 && event_1.time > 0) {\n                this._tickOffset.cancel(event_1.time);\n                this._state.cancel(event_1.time);\n            }\n        }\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        this.setTicksAtTime(0, computedTime);\n        return this;\n    };\n    /**\n     *  Pause the clock. Pausing does not reset the tick counter.\n     *  @param time The time when the clock should stop.\n     */\n    TickSource.prototype.pause = function (time) {\n        var computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.setStateAtTime(\"paused\", computedTime);\n        }\n        return this;\n    };\n    /**\n     *  Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n     *  @param time When to clear the events after\n     */\n    TickSource.prototype.cancel = function (time) {\n        time = this.toSeconds(time);\n        this._state.cancel(time);\n        this._tickOffset.cancel(time);\n        return this;\n    };\n    /**\n     * Get the elapsed ticks at the given time\n     * @param  time  When to get the tick value\n     * @return The number of ticks\n     */\n    TickSource.prototype.getTicksAtTime = function (time) {\n        var _this = this;\n        var computedTime = this.toSeconds(time);\n        var stopEvent = this._state.getLastState(\"stopped\", computedTime);\n        if (!stopEvent) {\n            return 0;\n        }\n        // this event allows forEachBetween to iterate until the current time\n        var tmpEvent = { state: \"paused\", time: computedTime };\n        this._state.add(tmpEvent);\n        // keep track of the previous offset event\n        var lastState = stopEvent;\n        var elapsedTicks = 0;\n        // iterate through all the events since the last stop\n        this._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, function (e) {\n            var periodStartTime = lastState.time;\n            // if there is an offset event in this period use that\n            var offsetEvent = _this._tickOffset.get(e.time);\n            if (offsetEvent && offsetEvent.time >= lastState.time) {\n                elapsedTicks = offsetEvent.ticks;\n                periodStartTime = offsetEvent.time;\n            }\n            if (lastState.state === \"started\" && e.state !== \"started\") {\n                elapsedTicks += _this.frequency.getTicksAtTime(e.time) - _this.frequency.getTicksAtTime(periodStartTime);\n            }\n            lastState = e;\n        });\n        // remove the temporary event\n        this._state.remove(tmpEvent);\n        // return the ticks\n        return elapsedTicks;\n    };\n    Object.defineProperty(TickSource.prototype, \"ticks\", {\n        /**\n         *  The number of times the callback was invoked. Starts counting at 0\n         *  and increments after the callback was invoked. Returns -1 when stopped.\n         */\n        get: function () {\n            return this.getTicksAtTime(this.now());\n        },\n        set: function (t) {\n            this.setTicksAtTime(t, this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TickSource.prototype, \"seconds\", {\n        /**\n         *  The time since ticks=0 that the TickSource has been running. Accounts\n         *  for tempo curves\n         */\n        get: function () {\n            return this.getSecondsAtTime(this.now());\n        },\n        set: function (s) {\n            var now = this.now();\n            var ticks = this.frequency.timeToTicks(s, now);\n            this.setTicksAtTime(ticks, now);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Return the elapsed seconds at the given time.\n     *  @param  time  When to get the elapsed seconds\n     *  @return  The number of elapsed seconds\n     */\n    TickSource.prototype.getSecondsAtTime = function (time) {\n        var _this = this;\n        time = this.toSeconds(time);\n        var stopEvent = this._state.getLastState(\"stopped\", time);\n        if (!stopEvent) {\n            return 0;\n        }\n        // this event allows forEachBetween to iterate until the current time\n        var tmpEvent = { state: \"paused\", time: time };\n        this._state.add(tmpEvent);\n        // keep track of the previous offset event\n        var lastState = stopEvent;\n        var elapsedSeconds = 0;\n        // iterate through all the events since the last stop\n        this._state.forEachBetween(stopEvent.time, time + this.sampleTime, function (e) {\n            var periodStartTime = lastState.time;\n            // if there is an offset event in this period use that\n            var offsetEvent = _this._tickOffset.get(e.time);\n            if (offsetEvent && offsetEvent.time >= lastState.time) {\n                elapsedSeconds = offsetEvent.seconds;\n                periodStartTime = offsetEvent.time;\n            }\n            if (lastState.state === \"started\" && e.state !== \"started\") {\n                elapsedSeconds += e.time - periodStartTime;\n            }\n            lastState = e;\n        });\n        // remove the temporary event\n        this._state.remove(tmpEvent);\n        // return the ticks\n        return elapsedSeconds;\n    };\n    /**\n     * Set the clock's ticks at the given time.\n     * @param  ticks The tick value to set\n     * @param  time  When to set the tick value\n     */\n    TickSource.prototype.setTicksAtTime = function (ticks, time) {\n        time = this.toSeconds(time);\n        this._tickOffset.cancel(time);\n        this._tickOffset.add({\n            seconds: this.frequency.getDurationOfTicks(ticks, time),\n            ticks: ticks,\n            time: time,\n        });\n        return this;\n    };\n    /**\n     *  Returns the scheduled state at the given time.\n     *  @param  time  The time to query.\n     *  @example\n     * source.start(\"+0.1\");\n     * source.getStateAtTime(\"+0.1\"); //returns \"started\"\n     */\n    TickSource.prototype.getStateAtTime = function (time) {\n        time = this.toSeconds(time);\n        return this._state.getValueAtTime(time);\n    };\n    /**\n     * Get the time of the given tick. The second argument\n     * is when to test before. Since ticks can be set (with setTicksAtTime)\n     * there may be multiple times for a given tick value.\n     * @param  ticks The tick number.\n     * @param  before When to measure the tick value from.\n     * @return The time of the tick\n     */\n    TickSource.prototype.getTimeOfTick = function (tick, before) {\n        if (before === void 0) { before = this.now(); }\n        var offset = this._tickOffset.get(before);\n        var event = this._state.get(before);\n        var startTime = Math.max(offset.time, event.time);\n        var absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n        return this.frequency.getTimeOfTick(absoluteTicks);\n    };\n    /**\n     *  Invoke the callback event at all scheduled ticks between the\n     *  start time and the end time\n     *  @param  startTime  The beginning of the search range\n     *  @param  endTime    The end of the search range\n     *  @param  callback   The callback to invoke with each tick\n     */\n    TickSource.prototype.forEachTickBetween = function (startTime, endTime, callback) {\n        var _this = this;\n        var computedStartTime = this.toSeconds(startTime);\n        var computedEndTime = this.toSeconds(endTime);\n        // only iterate through the sections where it is \"started\"\n        var lastStateEvent = this._state.get(computedStartTime);\n        this._state.forEachBetween(computedStartTime, computedEndTime, function (event) {\n            if (lastStateEvent && lastStateEvent.state === \"started\" && event.state !== \"started\") {\n                _this.forEachTickBetween(Math.max(lastStateEvent.time, computedStartTime), event.time - _this.sampleTime, callback);\n            }\n            lastStateEvent = event;\n        });\n        var error = null;\n        if (lastStateEvent && lastStateEvent.state === \"started\" && this._state) {\n            var maxStartTime = Math.max(lastStateEvent.time, computedStartTime);\n            // figure out the difference between the frequency ticks and the\n            var startTicks = this.frequency.getTicksAtTime(maxStartTime);\n            var ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n            var diff = startTicks - ticksAtStart;\n            var offset = diff % 1;\n            if (offset !== 0) {\n                offset = 1 - offset;\n            }\n            var nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n            while (nextTickTime < computedEndTime && this._state) {\n                try {\n                    callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n                }\n                catch (e) {\n                    error = e;\n                    break;\n                }\n                if (this._state) {\n                    nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n                }\n            }\n        }\n        if (error) {\n            throw error;\n        }\n        return this;\n    };\n    /**\n     *  Clean up\n     */\n    TickSource.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._state.dispose();\n        this._tickOffset.dispose();\n        this.frequency.dispose();\n        return this;\n    };\n    return TickSource;\n}(ToneWithContext));\nexport { TickSource };\n//# sourceMappingURL=TickSource.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { noOp, readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { TickSource } from \"./TickSource\";\n/**\n * A sample accurate clock which provides a callback at the given rate.\n * While the callback is not sample-accurate (it is still susceptible to\n * loose JS timing), the time passed in as the argument to the callback\n * is precise. For most applications, it is better to use Tone.Transport\n * instead of the Clock by itself since you can synchronize multiple callbacks.\n *\n * @param callback The callback to be invoked with the time of the audio event\n * @param frequency The rate of the callback\n * @example\n * //the callback will be invoked approximately once a second\n * //and will print the time exactly once a second apart.\n * const clock = new Clock(time => {\n * \tconsole.log(time);\n * }, 1);\n */\nvar Clock = /** @class */ (function (_super) {\n    __extends(Clock, _super);\n    function Clock() {\n        var _this = _super.call(this, optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"])) || this;\n        _this.name = \"Clock\";\n        /**\n         *  The callback function to invoke at the scheduled tick.\n         */\n        _this.callback = noOp;\n        /**\n         *  The last time the loop callback was invoked\n         */\n        _this._lastUpdate = 0;\n        /**\n         *  Keep track of the playback state\n         */\n        _this._state = new StateTimeline(\"stopped\");\n        /**\n         * Context bound reference to the _loop method\n         * This is necessary to remove the event in the end.\n         */\n        _this._boundLoop = _this._loop.bind(_this);\n        var options = optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]);\n        _this.callback = options.callback;\n        _this._tickSource = new TickSource({\n            context: _this.context,\n            frequency: options.frequency,\n            units: options.units,\n        });\n        _this._lastUpdate = 0;\n        _this.frequency = _this._tickSource.frequency;\n        readOnly(_this, \"frequency\");\n        // add an initial state\n        _this._state.setStateAtTime(\"stopped\", 0);\n        // bind a callback to the worker thread\n        _this.context.on(\"tick\", _this._boundLoop);\n        return _this;\n    }\n    Clock.getDefaults = function () {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            callback: noOp,\n            frequency: 1,\n            units: \"hertz\",\n        });\n    };\n    Object.defineProperty(Clock.prototype, \"state\", {\n        /**\n         *  Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n         */\n        get: function () {\n            return this._state.getValueAtTime(this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Start the clock at the given time. Optionally pass in an offset\n     *  of where to start the tick counter from.\n     *  @param  time    The time the clock should start\n     *  @param offset  Where the tick counter starts counting from.\n     */\n    Clock.prototype.start = function (time, offset) {\n        // make sure the context is started\n        this.context.resume();\n        // start the loop\n        var computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) !== \"started\") {\n            this._state.setStateAtTime(\"started\", computedTime);\n            this._tickSource.start(computedTime, offset);\n            if (computedTime < this._lastUpdate) {\n                this.emit(\"start\", computedTime, offset);\n            }\n        }\n        return this;\n    };\n    /**\n     *  Stop the clock. Stopping the clock resets the tick counter to 0.\n     *  @param time The time when the clock should stop.\n     *  @example\n     * clock.stop();\n     */\n    Clock.prototype.stop = function (time) {\n        var computedTime = this.toSeconds(time);\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        this._tickSource.stop(computedTime);\n        if (computedTime < this._lastUpdate) {\n            this.emit(\"stop\", computedTime);\n        }\n        return this;\n    };\n    /**\n     *  Pause the clock. Pausing does not reset the tick counter.\n     *  @param time The time when the clock should stop.\n     */\n    Clock.prototype.pause = function (time) {\n        var computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.setStateAtTime(\"paused\", computedTime);\n            this._tickSource.pause(computedTime);\n            if (computedTime < this._lastUpdate) {\n                this.emit(\"pause\", computedTime);\n            }\n        }\n        return this;\n    };\n    Object.defineProperty(Clock.prototype, \"ticks\", {\n        /**\n         *  The number of times the callback was invoked. Starts counting at 0\n         *  and increments after the callback was invoked.\n         */\n        get: function () {\n            return Math.ceil(this.getTicksAtTime(this.now()));\n        },\n        set: function (t) {\n            this._tickSource.ticks = t;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Clock.prototype, \"seconds\", {\n        /**\n         *  The time since ticks=0 that the Clock has been running. Accounts for tempo curves\n         */\n        get: function () {\n            return this._tickSource.seconds;\n        },\n        set: function (s) {\n            this._tickSource.seconds = s;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Return the elapsed seconds at the given time.\n     *  @param  time  When to get the elapsed seconds\n     *  @return  The number of elapsed seconds\n     */\n    Clock.prototype.getSecondsAtTime = function (time) {\n        return this._tickSource.getSecondsAtTime(time);\n    };\n    /**\n     * Set the clock's ticks at the given time.\n     * @param  ticks The tick value to set\n     * @param  time  When to set the tick value\n     */\n    Clock.prototype.setTicksAtTime = function (ticks, time) {\n        this._tickSource.setTicksAtTime(ticks, time);\n        return this;\n    };\n    /**\n     * Get the clock's ticks at the given time.\n     * @param  time  When to get the tick value\n     * @return The tick value at the given time.\n     */\n    Clock.prototype.getTicksAtTime = function (time) {\n        return this._tickSource.getTicksAtTime(time);\n    };\n    /**\n     * Get the time of the next tick\n     * @param  ticks The tick number.\n     */\n    Clock.prototype.nextTickTime = function (offset, when) {\n        var computedTime = this.toSeconds(when);\n        var currentTick = this.getTicksAtTime(computedTime);\n        return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);\n    };\n    /**\n     *  The scheduling loop.\n     */\n    Clock.prototype._loop = function () {\n        var _this = this;\n        var startTime = this._lastUpdate;\n        var endTime = this.now();\n        this._lastUpdate = endTime;\n        if (startTime !== endTime) {\n            // the state change events\n            this._state.forEachBetween(startTime, endTime, function (e) {\n                switch (e.state) {\n                    case \"started\":\n                        var offset = _this._tickSource.getTicksAtTime(e.time);\n                        _this.emit(\"start\", e.time, offset);\n                        break;\n                    case \"stopped\":\n                        if (e.time !== 0) {\n                            _this.emit(\"stop\", e.time);\n                        }\n                        break;\n                    case \"paused\":\n                        _this.emit(\"pause\", e.time);\n                        break;\n                }\n            });\n            // the tick callbacks\n            this._tickSource.forEachTickBetween(startTime, endTime, function (time, ticks) {\n                _this.callback(time, ticks);\n            });\n        }\n    };\n    /**\n     * Returns the scheduled state at the given time.\n     * @param  time  The time to query.\n     * @return  The name of the state input in setStateAtTime.\n     * @example\n     * clock.start(\"+0.1\");\n     * clock.getStateAtTime(\"+0.1\"); //returns \"started\"\n     */\n    Clock.prototype.getStateAtTime = function (time) {\n        var computedTime = this.toSeconds(time);\n        return this._state.getValueAtTime(computedTime);\n    };\n    /**\n     *  Clean up\n     */\n    Clock.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.context.off(\"tick\", this._boundLoop);\n        this._tickSource.dispose();\n        this._state.dispose();\n        return this;\n    };\n    return Clock;\n}(ToneWithContext));\nexport { Clock };\nEmitter.mixin(Clock);\n//# sourceMappingURL=Clock.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getContext } from \"../Global\";\nimport { TransportTimeClass } from \"./TransportTime\";\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Ticks(\"4n\"); //a quarter note as ticks\n */\nvar TicksClass = /** @class */ (function (_super) {\n    __extends(TicksClass, _super);\n    function TicksClass() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Ticks\";\n        _this.defaultUnits = \"i\";\n        return _this;\n    }\n    /**\n     * Get the current time in the given units\n     */\n    TicksClass.prototype._now = function () {\n        return this.context.transport.ticks;\n    };\n    /**\n     *  Return the value of the beats in the current units\n     */\n    TicksClass.prototype._beatsToUnits = function (beats) {\n        return this._getPPQ() * beats;\n    };\n    /**\n     *  Returns the value of a second in the current units\n     */\n    TicksClass.prototype._secondsToUnits = function (seconds) {\n        return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n    };\n    /**\n     *  Returns the value of a tick in the current time units\n     */\n    TicksClass.prototype._ticksToUnits = function (ticks) {\n        return ticks;\n    };\n    /**\n     *  Return the time in ticks\n     */\n    TicksClass.prototype.toTicks = function () {\n        return this.valueOf();\n    };\n    /**\n     *  Return the time in seconds\n     */\n    TicksClass.prototype.toSeconds = function () {\n        return (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n    };\n    return TicksClass;\n}(TransportTimeClass));\nexport { TicksClass };\nexport function Ticks(value, units) {\n    return new TicksClass(getContext(), value, units);\n}\n//# sourceMappingURL=Ticks.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getContext } from \"../Global\";\nimport { ftom, mtof } from \"./Conversions\";\nimport { FrequencyClass } from \"./Frequency\";\n/**\n *  @class Midi is a primitive type for encoding Time values.\n *         Midi can be constructed with or without the `new` keyword. Midi can be passed\n *         into the parameter of any method which takes time as an argument.\n *  @constructor\n *  @extends {Tone.Frequency}\n *  @param  {String|Number}  val    The time value.\n *  @param  {String=}  units  The units of the value.\n *  @example\n * var t = Midi(\"4n\");//a quarter note\n */\nvar MidiClass = /** @class */ (function (_super) {\n    __extends(MidiClass, _super);\n    function MidiClass() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Midi\";\n        _this.defaultUnits = \"midi\";\n        return _this;\n    }\n    /**\n     *  Returns the value of a frequency in the current units\n     */\n    MidiClass.prototype._frequencyToUnits = function (freq) {\n        return ftom(_super.prototype._frequencyToUnits.call(this, freq));\n    };\n    /**\n     *  Returns the value of a tick in the current time units\n     */\n    MidiClass.prototype._ticksToUnits = function (ticks) {\n        return ftom(_super.prototype._ticksToUnits.call(this, ticks));\n    };\n    /**\n     *  Return the value of the beats in the current units\n     */\n    MidiClass.prototype._beatsToUnits = function (beats) {\n        return ftom(_super.prototype._beatsToUnits.call(this, beats));\n    };\n    /**\n     *  Returns the value of a second in the current units\n     */\n    MidiClass.prototype._secondsToUnits = function (seconds) {\n        return ftom(_super.prototype._secondsToUnits.call(this, seconds));\n    };\n    /**\n     *  Return the value of the frequency as a MIDI note\n     *  @return  {MIDI}\n     *  @example\n     * Midi(60).toMidi(); //60\n     */\n    MidiClass.prototype.toMidi = function () {\n        return this.valueOf();\n    };\n    /**\n     *  Return the value of the frequency as a MIDI note\n     *  @return  {MIDI}\n     *  @example\n     * Midi(60).toFrequency(); //261.6255653005986\n     */\n    MidiClass.prototype.toFrequency = function () {\n        return mtof(this.toMidi());\n    };\n    /**\n     *  Transposes the frequency by the given number of semitones.\n     *  @return A new transposed MidiClass\n     *  @example\n     * Midi(\"A4\").transpose(3); //\"C5\"\n     */\n    MidiClass.prototype.transpose = function (interval) {\n        return new MidiClass(this.context, this.toMidi() + interval);\n    };\n    return MidiClass;\n}(FrequencyClass));\nexport { MidiClass };\n/**\n * Convert a value into a FrequencyClass object.\n */\nexport function Midi(value, units) {\n    return new MidiClass(getContext(), value, units);\n}\n//# sourceMappingURL=Midi.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { Timeline } from \"./Timeline\";\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * Tone.Transport.schedule(function(time){\n * \t//use the time argument to schedule a callback with Draw\n * \tDraw.schedule(function(){\n * \t\t//do drawing or DOM manipulation here\n * \t}, time)\n * }, \"+0.5\")\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    function Draw() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"Draw\";\n        /**\n         *  The duration after which events are not invoked.\n         */\n        _this.expiration = 0.25;\n        /**\n         *  The amount of time before the scheduled time\n         *  that the callback can be invoked. Default is\n         *  half the time of an animation frame (0.008 seconds).\n         */\n        _this.anticipation = 0.008;\n        /**\n         *  All of the events.\n         */\n        _this._events = new Timeline();\n        /**\n         *  The draw loop\n         */\n        _this._boundDrawLoop = _this._drawLoop.bind(_this);\n        /**\n         * The animation frame id\n         */\n        _this._animationFrame = -1;\n        return _this;\n    }\n    /**\n     *  Schedule a function at the given time to be invoked\n     *  on the nearest animation frame.\n     *  @param  callback  Callback is invoked at the given time.\n     *  @param  time      The time relative to the AudioContext time to invoke the callback.\n     */\n    Draw.prototype.schedule = function (callback, time) {\n        this._events.add({\n            callback: callback,\n            time: this.toSeconds(time),\n        });\n        // start the draw loop on the first event\n        if (this._events.length === 1) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n        return this;\n    };\n    /**\n     *  Cancel events scheduled after the given time\n     *  @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n     */\n    Draw.prototype.cancel = function (after) {\n        this._events.cancel(this.toSeconds(after));\n        return this;\n    };\n    /**\n     *  The draw loop\n     */\n    Draw.prototype._drawLoop = function () {\n        var now = this.context.currentTime;\n        while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n            var event_1 = this._events.shift();\n            if (event_1 && now - event_1.time <= this.expiration) {\n                event_1.callback();\n            }\n        }\n        if (this._events.length > 0) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n    };\n    Draw.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._events.dispose();\n        cancelAnimationFrame(this._animationFrame);\n        return this;\n    };\n    return Draw;\n}(ToneWithContext));\nexport { Draw };\n//# sourceMappingURL=Draw.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Tone } from \"../Tone\";\nimport { isDefined } from \"./TypeCheck\";\n/**\n * Similar to Tone.Timeline, but all events represent\n * intervals with both \"time\" and \"duration\" times. The\n * events are placed in a tree structure optimized\n * for querying an intersection point with the timeline\n * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n * to represent the data.\n */\nvar IntervalTimeline = /** @class */ (function (_super) {\n    __extends(IntervalTimeline, _super);\n    function IntervalTimeline() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"IntervalTimeline\";\n        /**\n         *  The root node of the inteval tree\n         */\n        _this._root = null;\n        /**\n         *  Keep track of the length of the timeline.\n         */\n        _this._length = 0;\n        return _this;\n    }\n    /**\n     *  The event to add to the timeline. All events must\n     *  have a time and duration value\n     *  @param  event  The event to add to the timeline\n     */\n    IntervalTimeline.prototype.add = function (event) {\n        this.assert(isDefined(event.time), \"Events must have a time property\");\n        this.assert(isDefined(event.duration), \"Events must have a duration parameter\");\n        event.time = event.time.valueOf();\n        var node = new IntervalNode(event.time, event.time + event.duration, event);\n        if (this._root === null) {\n            this._root = node;\n        }\n        else {\n            this._root.insert(node);\n        }\n        this._length++;\n        // Restructure tree to be balanced\n        while (node !== null) {\n            node.updateHeight();\n            node.updateMax();\n            this._rebalance(node);\n            node = node.parent;\n        }\n        return this;\n    };\n    /**\n     *  Remove an event from the timeline.\n     *  @param  event  The event to remove from the timeline\n     */\n    IntervalTimeline.prototype.remove = function (event) {\n        if (this._root !== null) {\n            var results = [];\n            this._root.search(event.time, results);\n            for (var _i = 0, results_1 = results; _i < results_1.length; _i++) {\n                var node = results_1[_i];\n                if (node.event === event) {\n                    this._removeNode(node);\n                    this._length--;\n                    break;\n                }\n            }\n        }\n        return this;\n    };\n    Object.defineProperty(IntervalTimeline.prototype, \"length\", {\n        /**\n         *  The number of items in the timeline.\n         *  @readOnly\n         */\n        get: function () {\n            return this._length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Remove events whose time time is after the given time\n     *  @param  time  The time to query.\n     */\n    IntervalTimeline.prototype.cancel = function (after) {\n        var _this = this;\n        this.forEachFrom(after, function (event) { return _this.remove(event); });\n        return this;\n    };\n    /**\n     *  Set the root node as the given node\n     */\n    IntervalTimeline.prototype._setRoot = function (node) {\n        this._root = node;\n        if (this._root !== null) {\n            this._root.parent = null;\n        }\n    };\n    /**\n     *  Replace the references to the node in the node's parent\n     *  with the replacement node.\n     */\n    IntervalTimeline.prototype._replaceNodeInParent = function (node, replacement) {\n        if (node.parent !== null) {\n            if (node.isLeftChild()) {\n                node.parent.left = replacement;\n            }\n            else {\n                node.parent.right = replacement;\n            }\n            this._rebalance(node.parent);\n        }\n        else {\n            this._setRoot(replacement);\n        }\n    };\n    /**\n     *  Remove the node from the tree and replace it with\n     *  a successor which follows the schema.\n     */\n    IntervalTimeline.prototype._removeNode = function (node) {\n        if (node.left === null && node.right === null) {\n            this._replaceNodeInParent(node, null);\n        }\n        else if (node.right === null) {\n            this._replaceNodeInParent(node, node.left);\n        }\n        else if (node.left === null) {\n            this._replaceNodeInParent(node, node.right);\n        }\n        else {\n            var balance = node.getBalance();\n            var replacement = void 0;\n            var temp = null;\n            if (balance > 0) {\n                if (node.left.right === null) {\n                    replacement = node.left;\n                    replacement.right = node.right;\n                    temp = replacement;\n                }\n                else {\n                    replacement = node.left.right;\n                    while (replacement.right !== null) {\n                        replacement = replacement.right;\n                    }\n                    if (replacement.parent) {\n                        replacement.parent.right = replacement.left;\n                        temp = replacement.parent;\n                        replacement.left = node.left;\n                        replacement.right = node.right;\n                    }\n                }\n            }\n            else if (node.right.left === null) {\n                replacement = node.right;\n                replacement.left = node.left;\n                temp = replacement;\n            }\n            else {\n                replacement = node.right.left;\n                while (replacement.left !== null) {\n                    replacement = replacement.left;\n                }\n                if (replacement.parent) {\n                    replacement.parent.left = replacement.right;\n                    temp = replacement.parent;\n                    replacement.left = node.left;\n                    replacement.right = node.right;\n                }\n            }\n            if (node.parent !== null) {\n                if (node.isLeftChild()) {\n                    node.parent.left = replacement;\n                }\n                else {\n                    node.parent.right = replacement;\n                }\n            }\n            else {\n                this._setRoot(replacement);\n            }\n            if (temp) {\n                this._rebalance(temp);\n            }\n        }\n        node.dispose();\n    };\n    /**\n     *  Rotate the tree to the left\n     *  @param  {IntervalNode}  node\n     *  @private\n     */\n    IntervalTimeline.prototype._rotateLeft = function (node) {\n        var parent = node.parent;\n        var isLeftChild = node.isLeftChild();\n        // Make node.right the new root of this sub tree (instead of node)\n        var pivotNode = node.right;\n        node.right = pivotNode.left;\n        pivotNode.left = node;\n        if (parent !== null) {\n            if (isLeftChild) {\n                parent.left = pivotNode;\n            }\n            else {\n                parent.right = pivotNode;\n            }\n        }\n        else {\n            this._setRoot(pivotNode);\n        }\n    };\n    /**\n     *  Rotate the tree to the right\n     *  @param  {IntervalNode}  node\n     *  @private\n     */\n    IntervalTimeline.prototype._rotateRight = function (node) {\n        var parent = node.parent;\n        var isLeftChild = node.isLeftChild();\n        // Make node.left the new root of this sub tree (instead of node)\n        var pivotNode = node.left;\n        node.left = pivotNode.right;\n        pivotNode.right = node;\n        if (parent !== null) {\n            if (isLeftChild) {\n                parent.left = pivotNode;\n            }\n            else {\n                parent.right = pivotNode;\n            }\n        }\n        else {\n            this._setRoot(pivotNode);\n        }\n    };\n    /**\n     *  Balance the BST\n     */\n    IntervalTimeline.prototype._rebalance = function (node) {\n        var balance = node.getBalance();\n        if (balance > 1 && node.left) {\n            if (node.left.getBalance() < 0) {\n                this._rotateLeft(node.left);\n            }\n            else {\n                this._rotateRight(node);\n            }\n        }\n        else if (balance < -1 && node.right) {\n            if (node.right.getBalance() > 0) {\n                this._rotateRight(node.right);\n            }\n            else {\n                this._rotateLeft(node);\n            }\n        }\n    };\n    /**\n     *  Get an event whose time and duration span the give time. Will\n     *  return the match whose \"time\" value is closest to the given time.\n     *  @return  The event which spans the desired time\n     */\n    IntervalTimeline.prototype.get = function (time) {\n        if (this._root !== null) {\n            var results = [];\n            this._root.search(time, results);\n            if (results.length > 0) {\n                var max = results[0];\n                for (var i = 1; i < results.length; i++) {\n                    if (results[i].low > max.low) {\n                        max = results[i];\n                    }\n                }\n                return max.event;\n            }\n        }\n        return null;\n    };\n    /**\n     *  Iterate over everything in the timeline.\n     *  @param  callback The callback to invoke with every item\n     */\n    IntervalTimeline.prototype.forEach = function (callback) {\n        if (this._root !== null) {\n            var allNodes_1 = [];\n            this._root.traverse(function (node) { return allNodes_1.push(node); });\n            allNodes_1.forEach(function (node) {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    };\n    /**\n     *  Iterate over everything in the array in which the given time\n     *  overlaps with the time and duration time of the event.\n     *  @param  time The time to check if items are overlapping\n     *  @param  callback The callback to invoke with every item\n     */\n    IntervalTimeline.prototype.forEachAtTime = function (time, callback) {\n        if (this._root !== null) {\n            var results = [];\n            this._root.search(time, results);\n            results.forEach(function (node) {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    };\n    /**\n     *  Iterate over everything in the array in which the time is greater\n     *  than or equal to the given time.\n     *  @param  time The time to check if items are before\n     *  @param  callback The callback to invoke with every item\n     */\n    IntervalTimeline.prototype.forEachFrom = function (time, callback) {\n        if (this._root !== null) {\n            var results = [];\n            this._root.searchAfter(time, results);\n            results.forEach(function (node) {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    };\n    /**\n     *  Clean up\n     */\n    IntervalTimeline.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._root !== null) {\n            this._root.traverse(function (node) { return node.dispose(); });\n        }\n        this._root = null;\n        return this;\n    };\n    return IntervalTimeline;\n}(Tone));\nexport { IntervalTimeline };\n///////////////////////////////////////////////////////////////////////////\n// \tINTERVAL NODE HELPER\n///////////////////////////////////////////////////////////////////////////\n/**\n *  Represents a node in the binary search tree, with the addition\n *  of a \"high\" value which keeps track of the highest value of\n *  its children.\n *  References:\n *  https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n *  http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n *  @param low\n *  @param high\n */\n// tslint:disable-next-line: max-classes-per-file\nvar IntervalNode = /** @class */ (function () {\n    function IntervalNode(low, high, event) {\n        // the nodes to the left\n        this._left = null;\n        // the nodes to the right\n        this._right = null;\n        // the parent node\n        this.parent = null;\n        // the number of child nodes\n        this.height = 0;\n        this.event = event;\n        // the low value\n        this.low = low;\n        // the high value\n        this.high = high;\n        // the high value for this and all child nodes\n        this.max = this.high;\n    }\n    /**\n     *  Insert a node into the correct spot in the tree\n     */\n    IntervalNode.prototype.insert = function (node) {\n        if (node.low <= this.low) {\n            if (this.left === null) {\n                this.left = node;\n            }\n            else {\n                this.left.insert(node);\n            }\n        }\n        else if (this.right === null) {\n            this.right = node;\n        }\n        else {\n            this.right.insert(node);\n        }\n    };\n    /**\n     *  Search the tree for nodes which overlap\n     *  with the given point\n     *  @param  point  The point to query\n     *  @param  results  The array to put the results\n     */\n    IntervalNode.prototype.search = function (point, results) {\n        // If p is to the right of the rightmost point of any interval\n        // in this node and all children, there won't be any matches.\n        if (point > this.max) {\n            return;\n        }\n        // Search left children\n        if (this.left !== null) {\n            this.left.search(point, results);\n        }\n        // Check this node\n        if (this.low <= point && this.high > point) {\n            results.push(this);\n        }\n        // If p is to the left of the time of this interval,\n        // then it can't be in any child to the right.\n        if (this.low > point) {\n            return;\n        }\n        // Search right children\n        if (this.right !== null) {\n            this.right.search(point, results);\n        }\n    };\n    /**\n     *  Search the tree for nodes which are less\n     *  than the given point\n     *  @param  point  The point to query\n     *  @param  results  The array to put the results\n     */\n    IntervalNode.prototype.searchAfter = function (point, results) {\n        // Check this node\n        if (this.low >= point) {\n            results.push(this);\n            if (this.left !== null) {\n                this.left.searchAfter(point, results);\n            }\n        }\n        // search the right side\n        if (this.right !== null) {\n            this.right.searchAfter(point, results);\n        }\n    };\n    /**\n     *  Invoke the callback on this element and both it's branches\n     *  @param  {Function}  callback\n     */\n    IntervalNode.prototype.traverse = function (callback) {\n        callback(this);\n        if (this.left !== null) {\n            this.left.traverse(callback);\n        }\n        if (this.right !== null) {\n            this.right.traverse(callback);\n        }\n    };\n    /**\n     *  Update the height of the node\n     */\n    IntervalNode.prototype.updateHeight = function () {\n        if (this.left !== null && this.right !== null) {\n            this.height = Math.max(this.left.height, this.right.height) + 1;\n        }\n        else if (this.right !== null) {\n            this.height = this.right.height + 1;\n        }\n        else if (this.left !== null) {\n            this.height = this.left.height + 1;\n        }\n        else {\n            this.height = 0;\n        }\n    };\n    /**\n     *  Update the height of the node\n     */\n    IntervalNode.prototype.updateMax = function () {\n        this.max = this.high;\n        if (this.left !== null) {\n            this.max = Math.max(this.max, this.left.max);\n        }\n        if (this.right !== null) {\n            this.max = Math.max(this.max, this.right.max);\n        }\n    };\n    /**\n     *  The balance is how the leafs are distributed on the node\n     *  @return  Negative numbers are balanced to the right\n     */\n    IntervalNode.prototype.getBalance = function () {\n        var balance = 0;\n        if (this.left !== null && this.right !== null) {\n            balance = this.left.height - this.right.height;\n        }\n        else if (this.left !== null) {\n            balance = this.left.height + 1;\n        }\n        else if (this.right !== null) {\n            balance = -(this.right.height + 1);\n        }\n        return balance;\n    };\n    /**\n     *  @returns true if this node is the left child of its parent\n     */\n    IntervalNode.prototype.isLeftChild = function () {\n        return this.parent !== null && this.parent.left === this;\n    };\n    Object.defineProperty(IntervalNode.prototype, \"left\", {\n        /**\n         *  get/set the left node\n         */\n        get: function () {\n            return this._left;\n        },\n        set: function (node) {\n            this._left = node;\n            if (node !== null) {\n                node.parent = this;\n            }\n            this.updateHeight();\n            this.updateMax();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IntervalNode.prototype, \"right\", {\n        /**\n         *  get/set the right node\n         */\n        get: function () {\n            return this._right;\n        },\n        set: function (node) {\n            this._right = node;\n            if (node !== null) {\n                node.parent = this;\n            }\n            this.updateHeight();\n            this.updateMax();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  null out references.\n     */\n    IntervalNode.prototype.dispose = function () {\n        this.parent = null;\n        this._left = null;\n        this._right = null;\n        this.event = null;\n    };\n    return IntervalNode;\n}());\n//# sourceMappingURL=IntervalTimeline.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n *  @class Volume is a simple volume node, useful for creating a volume fader.\n *\n *  @extends {Tone.AudioNode}\n *  @constructor\n *  @param {Decibels} [volume=0] the initial volume\n *  @example\n * var vol = new Volume(-12);\n * instrument.chain(vol, Tone.Master);\n */\nvar Volume = /** @class */ (function (_super) {\n    __extends(Volume, _super);\n    function Volume() {\n        var _this = _super.call(this, optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"])) || this;\n        _this.name = \"Volume\";\n        /**\n         * the output node\n         */\n        _this.output = new Gain({\n            context: _this.context,\n            units: \"decibels\",\n        });\n        /**\n         * Input and output are the same\n         */\n        _this.input = _this.output;\n        /**\n         *  The volume control in decibels.\n         */\n        _this.volume = _this.output.gain;\n        var options = optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]);\n        _this.volume.value = options.volume;\n        readOnly(_this, \"volume\");\n        _this._unmutedVolume = options.volume;\n        // set the mute initially\n        _this.mute = options.mute;\n        return _this;\n    }\n    Volume.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    };\n    Object.defineProperty(Volume.prototype, \"mute\", {\n        /**\n         * Mute the output.\n         * @example\n         * //mute the output\n         * volume.mute = true;\n         */\n        get: function () {\n            return this.volume.value === -Infinity;\n        },\n        set: function (mute) {\n            if (!this.mute && mute) {\n                this._unmutedVolume = this.volume.value;\n                // maybe it should ramp here?\n                this.volume.value = -Infinity;\n            }\n            else if (this.mute && !mute) {\n                this.volume.value = this._unmutedVolume;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  clean up\n     */\n    Volume.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.input.dispose();\n        this.volume.dispose();\n        return this;\n    };\n    return Volume;\n}(ToneAudioNode));\nexport { Volume };\n//# sourceMappingURL=Volume.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Volume } from \"../../component/channel/Volume\";\nimport { connectSeries } from \"../Connect\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\nimport { Gain } from \"./Gain\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n *  A single master output which is connected to the\n *  AudioDestinationNode (aka your speakers).\n *  It provides useful conveniences such as the ability\n *  to set the volume and mute the entire application.\n *  It also gives you the ability to apply master effects to your application.\n *\n *  @example\n * //the audio will go from the oscillator to the speakers\n * oscillator.connect(Destination);\n * //a convenience for connecting to the master output is also provided:\n * oscillator.toDestination();\n * //the above two examples are equivalent.\n */\nvar Destination = /** @class */ (function (_super) {\n    __extends(Destination, _super);\n    function Destination() {\n        var _this = _super.call(this, optionsFromArguments(Destination.getDefaults(), arguments)) || this;\n        _this.name = \"Destination\";\n        _this.input = new Volume({ context: _this.context });\n        _this.output = new Gain({ context: _this.context });\n        /**\n         * The volume of the master output.\n         */\n        _this.volume = _this.input.volume;\n        var options = optionsFromArguments(Destination.getDefaults(), arguments);\n        connectSeries(_this.input, _this.output, _this.context.rawContext.destination);\n        _this.volume.value = options.volume;\n        _this.mute = options.mute;\n        return _this;\n    }\n    Destination.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    };\n    Object.defineProperty(Destination.prototype, \"mute\", {\n        /**\n         * Mute the output.\n         * @example\n         * //mute the output\n         * Destination.mute = true;\n         */\n        get: function () {\n            return this.input.mute;\n        },\n        set: function (mute) {\n            this.input.mute = mute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n     *  chained in the master effects chain.\n     *  @param nodes All arguments will be connected in a row and the Master will be routed through it.\n     *  @return  {Destination}  this\n     *  @example\n     * //some overall compression to keep the levels in check\n     * var masterCompressor = new Tone.Compressor({\n     * \t\"threshold\" : -6,\n     * \t\"ratio\" : 3,\n     * \t\"attack\" : 0.5,\n     * \t\"release\" : 0.1\n     * });\n     * //give a little boost to the lows\n     * var lowBump = new Tone.Filter(200, \"lowshelf\");\n     * //route everything through the filter\n     * //and compressor before going to the speakers\n     * Destination.chain(lowBump, masterCompressor);\n     */\n    Destination.prototype.chain = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.input.disconnect();\n        args.unshift(this.input);\n        args.push(this.output);\n        connectSeries.apply(void 0, args);\n        return this;\n    };\n    /**\n     *  Clean up\n     */\n    Destination.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.volume.dispose();\n        return this;\n    };\n    return Destination;\n}(ToneAudioNode));\nexport { Destination };\n///////////////////////////////////////////////////////////////////////////\n// \tINITIALIZATION\n///////////////////////////////////////////////////////////////////////////\nonContextInit(function (context) {\n    context.destination = new Destination({ context: context });\n});\nonContextClose(function (context) {\n    context.destination.dispose();\n});\n//# sourceMappingURL=Destination.js.map","import { noOp } from \"../util/Interface\";\n/**\n * TransportEvent is an internal class used by (Tone.Transport)[Transport]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n * @param Transport The transport object which the event belongs to\n */\nvar TransportEvent = /** @class */ (function () {\n    function TransportEvent(transport, opts) {\n        /**\n         * The unique id of the event\n         */\n        this.id = TransportEvent._eventId++;\n        var options = Object.assign(TransportEvent.getDefaults(), opts);\n        this.transport = transport;\n        this.callback = options.callback;\n        this._once = options.once;\n        this.time = options.time;\n    }\n    TransportEvent.getDefaults = function () {\n        return {\n            callback: noOp,\n            once: false,\n            time: 0,\n        };\n    };\n    /**\n     * Invoke the event callback.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    TransportEvent.prototype.invoke = function (time) {\n        if (this.callback) {\n            this.callback(time);\n            if (this._once) {\n                this.transport.clear(this.id);\n            }\n        }\n    };\n    /**\n     * Clean up\n     */\n    TransportEvent.prototype.dispose = function () {\n        this.callback = undefined;\n        return this;\n    };\n    /**\n     * Current ID counter\n     */\n    TransportEvent._eventId = 0;\n    return TransportEvent;\n}());\nexport { TransportEvent };\n//# sourceMappingURL=TransportEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportEvent } from \"./TransportEvent\";\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\nvar TransportRepeatEvent = /** @class */ (function (_super) {\n    __extends(TransportRepeatEvent, _super);\n    function TransportRepeatEvent(transport, opts) {\n        var _this = _super.call(this, transport, opts) || this;\n        /**\n         * The ID of the current timeline event\n         */\n        _this._currentId = -1;\n        /**\n         * The ID of the next timeline event\n         */\n        _this._nextId = -1;\n        /**\n         * The time of the next event\n         */\n        _this._nextTick = _this.time;\n        /**\n         * a reference to the bound start method\n         */\n        _this._boundRestart = _this._restart.bind(_this);\n        var options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n        _this.duration = new TicksClass(transport.context, options.duration).valueOf();\n        _this._interval = new TicksClass(transport.context, options.interval).valueOf();\n        _this._nextTick = options.time;\n        _this.transport.on(\"start\", _this._boundRestart);\n        _this.transport.on(\"loopStart\", _this._boundRestart);\n        _this.context = _this.transport.context;\n        _this._restart();\n        return _this;\n    }\n    TransportRepeatEvent.getDefaults = function () {\n        return Object.assign({}, TransportEvent.getDefaults(), {\n            duration: Infinity,\n            interval: 1,\n            once: false,\n        });\n    };\n    /**\n     * Invoke the callback. Returns the tick time which\n     * the next event should be scheduled at.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    TransportRepeatEvent.prototype.invoke = function (time) {\n        // create more events if necessary\n        this._createEvents(time);\n        // call the super class\n        _super.prototype.invoke.call(this, time);\n    };\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    TransportRepeatEvent.prototype._createEvents = function (time) {\n        // schedule the next event\n        var ticks = this.transport.getTicksAtTime(time);\n        if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n            this._nextTick += this._interval;\n            this._currentId = this._nextId;\n            this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        }\n    };\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    TransportRepeatEvent.prototype._restart = function (time) {\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this._nextTick = this.time;\n        var ticks = this.transport.getTicksAtTime(time);\n        if (ticks > this.time) {\n            this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n        }\n        this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        this._nextTick += this._interval;\n        this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    };\n    /**\n     * Clean up\n     */\n    TransportRepeatEvent.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this.transport.off(\"start\", this._boundRestart);\n        this.transport.off(\"loopStart\", this._boundRestart);\n        return this;\n    };\n    return TransportRepeatEvent;\n}(TransportEvent));\nexport { TransportRepeatEvent };\n//# sourceMappingURL=TransportRepeatEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { TimeClass } from \"../../core/type/Time\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\nimport { Gain } from \"../context/Gain\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { readOnly, writable } from \"../util/Interface\";\nimport { IntervalTimeline } from \"../util/IntervalTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isArray, isDefined } from \"../util/TypeCheck\";\nimport { Clock } from \"./Clock\";\nimport { TransportEvent } from \"./TransportEvent\";\nimport { TransportRepeatEvent } from \"./TransportRepeatEvent\";\n/**\n * Transport for timing musical events.\n * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n * Transport timing events pass in the exact time of the scheduled event\n * in the argument of the callback function. Pass that time value to the object\n * you're scheduling. <br><br>\n * A single transport is created for you when the library is initialized.\n * <br><br>\n * The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n * called with the time of that event as the argument.\n *\n * @example\n * //repeated event every 8th note\n * Transport.scheduleRepeat(function(time){\n * \t//do something with the time\n * }, \"8n\");\n * @example\n * //schedule an event on the 16th measure\n * Transport.schedule(function(time){\n * \t//do something with the time\n * }, \"16:0:0\");\n */\nvar Transport = /** @class */ (function (_super) {\n    __extends(Transport, _super);\n    function Transport() {\n        var _this = _super.call(this, optionsFromArguments(Transport.getDefaults(), arguments)) || this;\n        _this.name = \"Transport\";\n        ///////////////////////////////////////////////////////////////////////\n        // \tLOOPING\n        //////////////////////////////////////////////////////////////////////\n        /**\n         * \tIf the transport loops or not.\n         */\n        _this.loop = false;\n        /**\n         * \tThe loop start position in ticks\n         */\n        _this._loopStart = 0;\n        /**\n         * \tThe loop end position in ticks\n         */\n        _this._loopEnd = 0;\n        ///////////////////////////////////////////////////////////////////////\n        // \tTIMELINE EVENTS\n        //////////////////////////////////////////////////////////////////////\n        /**\n         *  All the events in an object to keep track by ID\n         */\n        _this._scheduledEvents = {};\n        /**\n         * \tThe scheduled events.\n         */\n        _this._timeline = new Timeline();\n        /**\n         *  Repeated events\n         */\n        _this._repeatedEvents = new IntervalTimeline();\n        /**\n         *  All of the synced Signals\n         */\n        _this._syncedSignals = [];\n        /**\n         *  The swing amount\n         */\n        _this._swingAmount = 0;\n        var options = optionsFromArguments(Transport.getDefaults(), arguments);\n        // CLOCK/TEMPO\n        _this._ppq = options.ppq;\n        _this._clock = new Clock({\n            callback: _this._processTick.bind(_this),\n            context: _this.context,\n            frequency: 0,\n            units: \"bpm\",\n        });\n        _this._bindClockEvents();\n        _this.bpm = _this._clock.frequency;\n        _this._clock.frequency.multiplier = options.ppq;\n        _this.bpm.value = options.bpm;\n        readOnly(_this, \"bpm\");\n        _this._timeSignature = options.timeSignature;\n        // SWING\n        _this._swingTicks = options.ppq / 2; // 8n\n        return _this;\n    }\n    Transport.getDefaults = function () {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            bpm: 120,\n            loopEnd: \"4m\",\n            loopStart: 0,\n            ppq: 192,\n            swing: 0,\n            swingSubdivision: \"8n\",\n            timeSignature: 4,\n        });\n    };\n    ///////////////////////////////////////////////////////////////////////////////\n    // \tTICKS\n    ///////////////////////////////////////////////////////////////////////////////\n    /**\n     *  called on every tick\n     *  @param  tickTime clock relative tick time\n     *  @private\n     */\n    Transport.prototype._processTick = function (tickTime, ticks) {\n        // handle swing\n        if (this._swingAmount > 0 &&\n            ticks % this._ppq !== 0 && // not on a downbeat\n            ticks % (this._swingTicks * 2) !== 0) {\n            // add some swing\n            var progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n            var amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n            tickTime += new TicksClass(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;\n        }\n        // do the loop test\n        if (this.loop) {\n            if (ticks >= this._loopEnd) {\n                this.emit(\"loopEnd\", tickTime);\n                this._clock.setTicksAtTime(this._loopStart, tickTime);\n                ticks = this._loopStart;\n                this.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n                this.emit(\"loop\", tickTime);\n            }\n        }\n        // invoke the timeline events scheduled on this tick\n        this._timeline.forEachAtTime(ticks, function (event) { return event.invoke(tickTime); });\n    };\n    ///////////////////////////////////////////////////////////////////////////////\n    // \tSCHEDULABLE EVENTS\n    ///////////////////////////////////////////////////////////////////////////////\n    /**\n     * Schedule an event along the timeline.\n     * @param callback The callback to be invoked at the time.\n     * @param time The time to invoke the callback at.\n     * @return The id of the event which can be used for canceling the event.\n     * @example\n     * //trigger the callback when the Transport reaches the desired time\n     * Transport.schedule(function(time){\n     * \tenvelope.triggerAttack(time);\n     * }, \"128i\");\n     */\n    Transport.prototype.schedule = function (callback, time) {\n        var event = new TransportEvent(this, {\n            callback: callback,\n            time: new TransportTimeClass(this.context, time).toTicks(),\n        });\n        return this._addEvent(event, this._timeline);\n    };\n    /**\n     * Schedule a repeated event along the timeline. The event will fire\n     * at the `interval` starting at the `startTime` and for the specified\n     * `duration`.\n     * @param  callback   The callback to invoke.\n     * @param  interval   The duration between successive callbacks. Must be a positive number.\n     * @param  startTime  When along the timeline the events should start being invoked.\n     * @param  duration How long the event should repeat.\n     * @return  The ID of the scheduled event. Use this to cancel the event.\n     * @example\n     * //a callback invoked every eighth note after the first measure\n     * Transport.scheduleRepeat(callback, \"8n\", \"1m\");\n     */\n    Transport.prototype.scheduleRepeat = function (callback, interval, startTime, duration) {\n        if (duration === void 0) { duration = Infinity; }\n        var event = new TransportRepeatEvent(this, {\n            callback: callback,\n            duration: new TimeClass(this.context, duration).toTicks(),\n            interval: new TimeClass(this.context, interval).toTicks(),\n            time: new TransportTimeClass(this.context, startTime).toTicks(),\n        });\n        // kick it off if the Transport is started\n        // @ts-ignore\n        return this._addEvent(event, this._repeatedEvents);\n    };\n    /**\n     *  Schedule an event that will be removed after it is invoked.\n     *  @param callback The callback to invoke once.\n     *  @param time The time the callback should be invoked.\n     *  @returns The ID of the scheduled event.\n     */\n    Transport.prototype.scheduleOnce = function (callback, time) {\n        var event = new TransportEvent(this, {\n            callback: callback,\n            once: true,\n            time: new TransportTimeClass(this.context, time).toTicks(),\n        });\n        return this._addEvent(event, this._timeline);\n    };\n    /**\n     * Clear the passed in event id from the timeline\n     * @param eventId The id of the event.\n     */\n    Transport.prototype.clear = function (eventId) {\n        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n            var item = this._scheduledEvents[eventId.toString()];\n            item.timeline.remove(item.event);\n            item.event.dispose();\n            delete this._scheduledEvents[eventId.toString()];\n        }\n        return this;\n    };\n    /**\n     * Add an event to the correct timeline. Keep track of the\n     * timeline it was added to.\n     * @returns the event id which was just added\n     */\n    Transport.prototype._addEvent = function (event, timeline) {\n        this._scheduledEvents[event.id.toString()] = {\n            event: event,\n            timeline: timeline,\n        };\n        timeline.add(event);\n        return event.id;\n    };\n    /**\n     * Remove scheduled events from the timeline after\n     * the given time. Repeated events will be removed\n     * if their startTime is after the given time\n     * @param after Clear all events after this time.\n     */\n    Transport.prototype.cancel = function (after) {\n        var _this = this;\n        if (after === void 0) { after = 0; }\n        var computedAfter = this.toTicks(after);\n        this._timeline.forEachFrom(computedAfter, function (event) { return _this.clear(event.id); });\n        this._repeatedEvents.forEachFrom(computedAfter, function (event) { return _this.clear(event.id); });\n        return this;\n    };\n    ///////////////////////////////////////////////////////////////////////////////\n    // \tSTART/STOP/PAUSE\n    ///////////////////////////////////////////////////////////////////////////////\n    /**\n     *  Bind start/stop/pause events from the clock and emit them.\n     */\n    Transport.prototype._bindClockEvents = function () {\n        var _this = this;\n        this._clock.on(\"start\", function (time, offset) {\n            offset = new TicksClass(_this.context, offset).toSeconds();\n            _this.emit(\"start\", time, offset);\n        });\n        this._clock.on(\"stop\", function (time) {\n            _this.emit(\"stop\", time);\n        });\n        this._clock.on(\"pause\", function (time) {\n            _this.emit(\"pause\", time);\n        });\n    };\n    Object.defineProperty(Transport.prototype, \"state\", {\n        /**\n         *  Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n         */\n        get: function () {\n            return this._clock.getStateAtTime(this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Start the transport and all sources synced to the transport.\n     * @param  time The time when the transport should start.\n     * @param  offset The timeline offset to start the transport.\n     * @example\n     * //start the transport in one second starting at beginning of the 5th measure.\n     * Transport.start(\"+1\", \"4:0:0\");\n     */\n    Transport.prototype.start = function (time, offset) {\n        var offsetTicks;\n        if (isDefined(offset)) {\n            offsetTicks = this.toTicks(offset);\n        }\n        // start the clock\n        this._clock.start(time, offsetTicks);\n        return this;\n    };\n    /**\n     * Stop the transport and all sources synced to the transport.\n     * @param time The time when the transport should stop.\n     * @example\n     * Transport.stop();\n     */\n    Transport.prototype.stop = function (time) {\n        this._clock.stop(time);\n        return this;\n    };\n    /**\n     * Pause the transport and all sources synced to the transport.\n     */\n    Transport.prototype.pause = function (time) {\n        this._clock.pause(time);\n        return this;\n    };\n    /**\n     * Toggle the current state of the transport. If it is\n     * started, it will stop it, otherwise it will start the Transport.\n     * @param  time The time of the event\n     */\n    Transport.prototype.toggle = function (time) {\n        time = this.toSeconds(time);\n        if (this._clock.getStateAtTime(time) !== \"started\") {\n            this.start(time);\n        }\n        else {\n            this.stop(time);\n        }\n        return this;\n    };\n    Object.defineProperty(Transport.prototype, \"timeSignature\", {\n        ///////////////////////////////////////////////////////////////////////////////\n        // \tSETTERS/GETTERS\n        ///////////////////////////////////////////////////////////////////////////////\n        /**\n         * The time signature as just the numerator over 4.\n         * For example 4/4 would be just 4 and 6/8 would be 3.\n         * @example\n         * //common time\n         * Transport.timeSignature = 4;\n         * // 7/8\n         * Transport.timeSignature = [7, 8];\n         * //this will be reduced to a single number\n         * Transport.timeSignature; //returns 3.5\n         */\n        get: function () {\n            return this._timeSignature;\n        },\n        set: function (timeSig) {\n            if (isArray(timeSig)) {\n                timeSig = (timeSig[0] / timeSig[1]) * 4;\n            }\n            this._timeSignature = timeSig;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"loopStart\", {\n        /**\n         * When the Transport.loop = true, this is the starting position of the loop.\n         */\n        get: function () {\n            return new TimeClass(this.context, this._loopStart, \"i\").toSeconds();\n        },\n        set: function (startPosition) {\n            this._loopStart = this.toTicks(startPosition);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"loopEnd\", {\n        /**\n         * When the Transport.loop = true, this is the ending position of the loop.\n         */\n        get: function () {\n            return new TimeClass(this.context, this._loopEnd, \"i\").toSeconds();\n        },\n        set: function (endPosition) {\n            this._loopEnd = this.toTicks(endPosition);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set the loop start and stop at the same time.\n     * @example\n     * //loop over the first measure\n     * Transport.setLoopPoints(0, \"1m\");\n     * Transport.loop = true;\n     */\n    Transport.prototype.setLoopPoints = function (startPosition, endPosition) {\n        this.loopStart = startPosition;\n        this.loopEnd = endPosition;\n        return this;\n    };\n    Object.defineProperty(Transport.prototype, \"swing\", {\n        /**\n         * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.\n         */\n        get: function () {\n            return this._swingAmount;\n        },\n        set: function (amount) {\n            // scale the values to a normal range\n            this._swingAmount = amount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"swingSubdivision\", {\n        /**\n         * Set the subdivision which the swing will be applied to.\n         * The default value is an 8th note. Value must be less\n         * than a quarter note.\n         */\n        get: function () {\n            return new TicksClass(this.context, this._swingTicks).toNotation();\n        },\n        set: function (subdivision) {\n            this._swingTicks = this.toTicks(subdivision);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"position\", {\n        /**\n         *  The Transport's position in Bars:Beats:Sixteenths.\n         *  Setting the value will jump to that position right away.\n         */\n        get: function () {\n            var now = this.now();\n            var ticks = this._clock.getTicksAtTime(now);\n            return new TicksClass(this.context, ticks).toBarsBeatsSixteenths();\n        },\n        set: function (progress) {\n            var ticks = this.toTicks(progress);\n            this.ticks = ticks;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"seconds\", {\n        /**\n         *  The Transport's position in seconds\n         *  Setting the value will jump to that position right away.\n         */\n        get: function () {\n            return this._clock.seconds;\n        },\n        set: function (s) {\n            var now = this.now();\n            var ticks = this._clock.frequency.timeToTicks(s, now);\n            this.ticks = ticks;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"progress\", {\n        /**\n         *  The Transport's loop position as a normalized value. Always\n         *  returns 0 if the transport if loop is not true.\n         */\n        get: function () {\n            if (this.loop) {\n                var now = this.now();\n                var ticks = this._clock.getTicksAtTime(now);\n                return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Transport.prototype, \"ticks\", {\n        /**\n         *  The transports current tick position.\n         */\n        get: function () {\n            return this._clock.ticks;\n        },\n        set: function (t) {\n            if (this._clock.ticks !== t) {\n                var now = this.now();\n                // stop everything synced to the transport\n                if (this.state === \"started\") {\n                    this.emit(\"stop\", now);\n                    this._clock.setTicksAtTime(t, now);\n                    // restart it with the new time\n                    this.emit(\"start\", now, this.seconds);\n                }\n                else {\n                    this._clock.setTicksAtTime(t, now);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the clock's ticks at the given time.\n     * @param  time  When to get the tick value\n     * @return The tick value at the given time.\n     */\n    Transport.prototype.getTicksAtTime = function (time) {\n        return Math.round(this._clock.getTicksAtTime(time));\n    };\n    /**\n     *  Return the elapsed seconds at the given time.\n     *  @param  time  When to get the elapsed seconds\n     *  @return  The number of elapsed seconds\n     */\n    Transport.prototype.getSecondsAtTime = function (time) {\n        return this._clock.getSecondsAtTime(time);\n    };\n    Object.defineProperty(Transport.prototype, \"PPQ\", {\n        /**\n         *  Pulses Per Quarter note. This is the smallest resolution\n         *  the Transport timing supports. This should be set once\n         *  on initialization and not set again. Changing this value\n         *  after other objects have been created can cause problems.\n         */\n        get: function () {\n            return this._clock.frequency.multiplier;\n        },\n        set: function (ppq) {\n            this._clock.frequency.multiplier = ppq;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ///////////////////////////////////////////////////////////////////////////////\n    // \tSYNCING\n    ///////////////////////////////////////////////////////////////////////////////\n    /**\n     * Returns the time aligned to the next subdivision\n     * of the Transport. If the Transport is not started,\n     * it will return 0.\n     * Note: this will not work precisely during tempo ramps.\n     * @param  subdivision  The subdivision to quantize to\n     * @return  The context time of the next subdivision.\n     * @example\n     * Transport.start(); //the transport must be started\n     * Transport.nextSubdivision(\"4n\");\n     */\n    Transport.prototype.nextSubdivision = function (subdivision) {\n        subdivision = this.toTicks(subdivision);\n        if (this.state !== \"started\") {\n            // if the transport's not started, return 0\n            return 0;\n        }\n        else {\n            var now = this.now();\n            // the remainder of the current ticks and the subdivision\n            var transportPos = this.getTicksAtTime(now);\n            var remainingTicks = subdivision - transportPos % subdivision;\n            return this._clock.nextTickTime(remainingTicks, now);\n        }\n    };\n    /**\n     *  Attaches the signal to the tempo control signal so that\n     *  any changes in the tempo will change the signal in the same\n     *  ratio.\n     *\n     *  @param signal\n     *  @param ratio Optionally pass in the ratio between the two signals.\n     * \t\t\t\tOtherwise it will be computed based on their current values.\n     */\n    Transport.prototype.syncSignal = function (signal, ratio) {\n        if (!ratio) {\n            // get the sync ratio\n            var now = this.now();\n            if (signal.getValueAtTime(now) !== 0) {\n                var bpm = this.bpm.getValueAtTime(now);\n                var computedFreq = 1 / (60 / bpm / this.PPQ);\n                ratio = signal.getValueAtTime(now) / computedFreq;\n            }\n            else {\n                ratio = 0;\n            }\n        }\n        var ratioSignal = new Gain(ratio);\n        // @ts-ignore\n        this.bpm.connect(ratioSignal);\n        // @ts-ignore\n        ratioSignal.connect(signal._param);\n        this._syncedSignals.push({\n            initial: signal.value,\n            ratio: ratioSignal,\n            signal: signal,\n        });\n        signal.value = 0;\n        return this;\n    };\n    /**\n     *  Unsyncs a previously synced signal from the transport's control.\n     *  See Transport.syncSignal.\n     */\n    Transport.prototype.unsyncSignal = function (signal) {\n        for (var i = this._syncedSignals.length - 1; i >= 0; i--) {\n            var syncedSignal = this._syncedSignals[i];\n            if (syncedSignal.signal === signal) {\n                syncedSignal.ratio.dispose();\n                syncedSignal.signal.value = syncedSignal.initial;\n                this._syncedSignals.splice(i, 1);\n            }\n        }\n        return this;\n    };\n    /**\n     *  Clean up.\n     */\n    Transport.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._clock.dispose();\n        writable(this, \"bpm\");\n        this._timeline.dispose();\n        this._repeatedEvents.dispose();\n        return this;\n    };\n    return Transport;\n}(ToneWithContext));\nexport { Transport };\nEmitter.mixin(Transport);\n///////////////////////////////////////////////////////////////////////////////\n// \tINITIALIZATION\n///////////////////////////////////////////////////////////////////////////////\nonContextInit(function (context) {\n    context.transport = new Transport({ context: context });\n});\nonContextClose(function (context) {\n    context.transport.dispose();\n});\n//# sourceMappingURL=Transport.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Volume } from \"../component/channel/Volume\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { defaultArg } from \"../core/util/Defaults\";\nimport { noOp, readOnly } from \"../core/util/Interface\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isUndef } from \"../core/util/TypeCheck\";\n/**\n *  @class  Base class for sources. Sources have start/stop methods\n *          and the ability to be synced to the\n *          start/stop of this.context.transport.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @example\n * //Multiple state change events can be chained together,\n * //but must be set in the correct order and with ascending times\n *\n * // OK\n * state.start().stop(\"+0.2\");\n * // AND\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n *\n * // BAD\n * state.stop(\"+0.2\").start();\n * // OR\n * state.start(\"+0.3\").stop(\"+0.2\");\n *\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    function Source(options) {\n        var _this = _super.call(this, options) || this;\n        /**\n         *  The output volume node\n         */\n        _this._volume = new Volume({\n            context: _this.context,\n        });\n        /**\n         * The output note\n         */\n        _this.output = _this._volume;\n        /**\n         * There is no input\n         */\n        _this.input = undefined;\n        /**\n         * The volume of the output in decibels.\n         * @example\n         * source.volume.value = -6;\n         */\n        _this.volume = _this._volume.volume;\n        /**\n         * \tKeep track of the scheduled state.\n         */\n        _this._state = new StateTimeline(\"stopped\");\n        /**\n         *  The synced `start` callback function from the transport\n         *  @type {Function}\n         *  @private\n         */\n        _this._synced = false;\n        /**\n         *  Keep track of all of the scheduled event ids\n         */\n        _this._scheduled = [];\n        /**\n         * Placeholder functions for syncing/unsyncing to transport\n         */\n        _this._syncedStart = noOp;\n        _this._syncedStop = noOp;\n        readOnly(_this, \"volume\");\n        _this._state.memory = 100;\n        _this.volume.setValueAtTime(options.volume, 0);\n        // set mute initially\n        _this.mute = options.mute;\n        return _this;\n    }\n    Source.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    };\n    Object.defineProperty(Source.prototype, \"state\", {\n        /**\n         *  Returns the playback state of the source, either \"started\" or \"stopped\".\n         */\n        get: function () {\n            if (this._synced) {\n                if (this.context.transport.state === \"started\") {\n                    return this._state.getValueAtTime(this.context.transport.seconds);\n                }\n                else {\n                    return \"stopped\";\n                }\n            }\n            else {\n                return this._state.getValueAtTime(this.now());\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Source.prototype, \"mute\", {\n        /**\n         * Mute the output.\n         * @example\n         * //mute the output\n         * source.mute = true;\n         */\n        get: function () {\n            return this._volume.mute;\n        },\n        set: function (mute) {\n            this._volume.mute = mute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Start the source at the specified time. If no time is given,\n     *  start the source now.\n     *  @param  time When the source should be started.\n     *  @example\n     * source.start(\"+0.5\"); //starts the source 0.5 seconds from now\n     */\n    Source.prototype.start = function (time, offset, duration) {\n        var _this = this;\n        var computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n        // if it's started, stop it and restart it\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.cancel(computedTime);\n            this._state.setStateAtTime(\"started\", computedTime);\n            this.restart(computedTime, offset, duration);\n        }\n        else {\n            this._state.setStateAtTime(\"started\", computedTime);\n            if (this._synced) {\n                // add the offset time to the event\n                var event_1 = this._state.get(computedTime);\n                if (event_1) {\n                    event_1.offset = this.toSeconds(defaultArg(offset, 0));\n                    event_1.duration = duration ? this.toSeconds(duration) : undefined;\n                }\n                var sched = this.context.transport.schedule(function (t) {\n                    _this._start(t, offset, duration);\n                }, computedTime);\n                this._scheduled.push(sched);\n                // if it's already started\n                if (this.context.transport.state === \"started\") {\n                    this._syncedStart(this.now(), this.context.transport.seconds);\n                }\n            }\n            else {\n                this._start.apply(this, arguments);\n            }\n        }\n        return this;\n    };\n    /**\n     *  Stop the source at the specified time. If no time is given,\n     *  stop the source now.\n     *  @param  time When the source should be stopped.\n     *  @example\n     * source.stop(); // stops the source immediately\n     */\n    Source.prototype.stop = function (time) {\n        var computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n        if (!this._synced) {\n            this._stop.apply(this, arguments);\n        }\n        else {\n            var sched = this.context.transport.schedule(this._stop.bind(this), computedTime);\n            this._scheduled.push(sched);\n        }\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        return this;\n    };\n    /**\n     *  Sync the source to the Transport so that all subsequent\n     *  calls to `start` and `stop` are synced to the TransportTime\n     *  instead of the AudioContext time.\n     *\n     * @example\n     * //sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n     * source.sync().start(0).stop(0.3);\n     * //start the transport.\n     * this.context.transport.start();\n     *\n     * @example\n     * //start the transport with an offset and the sync'ed sources\n     * //will start in the correct position\n     * source.sync().start(0.1);\n     * //the source will be invoked with an offset of 0.4 = (0.5 - 0.1)\n     * this.context.transport.start(\"+0.5\", 0.5);\n     */\n    Source.prototype.sync = function () {\n        var _this = this;\n        if (!this._synced) {\n            this._synced = true;\n            this._syncedStart = function (time, offset) {\n                if (offset > 0) {\n                    // get the playback state at that time\n                    var stateEvent = _this._state.get(offset);\n                    // listen for start events which may occur in the middle of the sync'ed time\n                    if (stateEvent && stateEvent.state === \"started\" && stateEvent.time !== offset) {\n                        // get the offset\n                        var startOffset = offset - _this.toSeconds(stateEvent.time);\n                        var duration = void 0;\n                        if (stateEvent.duration) {\n                            duration = _this.toSeconds(stateEvent.duration) - startOffset;\n                        }\n                        _this._start(time, _this.toSeconds(stateEvent.offset) + startOffset, duration);\n                    }\n                }\n            };\n            this._syncedStop = function (time) {\n                var seconds = _this.context.transport.getSecondsAtTime(Math.max(time - _this.sampleTime, 0));\n                if (_this._state.getValueAtTime(seconds) === \"started\") {\n                    _this._stop(time);\n                }\n            };\n            this.context.transport.on(\"start\", this._syncedStart);\n            this.context.transport.on(\"loopStart\", this._syncedStart);\n            this.context.transport.on(\"stop\", this._syncedStop);\n            this.context.transport.on(\"pause\", this._syncedStop);\n            this.context.transport.on(\"loopEnd\", this._syncedStop);\n        }\n        return this;\n    };\n    /**\n     *  Unsync the source to the Transport. See Source.sync\n     */\n    Source.prototype.unsync = function () {\n        var _this = this;\n        if (this._synced) {\n            this.context.transport.off(\"stop\", this._syncedStop);\n            this.context.transport.off(\"pause\", this._syncedStop);\n            this.context.transport.off(\"loopEnd\", this._syncedStop);\n            this.context.transport.off(\"start\", this._syncedStart);\n            this.context.transport.off(\"loopStart\", this._syncedStart);\n        }\n        this._synced = false;\n        // clear all of the scheduled ids\n        this._scheduled.forEach(function (id) { return _this.context.transport.clear(id); });\n        this._scheduled = [];\n        this._state.cancel(0);\n        return this;\n    };\n    /**\n     * Clean up.\n     */\n    Source.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.unsync();\n        this._volume.dispose();\n        this._state.dispose();\n        return this;\n    };\n    return Source;\n}(ToneAudioNode));\nexport { Source };\n//# sourceMappingURL=Source.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { noOp } from \"../core/util/Interface\";\nvar OneShotSource = /** @class */ (function (_super) {\n    __extends(OneShotSource, _super);\n    function OneShotSource(options) {\n        var _this = _super.call(this, options) || this;\n        /**\n         *  The callback to invoke after the\n         *  source is done playing.\n         */\n        _this.onended = noOp;\n        /**\n         *  The start time\n         */\n        _this._startTime = -1;\n        /**\n         *  The stop time\n         */\n        _this._stopTime = -1;\n        /**\n         * The id of the timeout\n         */\n        _this._timeout = -1;\n        /**\n         * The public output node\n         */\n        _this.output = new Gain({\n            context: _this.context,\n            gain: 0,\n        });\n        /**\n         *  The output gain node.\n         */\n        _this._gainNode = _this.output;\n        /**\n         *  Get the playback state at the given time\n         */\n        _this.getStateAtTime = function (time) {\n            var computedTime = this.toSeconds(time);\n            if (this._startTime !== -1 && computedTime >= this._startTime &&\n                (this._stopTime === -1 || computedTime <= this._stopTime)) {\n                return \"started\";\n            }\n            else {\n                return \"stopped\";\n            }\n        };\n        _this._fadeIn = options.fadeIn;\n        _this._fadeOut = options.fadeOut;\n        _this._curve = options.curve;\n        return _this;\n    }\n    OneShotSource.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            curve: \"linear\",\n            fadeIn: 0,\n            fadeOut: 0,\n            onended: noOp,\n        });\n    };\n    /**\n     * Start the source at the given time\n     * @param  time When to start the source\n     */\n    OneShotSource.prototype._startGain = function (time, gain) {\n        if (gain === void 0) { gain = 1; }\n        this.assert(this._startTime === -1, \"Source cannot be started more than once\");\n        // apply a fade in envelope\n        var fadeInTime = this.toSeconds(this._fadeIn);\n        // record the start time\n        this._startTime = time + fadeInTime;\n        this._startTime = Math.max(this._startTime, this.context.currentTime);\n        // schedule the envelope\n        if (fadeInTime > 0) {\n            this._gainNode.gain.setValueAtTime(0, time);\n            if (this._curve === \"linear\") {\n                this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n            }\n            else {\n                this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n            }\n        }\n        else {\n            this._gainNode.gain.setValueAtTime(gain, time);\n        }\n        return this;\n    };\n    /**\n     * Stop the source node at the given time.\n     * @param time When to stop the source\n     */\n    OneShotSource.prototype.stop = function (time) {\n        this._stopGain(this.toSeconds(time));\n        return this;\n    };\n    /**\n     * Stop the source at the given time\n     * @param  time When to stop the source\n     */\n    OneShotSource.prototype._stopGain = function (time) {\n        var _this = this;\n        this.assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n        // cancel the previous stop\n        this.cancelStop();\n        // the fadeOut time\n        var fadeOutTime = this.toSeconds(this._fadeOut);\n        // schedule the stop callback\n        this._stopTime = this.toSeconds(time) + fadeOutTime;\n        this._stopTime = Math.max(this._stopTime, this.context.currentTime);\n        if (fadeOutTime > 0) {\n            // start the fade out curve at the given time\n            if (this._curve === \"linear\") {\n                this._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n            }\n            else {\n                this._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n            }\n        }\n        else {\n            // stop any ongoing ramps, and set the value to 0\n            this._gainNode.gain.cancelAndHoldAtTime(time);\n            this._gainNode.gain.setValueAtTime(0, time);\n        }\n        this.context.clearTimeout(this._timeout);\n        this._timeout = this.context.setTimeout(function () {\n            // allow additional time for the exponential curve to fully decay\n            var additionalTail = _this._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n            _this._stopSource(_this.now() + additionalTail);\n            _this._onended();\n        }, this._stopTime - this.context.currentTime);\n        return this;\n    };\n    /**\n     * Invoke the onended callback\n     */\n    OneShotSource.prototype._onended = function () {\n        var _this = this;\n        if (this.onended !== noOp) {\n            this.onended();\n            // overwrite onended to make sure it only is called once\n            this.onended = noOp;\n            // dispose when it's ended to free up for garbage collection\n            setTimeout(function () { return _this.dispose(); }, 1000);\n        }\n    };\n    Object.defineProperty(OneShotSource.prototype, \"state\", {\n        /**\n         * Get the playback state at the current time\n         */\n        get: function () {\n            return this.getStateAtTime(this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Cancel a scheduled stop event\n     */\n    OneShotSource.prototype.cancelStop = function () {\n        this.assert(this._startTime !== -1, \"Source is not started\");\n        // cancel the stop envelope\n        this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n        this.context.clearTimeout(this._timeout);\n        this._stopTime = -1;\n        return this;\n    };\n    OneShotSource.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._gainNode.disconnect();\n        return this;\n    };\n    return OneShotSource;\n}(ToneAudioNode));\nexport { OneShotSource };\n//# sourceMappingURL=OneShotSource.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { connect } from \"../../core/Connect\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { OneShotSource } from \"../OneShotSource\";\n/**\n *  Wrapper around the native BufferSourceNode.\n *  @param  buffer   The buffer to play\n *  @param  onended  The callback to invoke when the buffer is done playing.\n */\nvar ToneBufferSource = /** @class */ (function (_super) {\n    __extends(ToneBufferSource, _super);\n    function ToneBufferSource() {\n        var _this = _super.call(this, optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"buffer\", \"onload\"])) || this;\n        _this.name = \"ToneBufferSource\";\n        /**\n         *  The oscillator\n         */\n        _this._source = _this.context.createBufferSource();\n        _this._internalChannels = [_this._source];\n        /**\n         * indicators if the source has started/stopped\n         */\n        _this._sourceStarted = false;\n        _this._sourceStopped = false;\n        var options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"buffer\", \"onload\"]);\n        connect(_this._source, _this._gainNode);\n        _this._source.onended = function () { return _this._stopSource(); };\n        /**\n         *  The playbackRate of the buffer\n         */\n        _this.playbackRate = new Param({\n            context: _this.context,\n            param: _this._source.playbackRate,\n            units: \"positive\",\n            value: options.playbackRate,\n        });\n        // set some values initially\n        _this.loop = options.loop;\n        _this.loopStart = options.loopStart;\n        _this.loopEnd = options.loopEnd;\n        _this._buffer = new ToneAudioBuffer(options.buffer, options.onload);\n        _this._internalChannels.push(_this._source);\n        return _this;\n    }\n    ToneBufferSource.getDefaults = function () {\n        return Object.assign(OneShotSource.getDefaults(), {\n            buffer: new ToneAudioBuffer(),\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            onload: noOp,\n            playbackRate: 1,\n        });\n    };\n    Object.defineProperty(ToneBufferSource.prototype, \"fadeIn\", {\n        /**\n         *  The fadeIn time of the amplitude envelope.\n         */\n        get: function () {\n            return this._fadeIn;\n        },\n        set: function (t) {\n            this._fadeIn = t;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneBufferSource.prototype, \"fadeOut\", {\n        /**\n         *  The fadeOut time of the amplitude envelope.\n         */\n        get: function () {\n            return this._fadeOut;\n        },\n        set: function (t) {\n            this._fadeOut = t;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneBufferSource.prototype, \"curve\", {\n        /**\n         * The curve applied to the fades, either \"linear\" or \"exponential\"\n         */\n        get: function () {\n            return this._curve;\n        },\n        set: function (t) {\n            this._curve = t;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Start the buffer\n     *  @param  time When the player should start.\n     *  @param  offset The offset from the beginning of the sample to start at.\n     *  @param  duration How long the sample should play. If no duration\n     *                   is given, it will default to the full length\n     *                   of the sample (minus any offset)\n     *  @param  gain  The gain to play the buffer back at.\n     */\n    ToneBufferSource.prototype.start = function (time, offset, duration, gain) {\n        if (gain === void 0) { gain = 1; }\n        this.assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n        var computedTime = this.toSeconds(time);\n        // apply the gain envelope\n        this._startGain(computedTime, gain);\n        // if it's a loop the default offset is the loopstart point\n        if (this.loop) {\n            offset = defaultArg(offset, this.loopStart);\n        }\n        else {\n            // otherwise the default offset is 0\n            offset = defaultArg(offset, 0);\n        }\n        // make sure the offset is not less than 0\n        var computedOffset = Math.max(this.toSeconds(offset), 0);\n        // start the buffer source\n        if (this.loop) {\n            // modify the offset if it's greater than the loop time\n            var loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n            var loopStart = this.toSeconds(this.loopStart);\n            var loopDuration = loopEnd - loopStart;\n            // move the offset back\n            if (computedOffset >= loopEnd) {\n                computedOffset = ((computedOffset - loopStart) % loopDuration) + loopStart;\n            }\n        }\n        // this.buffer.loaded would have return false if the AudioBuffer was undefined\n        this._source.buffer = this.buffer.get();\n        this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n        if (computedOffset < this.buffer.duration) {\n            this._sourceStarted = true;\n            this._source.start(computedTime, computedOffset);\n        }\n        // if a duration is given, schedule a stop\n        if (isDefined(duration)) {\n            var computedDur = this.toSeconds(duration);\n            // make sure it's never negative\n            computedDur = Math.max(computedDur, 0);\n            this.stop(computedTime + computedDur);\n        }\n        return this;\n    };\n    ToneBufferSource.prototype._stopSource = function (time) {\n        if (!this._sourceStopped) {\n            this._sourceStopped = true;\n            this._source.stop(this.toSeconds(time));\n            this._onended();\n        }\n    };\n    Object.defineProperty(ToneBufferSource.prototype, \"loopStart\", {\n        /**\n         * If loop is true, the loop will start at this position.\n         */\n        get: function () {\n            return this._source.loopStart;\n        },\n        set: function (loopStart) {\n            this._source.loopStart = this.toSeconds(loopStart);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneBufferSource.prototype, \"loopEnd\", {\n        /**\n         * If loop is true, the loop will end at this position.\n         */\n        get: function () {\n            return this._source.loopEnd;\n        },\n        set: function (loopEnd) {\n            this._source.loopEnd = this.toSeconds(loopEnd);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneBufferSource.prototype, \"buffer\", {\n        /**\n         * The audio buffer belonging to the player.\n         */\n        get: function () {\n            return this._buffer;\n        },\n        set: function (buffer) {\n            this._buffer.set(buffer);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneBufferSource.prototype, \"loop\", {\n        /**\n         * If the buffer should loop once it's over.\n         */\n        get: function () {\n            return this._source.loop;\n        },\n        set: function (loop) {\n            this._source.loop = loop;\n            if (this._sourceStarted) {\n                this.cancelStop();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Clean up.\n     */\n    ToneBufferSource.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._source.onended = null;\n        this._source.disconnect();\n        this._buffer.dispose();\n        this.playbackRate.dispose();\n        return this;\n    };\n    return ToneBufferSource;\n}(OneShotSource));\nexport { ToneBufferSource };\n//# sourceMappingURL=BufferSource.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Source } from \"../source/Source\";\nimport { ToneBufferSource } from \"./buffer/BufferSource\";\n/**\n * Noise is a noise generator. It uses looped noise buffers to save on performance.\n * Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n *\n * @param type the noise type (white|pink|brown)\n * @example\n * //initialize the noise and start\n * var noise = new Noise(\"pink\").start();\n *\n * //make an autofilter to shape the noise\n * var autoFilter = new Tone.AutoFilter({\n * \t\"frequency\" : \"8m\",\n * \t\"min\" : 800,\n * \t\"max\" : 15000\n * }).connect(Tone.Master);\n *\n * //connect the noise\n * noise.connect(autoFilter);\n * //start the autofilter LFO\n * autoFilter.start()\n */\nvar Noise = /** @class */ (function (_super) {\n    __extends(Noise, _super);\n    function Noise() {\n        var _this = _super.call(this, optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"])) || this;\n        _this.name = \"Noise\";\n        /**\n         * Private reference to the source\n         */\n        _this._source = null;\n        var options = optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]);\n        _this._playbackRate = options.playbackRate;\n        _this.type = options.type;\n        return _this;\n    }\n    Noise.getDefaults = function () {\n        return Object.assign(Source.getDefaults(), {\n            playbackRate: 1,\n            type: \"white\",\n        });\n    };\n    Object.defineProperty(Noise.prototype, \"type\", {\n        /**\n         * The type of the noise. Can be \"white\", \"brown\", or \"pink\".\n         * @example\n         * noise.type = \"white\";\n         */\n        get: function () {\n            return this._type;\n        },\n        set: function (type) {\n            this.assert(type in _noiseBuffers, \"Noise: invalid type: \" + type);\n            if (this._type !== type) {\n                this._type = type;\n                // if it's playing, stop and restart it\n                if (this.state === \"started\") {\n                    var now = this.now();\n                    this._stop(now);\n                    this._start(now);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Noise.prototype, \"playbackRate\", {\n        /**\n         *  The playback rate of the noise. Affects\n         *  the \"frequency\" of the noise.\n         */\n        get: function () {\n            return this._playbackRate;\n        },\n        set: function (rate) {\n            this._playbackRate = rate;\n            if (this._source) {\n                this._source.playbackRate.value = rate;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  internal start method\n     */\n    Noise.prototype._start = function (time) {\n        var buffer = _noiseBuffers[this._type];\n        this._source = new ToneBufferSource(buffer).connect(this.output);\n        this._source.loop = true;\n        this._source.playbackRate.value = this._playbackRate;\n        this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n    };\n    /**\n     *  internal stop method\n     *\n     *  @param {Time} time\n     *  @private\n     */\n    Noise.prototype._stop = function (time) {\n        if (this._source) {\n            this._source.stop(this.toSeconds(time));\n            this._source = null;\n        }\n    };\n    /**\n     * Restarts the noise.\n     * @param  time When to restart the noise.\n     */\n    Noise.prototype.restart = function (time) {\n        // TODO could be optimized by cancelling the buffer source 'stop'\n        // stop and restart\n        this._stop(time);\n        this._start(time);\n        return this;\n    };\n    /**\n     *  Clean up.\n     */\n    Noise.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._source) {\n            this._source.disconnect();\n        }\n        return this;\n    };\n    return Noise;\n}(Source));\nexport { Noise };\n///////////////////////////////////////////////////////////////////////////\n// THE NOISE BUFFERS\n///////////////////////////////////////////////////////////////////////////\n// Noise buffer stats\nvar BUFFER_LENGTH = 44100 * 5;\nvar NUM_CHANNELS = 2;\n/**\n * Cache the noise buffers\n */\nvar _noiseCache = {\n    brown: null,\n    pink: null,\n    white: null,\n};\n/**\n * The noise arrays. Generated on initialization.\n * borrowed heavily from https://github.com/zacharydenton/noise.js\n * (c) 2013 Zach Denton (MIT)\n */\nvar _noiseBuffers = {\n    get brown() {\n        if (!_noiseCache.brown) {\n            var buffer = [];\n            for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                var channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                var lastOut = 0.0;\n                for (var i = 0; i < BUFFER_LENGTH; i++) {\n                    var white = Math.random() * 2 - 1;\n                    channel[i] = (lastOut + (0.02 * white)) / 1.02;\n                    lastOut = channel[i];\n                    channel[i] *= 3.5; // (roughly) compensate for gain\n                }\n            }\n            _noiseCache.brown = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.brown;\n    },\n    get pink() {\n        if (!_noiseCache.pink) {\n            var buffer = [];\n            for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                var channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                // tslint:disable-next-line: one-variable-per-declaration\n                var b0 = void 0, b1 = void 0, b2 = void 0, b3 = void 0, b4 = void 0, b5 = void 0, b6 = void 0;\n                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n                for (var i = 0; i < BUFFER_LENGTH; i++) {\n                    var white = Math.random() * 2 - 1;\n                    b0 = 0.99886 * b0 + white * 0.0555179;\n                    b1 = 0.99332 * b1 + white * 0.0750759;\n                    b2 = 0.96900 * b2 + white * 0.1538520;\n                    b3 = 0.86650 * b3 + white * 0.3104856;\n                    b4 = 0.55000 * b4 + white * 0.5329522;\n                    b5 = -0.7616 * b5 - white * 0.0168980;\n                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n                    channel[i] *= 0.11; // (roughly) compensate for gain\n                    b6 = white * 0.115926;\n                }\n            }\n            _noiseCache.pink = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.pink;\n    },\n    get white() {\n        if (!_noiseCache.white) {\n            var buffer = [];\n            for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                var channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                for (var i = 0; i < BUFFER_LENGTH; i++) {\n                    channel[i] = Math.random() * 2 - 1;\n                }\n            }\n            _noiseCache.white = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.white;\n    },\n};\n//# sourceMappingURL=Noise.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Param } from \"../core/context/Param\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * A signal is an audio-rate value. Tone.Signal is a core component of the library.\n * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n * has all of the methods available to native Web Audio\n * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n * as well as additional conveniences. Read more about working with signals\n * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *  @param value Initial value of the signal\n *  @param units unit The units the signal is in.\n * @example\n * const signal = new Tone.Signal(10);\n */\nvar Signal = /** @class */ (function (_super) {\n    __extends(Signal, _super);\n    function Signal() {\n        var _this = _super.call(this, optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"])) || this;\n        _this.name = \"Signal\";\n        /**\n         * Indicates if the value should be overridden on connection.\n         */\n        _this.override = true;\n        /**\n         * The constant source node which generates the signal\n         */\n        _this._constantSource = _this.context.createConstantSource();\n        _this.output = _this._constantSource;\n        var options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n        _this._constantSource.start(0);\n        _this.input = _this._param = new Param({\n            context: _this.context,\n            convert: options.convert,\n            param: _this._constantSource.offset,\n            units: options.units,\n            value: options.value,\n        });\n        return _this;\n    }\n    Signal.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            channelCount: 1,\n            channelCountMode: \"explicit\",\n            channelInterpretation: \"discrete\",\n            convert: true,\n            units: \"number\",\n            value: 0,\n        });\n    };\n    Signal.prototype.connect = function (destination, outputNum, inputNum) {\n        if (outputNum === void 0) { outputNum = 0; }\n        if (inputNum === void 0) { inputNum = 0; }\n        connectSignal(this, destination, outputNum, inputNum);\n        return this;\n    };\n    Signal.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._param.dispose();\n        return this;\n    };\n    ///////////////////////////////////////////////////////////////////////////\n    // ABSTRACT PARAM INTERFACE\n    // just a proxy for the ConstantSourceNode's offset AudioParam\n    // all docs are generated from AbstractParam.ts\n    ///////////////////////////////////////////////////////////////////////////\n    Signal.prototype.setValueAtTime = function (value, time) {\n        this._param.setValueAtTime(value, time);\n        return this;\n    };\n    Signal.prototype.getValueAtTime = function (time) {\n        return this._param.getValueAtTime(time);\n    };\n    Signal.prototype.setRampPoint = function (time) {\n        this._param.setRampPoint(time);\n        return this;\n    };\n    Signal.prototype.linearRampToValueAtTime = function (value, time) {\n        this._param.linearRampToValueAtTime(value, time);\n        return this;\n    };\n    Signal.prototype.exponentialRampToValueAtTime = function (value, time) {\n        this._param.exponentialRampToValueAtTime(value, time);\n        return this;\n    };\n    Signal.prototype.exponentialRampTo = function (value, rampTime, startTime) {\n        this._param.exponentialRampTo(value, rampTime, startTime);\n        return this;\n    };\n    Signal.prototype.linearRampTo = function (value, rampTime, startTime) {\n        this._param.linearRampTo(value, rampTime, startTime);\n        return this;\n    };\n    Signal.prototype.targetRampTo = function (value, rampTime, startTime) {\n        this._param.targetRampTo(value, rampTime, startTime);\n        return this;\n    };\n    Signal.prototype.exponentialApproachValueAtTime = function (value, time, rampTime) {\n        this._param.exponentialApproachValueAtTime(value, time, rampTime);\n        return this;\n    };\n    Signal.prototype.setTargetAtTime = function (value, startTime, timeConstant) {\n        this._param.setTargetAtTime(value, startTime, timeConstant);\n        return this;\n    };\n    Signal.prototype.setValueCurveAtTime = function (values, startTime, duration, scaling) {\n        this._param.setValueCurveAtTime(values, startTime, duration, scaling);\n        return this;\n    };\n    Signal.prototype.cancelScheduledValues = function (time) {\n        this._param.cancelScheduledValues(time);\n        return this;\n    };\n    Signal.prototype.cancelAndHoldAtTime = function (time) {\n        this._param.cancelAndHoldAtTime(time);\n        return this;\n    };\n    Signal.prototype.rampTo = function (value, rampTime, startTime) {\n        this._param.rampTo(value, rampTime, startTime);\n        return this;\n    };\n    Object.defineProperty(Signal.prototype, \"value\", {\n        get: function () {\n            return this._param.value;\n        },\n        set: function (value) {\n            this._param.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Signal.prototype, \"convert\", {\n        get: function () {\n            return this._param.convert;\n        },\n        set: function (convert) {\n            this._param.convert = convert;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Signal.prototype, \"units\", {\n        get: function () {\n            return this._param.units;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Signal.prototype, \"overridden\", {\n        get: function () {\n            return this._param.overridden;\n        },\n        set: function (overridden) {\n            this._param.overridden = overridden;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Signal.prototype, \"maxValue\", {\n        get: function () {\n            return this._param.maxValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Signal.prototype, \"minValue\", {\n        get: function () {\n            return this._param.minValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Signal;\n}(ToneAudioNode));\nexport { Signal };\n/**\n * When connecting from a signal, it's necessary to zero out the node destination\n * node if that node is also a signal. If the destination is not 0, then the values\n * will be summed. This method insures that the output of the destination signal will\n * be the same as the source signal, making the destination signal a pass through node.\n * @param signal The output signal to connect from\n * @param destination the destination to connect to\n * @param outputNum the optional output number\n * @param inputNum the input number\n */\nexport function connectSignal(signal, destination, outputNum, inputNum) {\n    if (destination instanceof Param || destination instanceof AudioParam ||\n        (destination instanceof Signal && destination.override)) {\n        // cancel changes\n        destination.cancelScheduledValues(0);\n        // reset the value\n        destination.setValueAtTime(0, 0);\n        // mark the value as overridden\n        if (destination instanceof Signal) {\n            destination.overridden = true;\n        }\n    }\n    connect(signal, destination, outputNum, inputNum);\n}\n//# sourceMappingURL=Signal.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { connect } from \"../../core/Connect\";\nimport { Param } from \"../../core/context/Param\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OneShotSource } from \"../OneShotSource\";\n/**\n * Wrapper around the native fire-and-forget OscillatorNode.\n * Adds the ability to reschedule the stop method.\n * ***[Tone.Oscillator](Oscillator) is better for most use-cases***\n *  @extends {Tone.AudioNode}\n *  @param  {AudioBuffer|Tone.Buffer}  buffer   The buffer to play\n *  @param  {Function}  onload  The callback to invoke when the\n *                               buffer is done playing.\n */\nvar ToneOscillatorNode = /** @class */ (function (_super) {\n    __extends(ToneOscillatorNode, _super);\n    function ToneOscillatorNode() {\n        var _this = _super.call(this, optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n        _this.name = \"ToneOscillatorNode\";\n        /**\n         *  The oscillator\n         */\n        _this._oscillator = _this.context.createOscillator();\n        _this._internalChannels = [_this._oscillator];\n        var options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        connect(_this._oscillator, _this._gainNode);\n        _this.type = options.type;\n        _this.frequency = new Param({\n            context: _this.context,\n            param: _this._oscillator.frequency,\n            units: \"frequency\",\n            value: _this.toFrequency(options.frequency),\n        });\n        _this.detune = new Param({\n            context: _this.context,\n            param: _this._oscillator.detune,\n            units: \"cents\",\n            value: options.detune,\n        });\n        return _this;\n    }\n    ToneOscillatorNode.getDefaults = function () {\n        return Object.assign(OneShotSource.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            type: \"sine\",\n        });\n    };\n    /**\n     * Start the oscillator node at the given time\n     * @param  time When to start the oscillator\n     */\n    ToneOscillatorNode.prototype.start = function (time) {\n        this.log(\"start\", time);\n        var computedTime = this.toSeconds(time);\n        this._startGain(computedTime);\n        this._oscillator.start(computedTime);\n        return this;\n    };\n    ToneOscillatorNode.prototype._stopSource = function (time) {\n        this._oscillator.stop(time);\n    };\n    /**\n     * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n     * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave\n     */\n    ToneOscillatorNode.prototype.setPeriodicWave = function (periodicWave) {\n        this._oscillator.setPeriodicWave(periodicWave);\n        return this;\n    };\n    Object.defineProperty(ToneOscillatorNode.prototype, \"type\", {\n        /**\n         * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n         */\n        get: function () {\n            return this._oscillator.type;\n        },\n        set: function (type) {\n            this._oscillator.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Clean up.\n     */\n    ToneOscillatorNode.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._oscillator.disconnect();\n        this.frequency.dispose();\n        this.detune.dispose();\n        return this;\n    };\n    return ToneOscillatorNode;\n}(OneShotSource));\nexport { ToneOscillatorNode };\n//# sourceMappingURL=OscillatorNode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { ToneOscillatorNode } from \"./OscillatorNode\";\n/**\n *  Oscillator supports a number of features including\n *  phase rotation, multiple oscillator types (see Oscillator.type),\n *  and Transport syncing (see Oscillator.syncFrequency).\n *\n *  @param frequency Starting frequency\n *  @param type The oscillator type. Read more about type below.\n *  @example\n * //make and start a 440hz sine tone\n * var osc = new Oscillator(440, \"sine\").toDestination().start();\n */\nvar Oscillator = /** @class */ (function (_super) {\n    __extends(Oscillator, _super);\n    function Oscillator() {\n        var _this = _super.call(this, optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n        _this.name = \"Oscillator\";\n        /**\n         *  the main oscillator\n         */\n        _this._oscillator = null;\n        var options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        _this.frequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        readOnly(_this, \"frequency\");\n        _this.detune = new Signal({\n            context: _this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(_this, \"detune\");\n        _this._partials = options.partials;\n        _this._partialCount = options.partialCount;\n        _this._phase = options.phase;\n        _this._type = options.type;\n        if (options.partialCount && options.type !== \"custom\") {\n            _this._type = _this.baseType + options.partialCount.toString();\n        }\n        _this.phase = _this._phase;\n        return _this;\n    }\n    Oscillator.getDefaults = function () {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            partialCount: 0,\n            partials: [],\n            phase: 0,\n            type: \"sine\",\n        });\n    };\n    /**\n     *  start the oscillator\n     */\n    Oscillator.prototype._start = function (time) {\n        this.log(\"start\", time);\n        // new oscillator with previous values\n        var oscillator = new ToneOscillatorNode({\n            context: this.context,\n        });\n        this._oscillator = oscillator;\n        if (this._wave) {\n            this._oscillator.setPeriodicWave(this._wave);\n        }\n        else {\n            this._oscillator.type = this._type;\n        }\n        // connect the control signal to the oscillator frequency & detune\n        this._oscillator.connect(this.output);\n        this.frequency.connect(this._oscillator.frequency);\n        this.detune.connect(this._oscillator.detune);\n        // start the oscillator\n        time = this.toSeconds(time);\n        this._oscillator.start(time);\n    };\n    /**\n     *  stop the oscillator\n     */\n    Oscillator.prototype._stop = function (time) {\n        this.log(\"stop\", time);\n        if (this._oscillator) {\n            time = this.toSeconds(time);\n            this._oscillator.stop(time);\n        }\n    };\n    /**\n     * Restart the oscillator. Does not stop the oscillator, but instead\n     * just cancels any scheduled 'stop' from being invoked.\n     */\n    Oscillator.prototype.restart = function (time) {\n        if (this._oscillator) {\n            this._oscillator.cancelStop();\n        }\n        this._state.cancel(this.toSeconds(time));\n        return this;\n    };\n    /**\n     *  Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n     *  will also affect the oscillators frequency.\n     *  @example\n     * Tone.Transport.bpm.value = 120;\n     * osc.frequency.value = 440;\n     * //the ration between the bpm and the frequency will be maintained\n     * osc.syncFrequency();\n     * Tone.Transport.bpm.value = 240;\n     * // the frequency of the oscillator is doubled to 880\n     */\n    Oscillator.prototype.syncFrequency = function () {\n        this.context.transport.syncSignal(this.frequency);\n        return this;\n    };\n    /**\n     *  Unsync the oscillator's frequency from the Transport.\n     *  See Oscillator.syncFrequency\n     */\n    Oscillator.prototype.unsyncFrequency = function () {\n        this.context.transport.unsyncSignal(this.frequency);\n        return this;\n    };\n    Object.defineProperty(Oscillator.prototype, \"type\", {\n        /* tslint:disable */\n        /**\n         * The type of the oscillator: either sine, square, triangle, or sawtooth. Also capable of\n         * setting the first x number of partials of the oscillator. For example: \"sine4\" would\n         * set be the first 4 partials of the sine wave and \"triangle8\" would set the first\n         * 8 partials of the triangle wave.\n         * <br><br>\n         * Uses PeriodicWave internally even for native types so that it can set the phase.\n         * PeriodicWave equations are from the\n         * [Webkit Web Audio implementation](https://code.google.com/p/chromium/codesearch#chromium/src/third_party/WebKit/Source/modules/webaudio/PeriodicWave.cpp&sq=package:chromium).\n         *\n         * @memberOf Oscillator#\n         * @type {string}\n         * @name type\n         * @example\n         * //set it to a square wave\n         * osc.type = \"square\";\n         * @example\n         * //set the first 6 partials of a sawtooth wave\n         * osc.type = \"sawtooth6\";\n         */\n        /* tslint:enable */\n        get: function () {\n            return this._type;\n        },\n        set: function (type) {\n            var isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n            if (this._phase === 0 && isBasicType) {\n                this._wave = undefined;\n                this._partialCount = 0;\n                // just go with the basic approach\n                if (this._oscillator !== null) {\n                    // already tested that it's a basic type\n                    this._oscillator.type = type;\n                }\n            }\n            else {\n                var _a = this._getRealImaginary(type, this._phase), real = _a[0], imag = _a[1];\n                var periodicWave = this.context.createPeriodicWave(real, imag);\n                this._wave = periodicWave;\n                if (this._oscillator !== null) {\n                    this._oscillator.setPeriodicWave(this._wave);\n                }\n            }\n            this._type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Oscillator.prototype, \"baseType\", {\n        /**\n         * The oscillator type without the partialsCount appended to the end\n         * @example\n         * osc.type = 'sine2'\n         * osc.baseType //'sine'\n         * osc.partialCount = 2\n         */\n        get: function () {\n            return this._type.replace(this.partialCount, \"\");\n        },\n        set: function (baseType) {\n            if (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n                this.type = baseType + this.partialCount;\n            }\n            else {\n                this.type = baseType;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Oscillator.prototype, \"partialCount\", {\n        /**\n         * 'partialCount' offers an alternative way to set the number of used partials.\n         * When partialCount is 0, the maximum number of partials are used when representing\n         * the waveform using the periodicWave. When 'partials' is set, this value is\n         * not settable, but equals the length of the partials array.\n         * @example\n         * osc.type = 'sine'\n         * osc.partialCount = 3\n         * //is equivalent to\n         * osc.type = 'sine3'\n         */\n        get: function () {\n            return this._partialCount;\n        },\n        set: function (p) {\n            var type = this._type;\n            var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n            if (partial) {\n                type = partial[1];\n            }\n            if (this._type !== \"custom\") {\n                if (p === 0) {\n                    this.type = type;\n                }\n                else {\n                    this.type = type + p.toString();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Get the object's attributes. Given no arguments get\n     *  will return all available object properties and their corresponding\n     *  values.\n     */\n    Oscillator.prototype.get = function () {\n        var values = _super.prototype.get.call(this);\n        if (values.type !== \"custom\") {\n            delete values.partials;\n        }\n        return values;\n    };\n    /**\n     *  Returns the real and imaginary components based\n     *  on the oscillator type.\n     *  @returns [real: Float32Array, imaginary: Float32Array]\n     *  @private\n     */\n    Oscillator.prototype._getRealImaginary = function (type, phase) {\n        var fftSize = 4096;\n        var periodicWaveSize = fftSize / 2;\n        var real = new Float32Array(periodicWaveSize);\n        var imag = new Float32Array(periodicWaveSize);\n        var partialCount = 1;\n        if (type === \"custom\") {\n            partialCount = this._partials.length + 1;\n            this._partialCount = this._partials.length;\n            periodicWaveSize = partialCount;\n        }\n        else {\n            var partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n            if (partial) {\n                partialCount = parseInt(partial[2], 10) + 1;\n                this._partialCount = parseInt(partial[2], 10);\n                type = partial[1];\n                partialCount = Math.max(partialCount, 2);\n                periodicWaveSize = partialCount;\n            }\n            else {\n                this._partialCount = 0;\n            }\n            this._partials = [];\n        }\n        // tslint:disable: no-bitwise\n        for (var n = 1; n < periodicWaveSize; ++n) {\n            var piFactor = 2 / (n * Math.PI);\n            var b = void 0;\n            switch (type) {\n                case \"sine\":\n                    b = (n <= partialCount) ? 1 : 0;\n                    this._partials[n - 1] = b;\n                    break;\n                case \"square\":\n                    b = (n & 1) ? 2 * piFactor : 0;\n                    this._partials[n - 1] = b;\n                    break;\n                case \"sawtooth\":\n                    b = piFactor * ((n & 1) ? 1 : -1);\n                    this._partials[n - 1] = b;\n                    break;\n                case \"triangle\":\n                    if (n & 1) {\n                        b = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n                    }\n                    else {\n                        b = 0;\n                    }\n                    this._partials[n - 1] = b;\n                    break;\n                case \"custom\":\n                    b = this._partials[n - 1];\n                    break;\n                default:\n                    throw new TypeError(\"Oscillator: invalid type: \" + type);\n            }\n            if (b !== 0) {\n                real[n] = -b * Math.sin(phase * n);\n                imag[n] = b * Math.cos(phase * n);\n            }\n            else {\n                real[n] = 0;\n                imag[n] = 0;\n            }\n        }\n        return [real, imag];\n    };\n    /**\n     *  Compute the inverse FFT for a given phase.\n     */\n    Oscillator.prototype._inverseFFT = function (real, imag, phase) {\n        var sum = 0;\n        var len = real.length;\n        for (var i = 0; i < len; i++) {\n            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n        }\n        return sum;\n    };\n    /**\n     *  Returns the initial value of the oscillator.\n     */\n    Oscillator.prototype._getInitialValue = function () {\n        var _a = this._getRealImaginary(this._type, 0), real = _a[0], imag = _a[1];\n        var maxValue = 0;\n        var twoPi = Math.PI * 2;\n        // check for peaks in 8 places\n        for (var i = 0; i < 8; i++) {\n            maxValue = Math.max(this._inverseFFT(real, imag, (i / 8) * twoPi), maxValue);\n        }\n        return -this._inverseFFT(real, imag, this._phase) / maxValue;\n    };\n    Object.defineProperty(Oscillator.prototype, \"partials\", {\n        /**\n         * The partials of the waveform. A partial represents\n         * the amplitude at a harmonic. The first harmonic is the\n         * fundamental frequency, the second is the octave and so on\n         * following the harmonic series.\n         * Setting this value will automatically set the type to \"custom\".\n         * The value is an empty array when the type is not \"custom\".\n         * @example\n         * osc.partials = [1, 0.2, 0.01];\n         */\n        get: function () {\n            return this._partials;\n        },\n        set: function (partials) {\n            this._partials = partials;\n            if (partials.length) {\n                this.type = \"custom\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Oscillator.prototype, \"phase\", {\n        /**\n         * The phase of the oscillator in degrees.\n         * @example\n         * osc.phase = 180; //flips the phase of the oscillator\n         */\n        get: function () {\n            return this._phase * (180 / Math.PI);\n        },\n        set: function (phase) {\n            this._phase = phase * Math.PI / 180;\n            // reset the type\n            this.type = this._type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Dispose and disconnect.\n     */\n    Oscillator.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._oscillator !== null) {\n            this._oscillator.dispose();\n        }\n        this._wave = undefined;\n        this.frequency.dispose();\n        this.detune.dispose();\n        return this;\n    };\n    return Oscillator;\n}(Source));\nexport { Oscillator };\n//# sourceMappingURL=Oscillator.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { optionsFromArguments } from \"..//core/util/Defaults\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n/**\n * A signal operator has an input and output and modifies the signal.\n */\nvar SignalOperator = /** @class */ (function (_super) {\n    __extends(SignalOperator, _super);\n    function SignalOperator() {\n        return _super.call(this, Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"]))) || this;\n    }\n    SignalOperator.prototype.connect = function (destination, outputNum, inputNum) {\n        if (outputNum === void 0) { outputNum = 0; }\n        if (inputNum === void 0) { inputNum = 0; }\n        connectSignal(this, destination, outputNum, inputNum);\n        return this;\n    };\n    return SignalOperator;\n}(ToneAudioNode));\nexport { SignalOperator };\n//# sourceMappingURL=SignalOperator.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isFunction } from \"../core/util/TypeCheck\";\nimport { Signal } from \"./Signal\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Wraps the native Web Audio API\n * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n *  @param mapping The function used to define the values.\n *                 The mapping function should take two arguments:\n *                 the first is the value at the current position\n *                 and the second is the array position.\n *                 If the argument is an array, that array will be\n *                 set as the wave shaping function. The input\n *                 signal is an AudioRange [-1, 1] value and the output\n *                 signal can take on any numerical values.\n *\n *  @param bufferLen The length of the WaveShaperNode buffer.\n *  @example\n * var timesTwo = new WaveShaper(function(val){\n * \treturn val * 2;\n * }, 2048);\n *  @example\n * //a waveshaper can also be constructed with an array of values\n * var invert = new WaveShaper([1, -1]);\n */\nvar WaveShaper = /** @class */ (function (_super) {\n    __extends(WaveShaper, _super);\n    function WaveShaper() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]))) || this;\n        _this.name = \"WaveShaper\";\n        /**\n         *  the waveshaper node\n         */\n        _this._shaper = _this.context.createWaveShaper();\n        /**\n         * The input to the waveshaper node.\n         */\n        _this.input = _this._shaper;\n        /**\n         * The output from the waveshaper node\n         */\n        _this.output = _this._shaper;\n        var options = optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]);\n        if (isArray(options.mapping) || options.mapping instanceof Float32Array) {\n            _this.curve = Float32Array.from(options.mapping);\n        }\n        else if (isFunction(options.mapping)) {\n            _this.setMap(options.mapping, options.length);\n        }\n        return _this;\n    }\n    WaveShaper.getDefaults = function () {\n        return Object.assign(Signal.getDefaults(), {\n            length: 1024,\n        });\n    };\n    /**\n     *  Uses a mapping function to set the value of the curve.\n     *  @param mapping The function used to define the values.\n     *                 The mapping function take two arguments:\n     *                 the first is the value at the current position\n     *                 which goes from -1 to 1 over the number of elements\n     *                 in the curve array. The second argument is the array position.\n     * @example\n     * //map the input signal from [-1, 1] to [0, 10]\n     * shaper.setMap(function(val, index){\n     * \treturn (val + 1) * 5;\n     * })\n     */\n    WaveShaper.prototype.setMap = function (mapping, length) {\n        if (length === void 0) { length = 1024; }\n        var array = new Float32Array(length);\n        for (var i = 0, len = length; i < len; i++) {\n            var normalized = (i / (len - 1)) * 2 - 1;\n            array[i] = mapping(normalized, i);\n        }\n        this.curve = array;\n        return this;\n    };\n    Object.defineProperty(WaveShaper.prototype, \"curve\", {\n        /**\n         * The array to set as the waveshaper curve. For linear curves\n         * array length does not make much difference, but for complex curves\n         * longer arrays will provide smoother interpolation.\n         */\n        get: function () {\n            return this._shaper.curve;\n        },\n        set: function (mapping) {\n            this._shaper.curve = mapping;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WaveShaper.prototype, \"oversample\", {\n        /**\n         * Specifies what type of oversampling (if any) should be used when\n         * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n         */\n        get: function () {\n            return this._shaper.oversample;\n        },\n        set: function (oversampling) {\n            var isOverSampleType = [\"none\", \"2x\", \"4x\"].some(function (str) { return str.includes(oversampling); });\n            this.assert(isOverSampleType, \"oversampling must be either 'none', '2x', or '4x'\");\n            this._shaper.oversample = oversampling;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Clean up.\n     */\n    WaveShaper.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._shaper.disconnect();\n        return this;\n    };\n    return WaveShaper;\n}(SignalOperator));\nexport { WaveShaper };\n//# sourceMappingURL=WaveShaper.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].\n * See {@link GainToAudio}.\n *\n * @example\n * var a2g = new AudioToGain();\n */\nvar AudioToGain = /** @class */ (function (_super) {\n    __extends(AudioToGain, _super);\n    function AudioToGain() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"AudioToGain\";\n        /**\n         * The node which converts the audio ranges\n         */\n        _this._norm = new WaveShaper({\n            context: _this.context,\n            mapping: function (x) { return (x + 1) / 2; },\n        });\n        /**\n         * The AudioRange input [-1, 1]\n         */\n        _this.input = _this._norm;\n        /**\n         * The GainRange output [0, 1]\n         */\n        _this.output = _this._norm;\n        return _this;\n    }\n    /**\n     *  clean up\n     */\n    AudioToGain.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._norm.dispose();\n        return this;\n    };\n    return AudioToGain;\n}(SignalOperator));\nexport { AudioToGain };\n//# sourceMappingURL=AudioToGain.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @param {number=} value Constant value to multiple\n * @example\n * const mult = new Multiply();\n * const sigA = new Tone.Signal(3);\n * const sigB = new Tone.Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * //output of mult is 12.\n *  @example\n * const mult = new Multiply(10);\n * const sig = new Tone.Signal(2).connect(mult);\n * //the output of mult is 20.\n */\nvar Multiply = /** @class */ (function (_super) {\n    __extends(Multiply, _super);\n    function Multiply() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]))) || this;\n        _this.name = \"Multiply\";\n        /**\n         * Indicates if the value should be overridden on connection\n         */\n        _this.override = false;\n        /**\n         * the input gain node\n         */\n        _this._mult = new Gain({ context: _this.context });\n        /**\n         * The multiplcant input.\n         */\n        _this.input = _this._mult;\n        /**\n         * The product of the input and {@link factor}\n         */\n        _this.output = _this._mult;\n        var options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n        _this.factor = _this._param = _this._mult.gain;\n        _this.factor.setValueAtTime(options.value, 0);\n        return _this;\n    }\n    Multiply.getDefaults = function () {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    };\n    /**\n     *  clean up\n     */\n    Multiply.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._mult.dispose();\n        return this;\n    };\n    return Multiply;\n}(Signal));\nexport { Multiply };\n//# sourceMappingURL=Multiply.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\n/**\n * An amplitude modulated oscillator node. It is implemented with\n * two oscillators, one which modulators the other's amplitude\n * through a gain node.\n * ```\n *    +-------------+       +----------+\n *    | Carrier Osc +>------> GainNode |\n *    +-------------+       |          +--->Output\n *                      +---> gain     |\n * +---------------+    |   +----------+\n * | Modulator Osc +>---+\n * +---------------+\n * ```\n *\n * @param frequency The starting frequency of the oscillator.\n * @param type The type of the carrier oscillator.\n * @param modulationType The type of the modulator oscillator.\n * @example\n * //a sine oscillator frequency-modulated by a square wave\n * var fmOsc = new AMOscillator(\"Ab3\", \"sine\", \"square\").toDestination().start();\n */\nvar AMOscillator = /** @class */ (function (_super) {\n    __extends(AMOscillator, _super);\n    function AMOscillator() {\n        var _this = _super.call(this, optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"])) || this;\n        _this.name = \"AMOscillator\";\n        /**\n         *  The carrier oscillator\n         */\n        _this._carrier = new Oscillator({ context: _this.context });\n        /**\n         *  The oscillator's frequency\n         */\n        _this.frequency = _this._carrier.frequency;\n        /**\n         *  The detune control signal.\n         */\n        _this.detune = _this._carrier.detune;\n        /**\n         *  The modulating oscillator\n         */\n        _this._modulator = new Oscillator({ context: _this.context });\n        /**\n         *  convert the -1,1 output to 0,1\n         */\n        _this._modulationScale = new AudioToGain({ context: _this.context });\n        /**\n         *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n         *  A harmonicity of 1 gives both oscillators the same frequency.\n         *  Harmonicity = 2 means a change of an octave.\n         *  @example\n         * //pitch the modulator an octave below carrier\n         * synth.harmonicity.value = 0.5;\n         */\n        _this.harmonicity = new Multiply({\n            context: _this.context,\n            units: \"positive\",\n        });\n        /**\n         *  the node where the modulation happens\n         */\n        _this._modulationNode = new Gain({\n            context: _this.context,\n        });\n        var options = optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n        _this._carrier.type = options.type;\n        _this._modulator.type = options.modulationType;\n        _this.frequency.setValueAtTime(options.frequency, 0);\n        _this.detune.setValueAtTime(options.detune, 0);\n        _this.harmonicity.setValueAtTime(options.harmonicity, 0);\n        // connections\n        _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n        _this._modulator.chain(_this._modulationScale, _this._modulationNode.gain);\n        _this._carrier.chain(_this._modulationNode, _this.output);\n        _this.phase = options.phase;\n        readOnly(_this, [\"frequency\", \"detune\", \"harmonicity\"]);\n        return _this;\n    }\n    AMOscillator.getDefaults = function () {\n        return Object.assign(Oscillator.getDefaults(), {\n            harmonicity: 1,\n            modulationType: \"square\",\n        });\n    };\n    /**\n     *  start the oscillator\n     */\n    AMOscillator.prototype._start = function (time) {\n        this._modulator.start(time);\n        this._carrier.start(time);\n    };\n    /**\n     *  stop the oscillator\n     */\n    AMOscillator.prototype._stop = function (time) {\n        this._modulator.stop(time);\n        this._carrier.stop(time);\n    };\n    /**\n     *  restart the oscillator\n     */\n    AMOscillator.prototype.restart = function (time) {\n        this._modulator.restart(time);\n        this._carrier.restart(time);\n        return this;\n    };\n    Object.defineProperty(AMOscillator.prototype, \"type\", {\n        /**\n         * The type of the carrier oscillator\n         */\n        get: function () {\n            return this._carrier.type;\n        },\n        set: function (type) {\n            this._carrier.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AMOscillator.prototype, \"baseType\", {\n        /**\n         * The oscillator type without the partialsCount appended to the end\n         * @example\n         * osc.type = 'sine2'\n         * osc.baseType //'sine'\n         * osc.partialCount = 2\n         */\n        get: function () {\n            return this._carrier.baseType;\n        },\n        set: function (baseType) {\n            this._carrier.baseType = baseType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AMOscillator.prototype, \"partialCount\", {\n        /**\n         * 'partialCount' offers an alternative way to set the number of used partials.\n         * When partialCount is 0, the maximum number of partials are used when representing\n         * the waveform using the periodicWave. When 'partials' is set, this value is\n         * not settable, but equals the length of the partials array.\n         */\n        get: function () {\n            return this._carrier.partialCount;\n        },\n        set: function (partialCount) {\n            this._carrier.partialCount = partialCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AMOscillator.prototype, \"modulationType\", {\n        /**\n         * The type of the modulator oscillator\n         */\n        get: function () {\n            return this._modulator.type;\n        },\n        set: function (type) {\n            this._modulator.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AMOscillator.prototype, \"phase\", {\n        /**\n         * The phase of the oscillator in degrees.\n         */\n        get: function () {\n            return this._carrier.phase;\n        },\n        set: function (phase) {\n            this._carrier.phase = phase;\n            this._modulator.phase = phase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AMOscillator.prototype, \"partials\", {\n        /**\n         * The partials of the carrier waveform. A partial represents\n         * the amplitude at a harmonic. The first harmonic is the\n         * fundamental frequency, the second is the octave and so on\n         * following the harmonic series.\n         * Setting this value will automatically set the type to \"custom\".\n         * The value is an empty array when the type is not \"custom\".\n         * @example\n         * osc.partials = [1, 0.2, 0.01];\n         */\n        get: function () {\n            return this._carrier.partials;\n        },\n        set: function (partials) {\n            this._carrier.partials = partials;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Clean up.\n     */\n    AMOscillator.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.frequency.dispose();\n        this.detune.dispose();\n        this.harmonicity.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this._modulationNode.dispose();\n        this._modulationScale.dispose();\n        return this;\n    };\n    return AMOscillator;\n}(Source));\nexport { AMOscillator };\n//# sourceMappingURL=AMOscillator.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\n/**\n * FMOscillator implements a frequency modulation synthesis\n * ```\n *                                              +-------------+\n * +---------------+        +-------------+     | Carrier Osc |\n * | Modulator Osc +>-------> GainNode    |     |             +--->Output\n * +---------------+        |             +>----> frequency   |\n *                       +--> gain        |     +-------------+\n *                       |  +-------------+\n * +-----------------+   |\n * | modulationIndex +>--+\n * +-----------------+\n * ```\n *\n * @param frequency The starting frequency of the oscillator.\n * @param type The type of the carrier oscillator.\n * @param modulationType The type of the modulator oscillator.\n * @example\n * //a sine oscillator frequency-modulated by a square wave\n * var fmOsc = new FMOscillator(\"Ab3\", \"sine\", \"square\").toDestination().start();\n */\nvar FMOscillator = /** @class */ (function (_super) {\n    __extends(FMOscillator, _super);\n    function FMOscillator() {\n        var _this = _super.call(this, optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"])) || this;\n        _this.name = \"FMOscillator\";\n        /**\n         *  The carrier oscillator\n         */\n        _this._carrier = new Oscillator({\n            context: _this.context,\n            frequency: 0,\n        });\n        /**\n         *  The oscillator's frequency\n         */\n        _this.frequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n        });\n        /**\n         *  The detune control signal.\n         */\n        _this.detune = _this._carrier.detune;\n        /**\n         *  The modulating oscillator\n         */\n        _this._modulator = new Oscillator({ context: _this.context });\n        /**\n         *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n         *  A harmonicity of 1 gives both oscillators the same frequency.\n         *  Harmonicity = 2 means a change of an octave.\n         *  @example\n         * //pitch the modulator an octave below carrier\n         * synth.harmonicity.value = 0.5;\n         */\n        _this.harmonicity = new Multiply({\n            context: _this.context,\n            units: \"positive\",\n        });\n        /**\n         *  The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n         *  ratio of the frequency of the modulating signal (mf) to the amplitude of the\n         *  modulating signal (ma) -- as in ma/mf.\n         */\n        _this.modulationIndex = new Multiply({\n            context: _this.context,\n            units: \"positive\",\n        });\n        /**\n         *  the node where the modulation happens\n         */\n        _this._modulationNode = new Gain({\n            context: _this.context,\n            gain: 0,\n        });\n        var options = optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n        _this._carrier.type = options.type;\n        _this._modulator.type = options.modulationType;\n        _this.frequency.setValueAtTime(options.frequency, 0);\n        _this.detune.setValueAtTime(options.detune, 0);\n        _this.harmonicity.setValueAtTime(options.harmonicity, 0);\n        _this.modulationIndex.setValueAtTime(options.modulationIndex, 0);\n        // connections\n        _this.frequency.connect(_this._carrier.frequency);\n        _this.frequency.chain(_this.harmonicity, _this._modulator.frequency);\n        _this.frequency.chain(_this.modulationIndex, _this._modulationNode);\n        _this._modulator.connect(_this._modulationNode.gain);\n        _this._modulationNode.connect(_this._carrier.frequency);\n        _this._carrier.connect(_this.output);\n        _this.detune.connect(_this._modulator.detune);\n        _this.phase = options.phase;\n        readOnly(_this, [\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n        return _this;\n    }\n    FMOscillator.getDefaults = function () {\n        return Object.assign(Oscillator.getDefaults(), {\n            harmonicity: 1,\n            modulationIndex: 2,\n            modulationType: \"square\",\n        });\n    };\n    /**\n     *  start the oscillator\n     */\n    FMOscillator.prototype._start = function (time) {\n        this._modulator.start(time);\n        this._carrier.start(time);\n    };\n    /**\n     *  stop the oscillator\n     */\n    FMOscillator.prototype._stop = function (time) {\n        this._modulator.stop(time);\n        this._carrier.stop(time);\n    };\n    /**\n     *  stop and restart the oscillator\n     */\n    FMOscillator.prototype.restart = function (time) {\n        this._modulator.restart(time);\n        this._carrier.restart(time);\n        return this;\n    };\n    Object.defineProperty(FMOscillator.prototype, \"type\", {\n        /**\n         * The type of the carrier oscillator\n         */\n        get: function () {\n            return this._carrier.type;\n        },\n        set: function (type) {\n            this._carrier.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FMOscillator.prototype, \"baseType\", {\n        /**\n         * The oscillator type without the partialsCount appended to the end\n         * @example\n         * osc.type = 'sine2'\n         * osc.baseType //'sine'\n         * osc.partialCount = 2\n         */\n        get: function () {\n            return this._carrier.baseType;\n        },\n        set: function (baseType) {\n            this._carrier.baseType = baseType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FMOscillator.prototype, \"partialCount\", {\n        /**\n         * 'partialCount' offers an alternative way to set the number of used partials.\n         * When partialCount is 0, the maximum number of partials are used when representing\n         * the waveform using the periodicWave. When 'partials' is set, this value is\n         * not settable, but equals the length of the partials array.\n         */\n        get: function () {\n            return this._carrier.partialCount;\n        },\n        set: function (partialCount) {\n            this._carrier.partialCount = partialCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FMOscillator.prototype, \"modulationType\", {\n        /**\n         * The type of the modulator oscillator\n         */\n        get: function () {\n            return this._modulator.type;\n        },\n        set: function (type) {\n            this._modulator.type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FMOscillator.prototype, \"phase\", {\n        /**\n         * The phase of the oscillator in degrees.\n         */\n        get: function () {\n            return this._carrier.phase;\n        },\n        set: function (phase) {\n            this._carrier.phase = phase;\n            this._modulator.phase = phase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FMOscillator.prototype, \"partials\", {\n        /**\n         * The partials of the carrier waveform. A partial represents\n         * the amplitude at a harmonic. The first harmonic is the\n         * fundamental frequency, the second is the octave and so on\n         * following the harmonic series.\n         * Setting this value will automatically set the type to \"custom\".\n         * The value is an empty array when the type is not \"custom\".\n         * @example\n         * osc.partials = [1, 0.2, 0.01];\n         */\n        get: function () {\n            return this._carrier.partials;\n        },\n        set: function (partials) {\n            this._carrier.partials = partials;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Clean up.\n     */\n    FMOscillator.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.frequency.dispose();\n        this.harmonicity.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this._modulationNode.dispose();\n        this.modulationIndex.dispose();\n        return this;\n    };\n    return FMOscillator;\n}(Source));\nexport { FMOscillator };\n//# sourceMappingURL=FMOscillator.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { WaveShaper } from \"../../signal/WaveShaper\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\n/**\n * PulseOscillator is an oscillator with control over pulse width,\n * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is\n * a square wave.\n * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n * ```\n *    width = -0.25        width = 0.0          width = 0.25\n *\n *   +-----+            +-------+       +    +-------+     +-+\n *   |     |            |       |       |            |     |\n *   |     |            |       |       |            |     |\n * +-+     +-------+    +       +-------+            +-----+\n *\n *\n *    width = -0.5                              width = 0.5\n *\n *     +---+                                 +-------+   +---+\n *     |   |                                         |   |\n *     |   |                                         |   |\n * +---+   +-------+                                 +---+\n *\n *\n *    width = -0.75                             width = 0.75\n *\n *       +-+                                 +-------+ +-----+\n *       | |                                         | |\n *       | |                                         | |\n * +-----+ +-------+                                 +-+\n * ```\n * @param frequency The frequency of the oscillator\n * @param width The width of the pulse\n * @example\n * var pulse = new PulseOscillator(\"E5\", 0.4).toDestination().start();\n */\nvar PulseOscillator = /** @class */ (function (_super) {\n    __extends(PulseOscillator, _super);\n    function PulseOscillator() {\n        var _this = _super.call(this, optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"])) || this;\n        _this.name = \"PulseOscillator\";\n        /**\n         *  The width of the pulse.\n         */\n        _this.width = new Signal({\n            context: _this.context,\n            units: \"audioRange\",\n        });\n        /**\n         *  gate the width amount\n         */\n        _this._widthGate = new Gain({\n            context: _this.context,\n            gain: 0,\n        });\n        /**\n         *  the sawtooth oscillator\n         */\n        _this._sawtooth = new Oscillator({\n            context: _this.context,\n            type: \"sawtooth\",\n        });\n        /**\n         *  The frequency control.\n         */\n        _this.frequency = _this._sawtooth.frequency;\n        /**\n         *  The detune in cents.\n         */\n        _this.detune = _this._sawtooth.detune;\n        /**\n         *  Threshold the signal to turn it into a square\n         */\n        _this._thresh = new WaveShaper({\n            context: _this.context,\n            mapping: function (val) { return val <= 0 ? -1 : 1; },\n        });\n        var options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]);\n        _this.width.setValueAtTime(options.width, 0);\n        _this._sawtooth.frequency.setValueAtTime(options.frequency, 0);\n        _this._sawtooth.detune.setValueAtTime(options.detune, 0);\n        _this._sawtooth.phase = options.phase;\n        // connections\n        _this._sawtooth.chain(_this._thresh, _this.output);\n        _this.width.chain(_this._widthGate, _this._thresh);\n        readOnly(_this, [\"width\", \"frequency\", \"detune\"]);\n        return _this;\n    }\n    PulseOscillator.getDefaults = function () {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            phase: 0,\n            type: \"pulse\",\n            width: 0.2,\n        });\n    };\n    /**\n     *  start the oscillator\n     */\n    PulseOscillator.prototype._start = function (time) {\n        time = this.toSeconds(time);\n        this._sawtooth.start(time);\n        this._widthGate.gain.setValueAtTime(1, time);\n    };\n    /**\n     *  stop the oscillator\n     */\n    PulseOscillator.prototype._stop = function (time) {\n        time = this.toSeconds(time);\n        this._sawtooth.stop(time);\n        // the width is still connected to the output.\n        // that needs to be stopped also\n        this._widthGate.gain.cancelScheduledValues(time);\n        this._widthGate.gain.setValueAtTime(0, time);\n    };\n    /**\n     *  Restart the oscillator\n     */\n    PulseOscillator.prototype.restart = function (time) {\n        var computedTime = this.toSeconds(time);\n        this._sawtooth.restart(computedTime);\n        this._widthGate.gain.cancelScheduledValues(computedTime);\n        this._widthGate.gain.setValueAtTime(1, computedTime);\n        return this;\n    };\n    Object.defineProperty(PulseOscillator.prototype, \"phase\", {\n        /**\n         * The phase of the oscillator in degrees.\n         */\n        get: function () {\n            return this._sawtooth.phase;\n        },\n        set: function (phase) {\n            this._sawtooth.phase = phase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PulseOscillator.prototype, \"type\", {\n        /**\n         * The type of the oscillator. Always returns \"pulse\".\n         */\n        get: function () {\n            return \"pulse\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PulseOscillator.prototype, \"baseType\", {\n        /**\n         * The baseType of the oscillator. Always returns \"pulse\".\n         */\n        get: function () {\n            return \"pulse\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PulseOscillator.prototype, \"partials\", {\n        /**\n         * The partials of the waveform. Cannot set partials for this waveform type\n         */\n        get: function () {\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PulseOscillator.prototype, \"partialCount\", {\n        /**\n         * No partials for this waveform type.\n         */\n        get: function () {\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Clean up method.\n     */\n    PulseOscillator.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._sawtooth.dispose();\n        this.width.dispose();\n        this._widthGate.dispose();\n        this._thresh.dispose();\n        return this;\n    };\n    return PulseOscillator;\n}(Source));\nexport { PulseOscillator };\n//# sourceMappingURL=PulseOscillator.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\n/**\n *  FatOscillator is an array of oscillators with detune spread between the oscillators\n *  @param frequency The oscillator's frequency.\n *  @param type The type of the oscillator.\n *  @param spread The detune spread between the oscillators.\n *  @example\n * var fatOsc = new FatOscillator(\"Ab3\", \"sine\", 40).toDestination().start();\n */\nvar FatOscillator = /** @class */ (function (_super) {\n    __extends(FatOscillator, _super);\n    function FatOscillator() {\n        var _this = _super.call(this, optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"])) || this;\n        _this.name = \"FatOscillator\";\n        /**\n         *  The oscillator's frequency\n         */\n        _this.frequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n        });\n        /**\n         *  The detune control signal.\n         */\n        _this.detune = new Signal({\n            context: _this.context,\n            units: \"cents\",\n        });\n        /**\n         *  The array of oscillators\n         */\n        _this._oscillators = [];\n        var options = optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]);\n        _this.frequency.setValueAtTime(options.frequency, 0);\n        _this.detune.setValueAtTime(options.detune, 0);\n        _this._spread = options.spread;\n        _this._type = options.type;\n        _this._phase = options.phase;\n        _this._partials = options.partials;\n        _this._partialCount = options.partialCount;\n        // set the count initially\n        _this.count = options.count;\n        readOnly(_this, [\"frequency\", \"detune\"]);\n        return _this;\n    }\n    FatOscillator.getDefaults = function () {\n        return Object.assign(Oscillator.getDefaults(), {\n            count: 3,\n            spread: 20,\n            type: \"sawtooth\",\n        });\n    };\n    /**\n     *  start the oscillator\n     */\n    FatOscillator.prototype._start = function (time) {\n        time = this.toSeconds(time);\n        this._forEach(function (osc) { return osc.start(time); });\n    };\n    /**\n     *  stop the oscillator\n     */\n    FatOscillator.prototype._stop = function (time) {\n        time = this.toSeconds(time);\n        this._forEach(function (osc) { return osc.stop(time); });\n    };\n    /**\n     *  restart the oscillator\n     */\n    FatOscillator.prototype.restart = function (time) {\n        time = this.toSeconds(time);\n        this._forEach(function (osc) { return osc.restart(time); });\n        return this;\n    };\n    /**\n     *  Iterate over all of the oscillators\n     */\n    FatOscillator.prototype._forEach = function (iterator) {\n        for (var i = 0; i < this._oscillators.length; i++) {\n            iterator(this._oscillators[i], i);\n        }\n    };\n    Object.defineProperty(FatOscillator.prototype, \"type\", {\n        /**\n         * The type of the oscillator\n         */\n        get: function () {\n            return this._type;\n        },\n        set: function (type) {\n            this._type = type;\n            this._forEach(function (osc) { return osc.type = type; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FatOscillator.prototype, \"spread\", {\n        /**\n         * The detune spread between the oscillators. If \"count\" is\n         * set to 3 oscillators and the \"spread\" is set to 40,\n         * the three oscillators would be detuned like this: [-20, 0, 20]\n         * for a total detune spread of 40 cents.\n         */\n        get: function () {\n            return this._spread;\n        },\n        set: function (spread) {\n            this._spread = spread;\n            if (this._oscillators.length > 1) {\n                var start_1 = -spread / 2;\n                var step_1 = spread / (this._oscillators.length - 1);\n                this._forEach(function (osc, i) { return osc.detune.value = start_1 + step_1 * i; });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FatOscillator.prototype, \"count\", {\n        /**\n         * The number of detuned oscillators. Should be an integer greater than 1.\n         */\n        get: function () {\n            return this._oscillators.length;\n        },\n        set: function (count) {\n            count = Math.max(count, 1);\n            if (this._oscillators.length !== count) {\n                // dispose the previous oscillators\n                this._forEach(function (osc) { return osc.dispose(); });\n                this._oscillators = [];\n                for (var i = 0; i < count; i++) {\n                    var osc = new Oscillator({\n                        context: this.context,\n                    });\n                    if (this.type === \"custom\") {\n                        osc.partials = this._partials;\n                    }\n                    else {\n                        osc.type = this._type;\n                    }\n                    osc.partialCount = this._partialCount;\n                    osc.phase = this._phase + (i / count) * 360;\n                    osc.volume.value = -6 - count * 1.1;\n                    this.frequency.connect(osc.frequency);\n                    this.detune.connect(osc.detune);\n                    osc.connect(this.output);\n                    this._oscillators[i] = osc;\n                }\n                // set the spread\n                this.spread = this._spread;\n                if (this.state === \"started\") {\n                    this._forEach(function (osc) { return osc.start(); });\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FatOscillator.prototype, \"phase\", {\n        /**\n         * The phase of the oscillator in degrees.\n         */\n        get: function () {\n            return this._phase;\n        },\n        set: function (phase) {\n            this._phase = phase;\n            this._forEach(function (osc) { return osc.phase = phase; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FatOscillator.prototype, \"baseType\", {\n        /**\n         * The oscillator type without the partialsCount appended to the end\n         * @example\n         * osc.type = 'sine2'\n         * osc.baseType //'sine'\n         * osc.partialCount = 2\n         */\n        get: function () {\n            return this._oscillators[0].baseType;\n        },\n        set: function (baseType) {\n            this._forEach(function (osc) { return osc.baseType = baseType; });\n            this._type = this._oscillators[0].type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FatOscillator.prototype, \"partials\", {\n        /**\n         * The partials of the carrier waveform. A partial represents\n         * the amplitude at a harmonic. The first harmonic is the\n         * fundamental frequency, the second is the octave and so on\n         * following the harmonic series.\n         * Setting this value will automatically set the type to \"custom\".\n         * The value is an empty array when the type is not \"custom\".\n         * @memberOf FatOscillator#\n         * @type {Array}\n         * @name partials\n         * @example\n         * osc.partials = [1, 0.2, 0.01];\n         */\n        get: function () {\n            return this._oscillators[0].partials;\n        },\n        set: function (partials) {\n            this._partials = partials;\n            if (partials.length) {\n                this._type = \"custom\";\n                this._forEach(function (osc) { return osc.partials = partials; });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FatOscillator.prototype, \"partialCount\", {\n        /**\n         * 'partialCount' offers an alternative way to set the number of used partials.\n         * When partialCount is 0, the maximum number of partials are used when representing\n         * the waveform using the periodicWave. When 'partials' is set, this value is\n         * not settable, but equals the length of the partials array.\n         * @memberOf FatOscillator#\n         * @type {Number}\n         * @name partialCount\n         */\n        get: function () {\n            return this._oscillators[0].partialCount;\n        },\n        set: function (partialCount) {\n            this._partialCount = partialCount;\n            this._forEach(function (osc) { return osc.partialCount = partialCount; });\n            this._type = this._oscillators[0].type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Clean up.\n     */\n    FatOscillator.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.frequency.dispose();\n        this.detune.dispose();\n        this._forEach(function (osc) { return osc.dispose(); });\n        return this;\n    };\n    return FatOscillator;\n}(Source));\nexport { FatOscillator };\n//# sourceMappingURL=FatOscillator.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { PulseOscillator } from \"./PulseOscillator\";\n/**\n * PWMOscillator modulates the width of a Tone.PulseOscillator\n * at the modulationFrequency. This has the effect of continuously\n * changing the timbre of the oscillator by altering the harmonics\n * generated.\n *\n * @param {Frequency} frequency The starting frequency of the oscillator.\n * @param {Frequency} modulationFrequency The modulation frequency of the width of the pulse.\n * @example\n *  var pwm = new PWMOscillator(\"Ab3\", 0.3).toDestination().start();\n */\nvar PWMOscillator = /** @class */ (function (_super) {\n    __extends(PWMOscillator, _super);\n    function PWMOscillator() {\n        var _this = _super.call(this, optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"])) || this;\n        _this.name = \"PWMOscillator\";\n        _this.sourceType = \"pwm\";\n        /**\n         *  the pulse oscillator\n         */\n        _this._pulse = new PulseOscillator({ context: _this.context });\n        /**\n         *  the modulator\n         *  @type {Tone.Oscillator}\n         *  @private\n         */\n        _this._modulator = new Oscillator({ context: _this.context });\n        /**\n         *  Scale the oscillator so it doesn't go silent\n         *  at the extreme values.\n         */\n        _this._scale = new Multiply({\n            context: _this.context,\n            value: 2,\n        });\n        /**\n         *  The frequency control.\n         */\n        _this.frequency = _this._modulator.frequency;\n        /**\n         *  The detune of the oscillator.\n         */\n        _this.detune = _this._modulator.detune;\n        /**\n         *  The modulation rate of the oscillator.\n         */\n        _this.modulationFrequency = _this._pulse.frequency;\n        var options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]);\n        // change the pulse oscillator type\n        // @ts-ignore\n        _this._pulse._sawtooth.type = \"sine\";\n        _this._pulse.frequency.setValueAtTime(options.modulationFrequency, 0);\n        _this._modulator.frequency.setValueAtTime(options.frequency, 0);\n        _this._modulator.detune.setValueAtTime(options.detune, 0);\n        _this._modulator.phase = options.phase;\n        // connections\n        _this._modulator.chain(_this._scale, _this._pulse.width);\n        _this._pulse.connect(_this.output);\n        readOnly(_this, [\"modulationFrequency\", \"frequency\", \"detune\"]);\n        return _this;\n    }\n    PWMOscillator.getDefaults = function () {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            modulationFrequency: 0.4,\n            phase: 0,\n            type: \"pwm\",\n        });\n    };\n    /**\n     *  start the oscillator\n     */\n    PWMOscillator.prototype._start = function (time) {\n        time = this.toSeconds(time);\n        this._modulator.start(time);\n        this._pulse.start(time);\n    };\n    /**\n     *  stop the oscillator\n     */\n    PWMOscillator.prototype._stop = function (time) {\n        time = this.toSeconds(time);\n        this._modulator.stop(time);\n        this._pulse.stop(time);\n    };\n    /**\n     *  restart the oscillator\n     */\n    PWMOscillator.prototype.restart = function (time) {\n        this._modulator.restart(time);\n        this._pulse.restart(time);\n        return this;\n    };\n    Object.defineProperty(PWMOscillator.prototype, \"type\", {\n        /**\n         * The type of the oscillator. Always returns \"pwm\".\n         */\n        get: function () {\n            return \"pwm\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PWMOscillator.prototype, \"baseType\", {\n        /**\n         * The baseType of the oscillator. Always returns \"pwm\".\n         */\n        get: function () {\n            return \"pwm\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PWMOscillator.prototype, \"partials\", {\n        /**\n         * The partials of the waveform. Cannot set partials for this waveform type\n         */\n        get: function () {\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PWMOscillator.prototype, \"partialCount\", {\n        /**\n         * No partials for this waveform type.\n         */\n        get: function () {\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PWMOscillator.prototype, \"phase\", {\n        /**\n         * The phase of the oscillator in degrees.\n         */\n        get: function () {\n            return this._modulator.phase;\n        },\n        set: function (phase) {\n            this._modulator.phase = phase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Clean up.\n     */\n    PWMOscillator.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._pulse.dispose();\n        this._scale.dispose();\n        this._modulator.dispose();\n        return this;\n    };\n    return PWMOscillator;\n}(Source));\nexport { PWMOscillator };\n//# sourceMappingURL=PWMOscillator.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isNumber, isString } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { AMOscillator } from \"./AMOscillator\";\nimport { FatOscillator } from \"./FatOscillator\";\nimport { FMOscillator } from \"./FMOscillator\";\nimport { Oscillator } from \"./Oscillator\";\nimport { PulseOscillator } from \"./PulseOscillator\";\nimport { PWMOscillator } from \"./PWMOscillator\";\n// tslint:disable-next-line: variable-name\nvar OmniOscillatorSourceMap = {\n    am: AMOscillator,\n    fat: FatOscillator,\n    fm: FMOscillator,\n    oscillator: Oscillator,\n    pulse: PulseOscillator,\n    pwm: PWMOscillator,\n};\n/**\n * OmniOscillator aggregates Tone.Oscillator, Tone.PulseOscillator,\n * Tone.PWMOscillator, Tone.FMOscillator, Tone.AMOscillator, and Tone.FatOscillator\n * into one class. The oscillator class can be changed by setting the `type`.\n * `omniOsc.type = \"pwm\"` will set it to the Tone.PWMOscillator. Prefixing\n * any of the basic types (\"sine\", \"square4\", etc.) with \"fm\", \"am\", or \"fat\"\n * will use the FMOscillator, AMOscillator or FatOscillator respectively.\n * For example: `omniOsc.type = \"fatsawtooth\"` will create set the oscillator\n * to a FatOscillator of type \"sawtooth\".\n *\n * @param frequency The initial frequency of the oscillator.\n * @param type The type of the oscillator.\n * @example\n * var omniOsc = new OmniOscillator(\"C#4\", \"pwm\");\n */\nvar OmniOscillator = /** @class */ (function (_super) {\n    __extends(OmniOscillator, _super);\n    function OmniOscillator() {\n        var _this = _super.call(this, optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"])) || this;\n        _this.name = \"OmniOscillator\";\n        /**\n         *  The frequency control.\n         */\n        _this.frequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n        });\n        /**\n         *  The detune control.\n         */\n        _this.detune = new Signal({\n            context: _this.context,\n            units: \"cents\",\n        });\n        var options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        _this.frequency.setValueAtTime(options.frequency, 0);\n        _this.detune.setValueAtTime(options.detune, 0);\n        readOnly(_this, [\"frequency\", \"detune\"]);\n        // set the options\n        _this.set(options);\n        return _this;\n    }\n    OmniOscillator.getDefaults = function () {\n        return Object.assign(Oscillator.getDefaults(), FMOscillator.getDefaults(), AMOscillator.getDefaults(), FatOscillator.getDefaults(), PulseOscillator.getDefaults(), PWMOscillator.getDefaults());\n        // return Oscillator.getDefaults() as OmniOscillatorConstructorOptions;\n    };\n    /**\n     *  start the oscillator\n     */\n    OmniOscillator.prototype._start = function (time) {\n        this._oscillator.start(time);\n    };\n    /**\n     *  start the oscillator\n     */\n    OmniOscillator.prototype._stop = function (time) {\n        this._oscillator.stop(time);\n    };\n    OmniOscillator.prototype.restart = function (time) {\n        this._oscillator.restart(time);\n        return this;\n    };\n    Object.defineProperty(OmniOscillator.prototype, \"type\", {\n        /**\n         * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n         * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n         * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n         * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n         * when it's not.\n         * @example\n         * omniOsc.type = \"pwm\";\n         * //modulationFrequency is parameter which is available\n         * //only when the type is \"pwm\".\n         * omniOsc.modulationFrequency.value = 0.5;\n         * @example\n         * //an square wave frequency modulated by a sawtooth\n         * omniOsc.type = \"fmsquare\";\n         * omniOsc.modulationType = \"sawtooth\";\n         */\n        get: function () {\n            var _this = this;\n            var prefix = \"\";\n            if ([\"am\", \"fm\", \"fat\"].some(function (p) { return _this._sourceType === p; })) {\n                prefix = this._sourceType;\n            }\n            return prefix + this._oscillator.type;\n        },\n        set: function (type) {\n            if (type.substr(0, 2) === \"fm\") {\n                this._createNewOscillator(\"fm\");\n                this._oscillator = this._oscillator;\n                this._oscillator.type = type.substr(2);\n            }\n            else if (type.substr(0, 2) === \"am\") {\n                this._createNewOscillator(\"am\");\n                this._oscillator = this._oscillator;\n                this._oscillator.type = type.substr(2);\n            }\n            else if (type.substr(0, 3) === \"fat\") {\n                this._createNewOscillator(\"fat\");\n                this._oscillator = this._oscillator;\n                this._oscillator.type = type.substr(3);\n            }\n            else if (type === \"pwm\") {\n                this._createNewOscillator(\"pwm\");\n                this._oscillator = this._oscillator;\n            }\n            else if (type === \"pulse\") {\n                this._createNewOscillator(\"pulse\");\n            }\n            else {\n                this._createNewOscillator(\"oscillator\");\n                this._oscillator = this._oscillator;\n                this._oscillator.type = type;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"partials\", {\n        /**\n         * The partials of the waveform. A partial represents\n         * the amplitude at a harmonic. The first harmonic is the\n         * fundamental frequency, the second is the octave and so on\n         * following the harmonic series.\n         * Setting this value will automatically set the type to \"custom\".\n         * The value is an empty array when the type is not \"custom\".\n         * This is not available on \"pwm\" and \"pulse\" oscillator types.\n         * @example\n         * osc.partials = [1, 0.2, 0.01];\n         */\n        get: function () {\n            return this._oscillator.partials;\n        },\n        set: function (partials) {\n            if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n                this._oscillator.partials = partials;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"partialCount\", {\n        /**\n         * The partial count of the oscillator. This is not available on \"pwm\" and \"pulse\" oscillator types.\n         * @example\n         * //set the maximum number of partials\n         * osc.partialCount = 0;\n         */\n        get: function () {\n            return this._oscillator.partialCount;\n        },\n        set: function (partialCount) {\n            if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n                this._oscillator.partialCount = partialCount;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set the parameters at once. Either pass in an\n     * object mapping parameters to values, or to set a\n     * single parameter, by passing in a string and value.\n     * The last argument is an optional ramp time which\n     * will ramp any signal values to their destination value\n     * over the duration of the rampTime.\n     * @param  params\n     * @example\n     * //set values using an object\n     * filter.set({\n     * \t\"frequency\" : 300,\n     * \t\"type\" : \"highpass\"\n     * });\n     */\n    OmniOscillator.prototype.set = function (props) {\n        // make sure the type is set first\n        if (Reflect.has(props, \"type\") && props.type) {\n            this.type = props.type;\n            // delete props.type;\n        }\n        // then set the rest\n        _super.prototype.set.call(this, props);\n        return this;\n    };\n    OmniOscillator.prototype.get = function () {\n        var options = this._oscillator.get();\n        // @ts-ignore\n        options.type = this.type;\n        return options;\n    };\n    /**\n     *  connect the oscillator to the frequency and detune signals\n     */\n    OmniOscillator.prototype._createNewOscillator = function (oscType) {\n        if (oscType !== this._sourceType) {\n            this._sourceType = oscType;\n            var oscConstructor = OmniOscillatorSourceMap[oscType];\n            // short delay to avoid clicks on the change\n            var now = this.now();\n            if (this._oscillator) {\n                var oldOsc_1 = this._oscillator;\n                oldOsc_1.stop(now);\n                // dispose the old one\n                this.context.setTimeout(function () { return oldOsc_1.dispose(); }, this.blockTime);\n            }\n            // @ts-ignore\n            this._oscillator = new oscConstructor({\n                context: this.context,\n            });\n            this.frequency.connect(this._oscillator.frequency);\n            this.detune.connect(this._oscillator.detune);\n            this._oscillator.connect(this.output);\n            if (this.state === \"started\") {\n                this._oscillator.start(now);\n            }\n        }\n    };\n    Object.defineProperty(OmniOscillator.prototype, \"phase\", {\n        /**\n         * The phase of the oscillator in degrees.\n         */\n        get: function () {\n            return this._oscillator.phase;\n        },\n        set: function (phase) {\n            this._oscillator.phase = phase;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"sourceType\", {\n        /**\n         * The source type of the oscillator.\n         * @example\n         * var omniOsc = new OmniOscillator(440, \"fmsquare\");\n         * omniOsc.sourceType // 'fm'\n         */\n        get: function () {\n            return this._sourceType;\n        },\n        set: function (sType) {\n            // the basetype defaults to sine\n            var baseType = \"sine\";\n            if (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\") {\n                baseType = this._oscillator.type;\n            }\n            // set the type\n            if (sType === \"fm\") {\n                this.type = \"fm\" + baseType;\n            }\n            else if (sType === \"am\") {\n                this.type = \"am\" + baseType;\n            }\n            else if (sType === \"fat\") {\n                this.type = \"fat\" + baseType;\n            }\n            else if (sType === \"oscillator\") {\n                this.type = baseType;\n            }\n            else if (sType === \"pulse\") {\n                this.type = \"pulse\";\n            }\n            else if (sType === \"pwm\") {\n                this.type = \"pwm\";\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OmniOscillator.prototype._getOscType = function (osc, sourceType) {\n        return osc instanceof OmniOscillatorSourceMap[sourceType];\n    };\n    Object.defineProperty(OmniOscillator.prototype, \"baseType\", {\n        /**\n         * The base type of the oscillator.\n         * @example\n         * var omniOsc = new OmniOscillator(440, \"fmsquare4\");\n         * omniOsc.sourceType // 'fm'\n         * omniOsc.baseType //'square'\n         * omniOsc.partialCount //4\n         */\n        get: function () {\n            return this._oscillator.baseType;\n        },\n        set: function (baseType) {\n            if (!this._getOscType(this._oscillator, \"pulse\") &&\n                !this._getOscType(this._oscillator, \"pwm\") &&\n                baseType !== \"pulse\" && baseType !== \"pwm\") {\n                this._oscillator.baseType = baseType;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"width\", {\n        /**\n         * The width of the oscillator when sourceType === \"pulse\".\n         * @example\n         * var omniOsc = new OmniOscillator(440, \"pulse\");\n         * //can access the width attribute only if type === \"pulse\"\n         * omniOsc.width.value = 0.2;\n         */\n        get: function () {\n            if (this._getOscType(this._oscillator, \"pulse\")) {\n                return this._oscillator.width;\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"count\", {\n        /**\n         * The number of detuned oscillators, when sourceType === \"fat\".\n         */\n        get: function () {\n            if (this._getOscType(this._oscillator, \"fat\")) {\n                return this._oscillator.count;\n            }\n            else {\n                return undefined;\n            }\n        },\n        set: function (count) {\n            if (this._getOscType(this._oscillator, \"fat\") && isNumber(count)) {\n                this._oscillator.count = count;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"spread\", {\n        /**\n         * The detune spread between the oscillators. If \"count\" is\n         * set to 3 oscillators and the \"spread\" is set to 40,\n         * the three oscillators would be detuned like this: [-20, 0, 20]\n         * for a total detune spread of 40 cents. See Tone.FatOscillator\n         * for more info.\n         */\n        get: function () {\n            if (this._getOscType(this._oscillator, \"fat\")) {\n                return this._oscillator.spread;\n            }\n            else {\n                return undefined;\n            }\n        },\n        set: function (spread) {\n            if (this._getOscType(this._oscillator, \"fat\") && isNumber(spread)) {\n                this._oscillator.spread = spread;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"modulationType\", {\n        /**\n         * The type of the modulator oscillator. Only if the oscillator\n         * is set to \"am\" or \"fm\" types. see. Tone.AMOscillator or Tone.FMOscillator\n         * for more info.\n         */\n        get: function () {\n            if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n                return this._oscillator.modulationType;\n            }\n            else {\n                return undefined;\n            }\n        },\n        set: function (mType) {\n            if ((this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) && isString(mType)) {\n                this._oscillator.modulationType = mType;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"modulationIndex\", {\n        /**\n         * The modulation index which is in essence the depth or amount of the modulation. In other terms it is the\n         * ratio of the frequency of the modulating signal (mf) to the amplitude of the\n         * modulating signal (ma) -- as in ma/mf.\n         * See Tone.FMOscillator for more info.\n         */\n        get: function () {\n            if (this._getOscType(this._oscillator, \"fm\")) {\n                return this._oscillator.modulationIndex;\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"harmonicity\", {\n        /**\n         *  Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n         *  A harmonicity of 1 gives both oscillators the same frequency.\n         *  Harmonicity = 2 means a change of an octave. See Tone.AMOscillator or Tone.FMOscillator\n         *  for more info.\n         */\n        get: function () {\n            if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n                return this._oscillator.harmonicity;\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OmniOscillator.prototype, \"modulationFrequency\", {\n        /**\n         * The modulationFrequency Signal of the oscillator\n         * (only if the oscillator type is set to pwm). See\n         * Tone.PWMOscillator for more info.\n         * @example\n         * var omniOsc = new OmniOscillator(440, \"pwm\");\n         * //can access the modulationFrequency attribute only if type === \"pwm\"\n         * omniOsc.modulationFrequency.value = 0.2;\n         */\n        get: function () {\n            if (this._getOscType(this._oscillator, \"pwm\")) {\n                return this._oscillator.modulationFrequency;\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OmniOscillator.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.detune.dispose();\n        this.frequency.dispose();\n        this._oscillator.dispose();\n        return this;\n    };\n    return OmniOscillator;\n}(Source));\nexport { OmniOscillator };\n//# sourceMappingURL=OmniOscillator.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isUndef } from \"../../core/util/TypeCheck\";\nimport { Source } from \"../Source\";\nimport { ToneBufferSource } from \"./BufferSource\";\n/**\n * Player is an audio file player with start, loop, and stop functions.\n *\n * @param url Either the AudioBuffer or the url from which to load the AudioBuffer\n * @param onload The function to invoke when the buffer is loaded.\n *                            Recommended to use Tone.Buffer.on('load') instead.\n * @example\n * var player = new Player(\"./path/to/sample.mp3\").toDestination();\n * //play as soon as the buffer is loaded\n * player.autostart = true;\n */\nvar Player = /** @class */ (function (_super) {\n    __extends(Player, _super);\n    function Player() {\n        var _this = _super.call(this, optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"])) || this;\n        _this.name = \"Player\";\n        /**\n         *  All of the active buffer source nodes\n         */\n        _this._activeSources = new Set();\n        var options = optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]);\n        _this._buffer = new ToneAudioBuffer({\n            onload: _this._onload.bind(_this, options.onload),\n            reverse: options.reverse,\n            url: options.url,\n        });\n        _this.autostart = options.autostart;\n        _this._loop = options.loop;\n        _this._loopStart = options.loopStart;\n        _this._loopEnd = options.loopEnd;\n        _this._playbackRate = options.playbackRate;\n        _this.fadeIn = options.fadeIn;\n        _this.fadeOut = options.fadeOut;\n        return _this;\n    }\n    Player.getDefaults = function () {\n        return Object.assign(Source.getDefaults(), {\n            autostart: false,\n            fadeIn: 0,\n            fadeOut: 0,\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            onload: noOp,\n            playbackRate: 1,\n            reverse: false,\n        });\n    };\n    /**\n     * Load the audio file as an audio buffer.\n     * Decodes the audio asynchronously and invokes\n     * the callback once the audio buffer loads.\n     * Note: this does not need to be called if a url\n     * was passed in to the constructor. Only use this\n     * if you want to manually load a new url.\n     * @param url The url of the buffer to load. Filetype support depends on the browser.\n     */\n    Player.prototype.load = function (url) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._buffer.load(url)];\n                    case 1:\n                        _a.sent();\n                        this._onload();\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     * Internal callback when the buffer is loaded.\n     */\n    Player.prototype._onload = function (callback) {\n        if (callback === void 0) { callback = noOp; }\n        callback();\n        if (this.autostart) {\n            this.start();\n        }\n    };\n    /**\n     * Internal callback when the buffer is done playing.\n     */\n    Player.prototype._onSourceEnd = function (source) {\n        this._activeSources.delete(source);\n        if (this._activeSources.size === 0 && !this._synced) {\n            this._state.setStateAtTime(\"stopped\", this.now());\n        }\n    };\n    /**\n     *  Play the buffer at the given startTime. Optionally add an offset\n     *  and/or duration which will play the buffer from a position\n     *  within the buffer for the given duration.\n     *\n     *  @param  time When the player should start.\n     *  @param  offset The offset from the beginning of the sample\n     *                                 to start at.\n     *  @param  duration How long the sample should play. If no duration is given, it will default to the full length\n     *                   of the sample (minus any offset)\n     */\n    Player.prototype.start = function (time, offset, duration) {\n        _super.prototype.start.call(this, time, offset, duration);\n        return this;\n    };\n    /**\n     *  Internal start method\n     */\n    Player.prototype._start = function (startTime, offset, duration) {\n        // if it's a loop the default offset is the loopstart point\n        if (this._loop) {\n            offset = defaultArg(offset, this._loopStart);\n        }\n        else {\n            // otherwise the default offset is 0\n            offset = defaultArg(offset, 0);\n        }\n        // compute the values in seconds\n        var comptuedOffset = this.toSeconds(offset);\n        // if it's synced, it should factor in the playback rate for computing the offset\n        if (this._synced) {\n            comptuedOffset *= this._playbackRate;\n        }\n        // compute the duration which is either the passed in duration of the buffer.duration - offset\n        var origDuration = duration;\n        duration = defaultArg(duration, Math.max(this._buffer.duration - comptuedOffset, 0));\n        var computedDuration = this.toSeconds(duration);\n        // scale it by the playback rate\n        computedDuration = computedDuration / this._playbackRate;\n        // get the start time\n        startTime = this.toSeconds(startTime);\n        // make the source\n        var source = new ToneBufferSource({\n            buffer: this._buffer,\n            context: this.context,\n            fadeIn: this.fadeIn,\n            fadeOut: this.fadeOut,\n            loop: this._loop,\n            loopEnd: this._loopEnd,\n            loopStart: this._loopStart,\n            onended: this._onSourceEnd.bind(this),\n            playbackRate: this._playbackRate,\n        }).connect(this.output);\n        // set the looping properties\n        if (!this._loop && !this._synced) {\n            // if it's not looping, set the state change at the end of the sample\n            this._state.setStateAtTime(\"stopped\", startTime + computedDuration, {\n                implicitEnd: true,\n            });\n        }\n        // add it to the array of active sources\n        this._activeSources.add(source);\n        // start it\n        if (this._loop && isUndef(origDuration)) {\n            source.start(startTime, comptuedOffset);\n        }\n        else {\n            // subtract the fade out time\n            source.start(startTime, comptuedOffset, computedDuration - this.toSeconds(this.fadeOut));\n        }\n    };\n    /**\n     *  Stop playback.\n     */\n    Player.prototype._stop = function (time) {\n        var computedTime = this.toSeconds(time);\n        this._activeSources.forEach(function (source) { return source.stop(computedTime); });\n    };\n    /**\n     * Stop and then restart the player from the beginning (or offset)\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given,\n     * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n     */\n    Player.prototype.restart = function (time, offset, duration) {\n        this._stop(time);\n        this._start(time, offset, duration);\n        return this;\n    };\n    /**\n     *  Seek to a specific time in the player's buffer. If the\n     *  source is no longer playing at that time, it will stop.\n     *  If you seek to a time that\n     *  @param {Time} offset The time to seek to.\n     *  @param {Time=} time The time for the seek event to occur.\n     *  @return {Player} this\n     *  @example\n     * source.start(0.2);\n     * source.stop(0.4);\n     */\n    Player.prototype.seek = function (offset, when) {\n        var computedTime = this.toSeconds(when);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            var comptuedOffset = this.toSeconds(offset);\n            // if it's currently playing, stop it\n            this._stop(computedTime);\n            // restart it at the given time\n            this._start(computedTime, comptuedOffset);\n        }\n        return this;\n    };\n    /**\n     * Set the loop start and end. Will only loop if loop is set to true.\n     * @param loopStart The loop end time\n     * @param loopEnd The loop end time\n     * @example\n     * //loop 0.1 seconds of the file.\n     * player.setLoopPoints(0.2, 0.3);\n     * player.loop = true;\n     */\n    Player.prototype.setLoopPoints = function (loopStart, loopEnd) {\n        this.loopStart = loopStart;\n        this.loopEnd = loopEnd;\n        return this;\n    };\n    Object.defineProperty(Player.prototype, \"loopStart\", {\n        /**\n         * If loop is true, the loop will start at this position.\n         */\n        get: function () {\n            return this._loopStart;\n        },\n        set: function (loopStart) {\n            this._loopStart = loopStart;\n            // get the current source\n            this._activeSources.forEach(function (source) {\n                source.loopStart = loopStart;\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"loopEnd\", {\n        /**\n         * If loop is true, the loop will end at this position.\n         */\n        get: function () {\n            return this._loopEnd;\n        },\n        set: function (loopEnd) {\n            this._loopEnd = loopEnd;\n            // get the current source\n            this._activeSources.forEach(function (source) {\n                source.loopEnd = loopEnd;\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"buffer\", {\n        /**\n         * The audio buffer belonging to the player.\n         */\n        get: function () {\n            return this._buffer;\n        },\n        set: function (buffer) {\n            this._buffer.set(buffer);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"loop\", {\n        /**\n         * If the buffer should loop once it's over.\n         */\n        get: function () {\n            return this._loop;\n        },\n        set: function (loop) {\n            // if no change, do nothing\n            if (this._loop === loop) {\n                return;\n            }\n            this._loop = loop;\n            // set the loop of all of the sources\n            this._activeSources.forEach(function (source) {\n                source.loop = loop;\n            });\n            if (loop) {\n                // remove the next stopEvent\n                var stopEvent = this._state.getNextState(\"stopped\", this.now());\n                if (stopEvent) {\n                    this._state.cancel(stopEvent.time);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"playbackRate\", {\n        /**\n         * The playback speed. 1 is normal speed. This is not a signal because\n         * Safari and iOS currently don't support playbackRate as a signal.\n         */\n        get: function () {\n            return this._playbackRate;\n        },\n        set: function (rate) {\n            this._playbackRate = rate;\n            var now = this.now();\n            // cancel the stop event since it's at a different time now\n            var stopEvent = this._state.getNextState(\"stopped\", now);\n            if (stopEvent && stopEvent.implicitEnd) {\n                this._state.cancel(stopEvent.time);\n            }\n            // set all the sources\n            this._activeSources.forEach(function (source) {\n                source.playbackRate.setValueAtTime(rate, now);\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"reverse\", {\n        /**\n         * The direction the buffer should play in\n         */\n        get: function () {\n            return this._buffer.reverse;\n        },\n        set: function (rev) {\n            this._buffer.reverse = rev;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Player.prototype, \"loaded\", {\n        /**\n         * If the buffer is loaded\n         */\n        get: function () {\n            return this._buffer.loaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Player.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        // disconnect all of the players\n        this._activeSources.forEach(function (source) { return source.dispose(); });\n        this._activeSources.clear();\n        this._buffer.dispose();\n        return this;\n    };\n    return Player;\n}(Source));\nexport { Player };\n//# sourceMappingURL=Player.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { isArray, isObject, isString } from \"../../core/util/TypeCheck\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\n/**\n *  Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n *  envelope generator. Envelope outputs a signal which\n *  can be connected to an AudioParam or Tone.Signal.\n * ```\n *           /\\\n *          /  \\\n *         /    \\\n *        /      \\\n *       /        \\___________\n *      /                     \\\n *     /                       \\\n *    /                         \\\n *   /                           \\\n * ```\n *\n *  @param attack The amount of time it takes for the envelope to go from\n *                         0 to it's maximum value.\n *  @param decay\tThe period of time after the attack that it takes for the envelope\n *                       \tto fall to the sustain value. Value must be greater than 0.\n *  @param sustain\tThe percent of the maximum value that the envelope rests at until\n *                                \tthe release is triggered.\n *  @param release\tThe amount of time after the release is triggered it takes to reach 0.\n *                         \tValue must be greater than 0.\n *  @example\n * //an amplitude envelope\n * var gainNode = Tone.context.createGain();\n * var env = new Envelope({\n * \t\"attack\" : 0.1,\n * \t\"decay\" : 0.2,\n * \t\"sustain\" : 1,\n * \t\"release\" : 0.8,\n * });\n * env.connect(gainNode.gain);\n */\nvar Envelope = /** @class */ (function (_super) {\n    __extends(Envelope, _super);\n    function Envelope() {\n        var _this = _super.call(this, optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"])) || this;\n        _this.name = \"Envelope\";\n        /**\n         *  the signal which is output.\n         */\n        _this._sig = new Signal({\n            context: _this.context,\n            value: 0,\n        });\n        /**\n         * The output signal of the envelope\n         */\n        _this.output = _this._sig;\n        /**\n         * Envelope has no input\n         */\n        _this.input = undefined;\n        var options = optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n        _this.attack = options.attack;\n        _this.decay = options.decay;\n        _this.sustain = options.sustain;\n        _this.release = options.release;\n        _this.attackCurve = options.attackCurve;\n        _this.releaseCurve = options.releaseCurve;\n        _this.decayCurve = options.decayCurve;\n        return _this;\n    }\n    Envelope.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            attack: 0.01,\n            attackCurve: \"linear\",\n            decay: 0.1,\n            decayCurve: \"exponential\",\n            release: 1,\n            releaseCurve: \"exponential\",\n            sustain: 0.5,\n        });\n    };\n    Object.defineProperty(Envelope.prototype, \"value\", {\n        /**\n         * Read the current value of the envelope. Useful for\n         * syncronizing visual output to the envelope.\n         */\n        get: function () {\n            return this.getValueAtTime(this.now());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Get the curve\n     *  @param  curve\n     *  @param  direction  In/Out\n     *  @return  {String}  The curve name\n     *  @private\n     */\n    Envelope.prototype._getCurve = function (curve, direction) {\n        if (isString(curve)) {\n            return curve;\n        }\n        else {\n            // look up the name in the curves array\n            var curveName = void 0;\n            for (curveName in EnvelopeCurves) {\n                if (EnvelopeCurves[curveName][direction] === curve) {\n                    return curveName;\n                }\n            }\n            // return the custom curve\n            return curve;\n        }\n    };\n    /**\n     *  Assign a the curve to the given name using the direction\n     *  @param  name\n     *  @param  direction In/Out\n     *  @param  curve\n     *  @private\n     */\n    Envelope.prototype._setCurve = function (name, direction, curve) {\n        // check if it's a valid type\n        if (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {\n            var curveDef = EnvelopeCurves[curve];\n            if (isObject(curveDef)) {\n                if (name !== \"_decayCurve\") {\n                    this[name] = curveDef[direction];\n                }\n            }\n            else {\n                this[name] = curveDef;\n            }\n        }\n        else if (isArray(curve) && name !== \"_decayCurve\") {\n            this[name] = curve;\n        }\n        else {\n            throw new Error(\"Envelope: invalid curve: \" + curve);\n        }\n    };\n    Object.defineProperty(Envelope.prototype, \"attackCurve\", {\n        /**\n         * The shape of the attack.\n         * Can be any of these strings:\n         * * \"linear\"\n         * * \"exponential\"\n         * * \"sine\"\n         * * \"cosine\"\n         * * \"bounce\"\n         * * \"ripple\"\n         * * \"step\"\n         *\n         * Can also be an array which describes the curve. Values\n         * in the array are evenly subdivided and linearly\n         * interpolated over the duration of the attack.\n         * @example\n         * env.attackCurve = \"linear\";\n         * @example\n         * //can also be an array\n         * env.attackCurve = [0, 0.2, 0.3, 0.4, 1]\n         */\n        get: function () {\n            return this._getCurve(this._attackCurve, \"In\");\n        },\n        set: function (curve) {\n            this._setCurve(\"_attackCurve\", \"In\", curve);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Envelope.prototype, \"releaseCurve\", {\n        /**\n         * The shape of the release. See the attack curve types.\n         * @example\n         * env.releaseCurve = \"linear\";\n         */\n        get: function () {\n            return this._getCurve(this._releaseCurve, \"Out\");\n        },\n        set: function (curve) {\n            this._setCurve(\"_releaseCurve\", \"Out\", curve);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Envelope.prototype, \"decayCurve\", {\n        /**\n         * The shape of the decay either \"linear\" or \"exponential\"\n         * @example\n         * env.decayCurve = \"linear\";\n         */\n        get: function () {\n            return this._decayCurve;\n        },\n        set: function (curve) {\n            this.assert([\"linear\", \"exponential\"].some(function (c) { return c === curve; }), \"Invalid envelope curve: \" + curve);\n            this._decayCurve = curve;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Trigger the attack/decay portion of the ADSR envelope.\n     * @param  time When the attack should start.\n     * @param velocity The velocity of the envelope scales the vales.\n     *                              number between 0-1\n     * @example\n     * //trigger the attack 0.5 seconds from now with a velocity of 0.2\n     * env.triggerAttack(\"+0.5\", 0.2);\n     */\n    Envelope.prototype.triggerAttack = function (time, velocity) {\n        if (velocity === void 0) { velocity = 1; }\n        this.log(\"triggerAttack\", time, velocity);\n        time = this.toSeconds(time);\n        var originalAttack = this.toSeconds(this.attack);\n        var attack = originalAttack;\n        var decay = this.toSeconds(this.decay);\n        // check if it's not a complete attack\n        var currentValue = this.getValueAtTime(time);\n        if (currentValue > 0) {\n            // subtract the current value from the attack time\n            var attackRate = 1 / attack;\n            var remainingDistance = 1 - currentValue;\n            // the attack is now the remaining time\n            attack = remainingDistance / attackRate;\n        }\n        // attack\n        if (attack === 0) {\n            // case where the attack time is 0 should set instantly\n            this._sig.setValueAtTime(velocity, time);\n        }\n        else if (this._attackCurve === \"linear\") {\n            this._sig.linearRampTo(velocity, attack, time);\n        }\n        else if (this._attackCurve === \"exponential\") {\n            this._sig.targetRampTo(velocity, attack, time);\n        }\n        else if (attack > 0) {\n            this._sig.cancelAndHoldAtTime(time);\n            var curve = this._attackCurve;\n            // find the starting position in the curve\n            for (var i = 1; i < curve.length; i++) {\n                // the starting index is between the two values\n                if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {\n                    curve = this._attackCurve.slice(i);\n                    // the first index is the current value\n                    curve[0] = currentValue;\n                    break;\n                }\n            }\n            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n        }\n        // decay\n        if (decay) {\n            var decayValue = velocity * this.sustain;\n            var decayStart = time + attack;\n            this.log(\"decay\", decayStart);\n            if (this._decayCurve === \"linear\") {\n                this._sig.linearRampTo(decayValue, decay, decayStart + this.sampleTime);\n            }\n            else if (this._decayCurve === \"exponential\") {\n                this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n            }\n        }\n        return this;\n    };\n    /**\n     *  Triggers the release of the envelope.\n     *  @param  time When the release portion of the envelope should start.\n     *  @example\n     *  //trigger release immediately\n     *  env.triggerRelease();\n     */\n    Envelope.prototype.triggerRelease = function (time) {\n        this.log(\"triggerRelease\", time);\n        time = this.toSeconds(time);\n        var currentValue = this.getValueAtTime(time);\n        if (currentValue > 0) {\n            var release = this.toSeconds(this.release);\n            if (this._releaseCurve === \"linear\") {\n                this._sig.linearRampTo(0, release, time);\n            }\n            else if (this._releaseCurve === \"exponential\") {\n                this._sig.targetRampTo(0, release, time);\n            }\n            else {\n                if (isArray(this._releaseCurve)) {\n                    this._sig.cancelAndHoldAtTime(time);\n                    this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);\n                }\n            }\n        }\n        return this;\n    };\n    /**\n     *  Get the scheduled value at the given time. This will\n     *  return the unconverted (raw) value.\n     */\n    Envelope.prototype.getValueAtTime = function (time) {\n        return this._sig.getValueAtTime(time);\n    };\n    /**\n     *  triggerAttackRelease is shorthand for triggerAttack, then waiting\n     *  some duration, then triggerRelease.\n     *  @param duration The duration of the sustain.\n     *  @param time When the attack should be triggered.\n     *  @param velocity The velocity of the envelope.\n     *  @example\n     * //trigger the attack and then the release after 0.6 seconds.\n     * env.triggerAttackRelease(0.6);\n     */\n    Envelope.prototype.triggerAttackRelease = function (duration, time, velocity) {\n        if (velocity === void 0) { velocity = 1; }\n        time = this.toSeconds(time);\n        this.triggerAttack(time, velocity);\n        this.triggerRelease(time + this.toSeconds(duration));\n        return this;\n    };\n    /**\n     *  Cancels all scheduled envelope changes after the given time.\n     */\n    Envelope.prototype.cancel = function (after) {\n        this._sig.cancelScheduledValues(this.toSeconds(after));\n        return this;\n    };\n    /**\n     * Connect the envelope to a destination node.\n     */\n    Envelope.prototype.connect = function (destination, outputNumber, inputNumber) {\n        if (outputNumber === void 0) { outputNumber = 0; }\n        if (inputNumber === void 0) { inputNumber = 0; }\n        connectSignal(this, destination, outputNumber, inputNumber);\n        return this;\n    };\n    Envelope.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._sig.dispose();\n        return this;\n    };\n    return Envelope;\n}(ToneAudioNode));\nexport { Envelope };\n/**\n *  Generate some complex envelope curves.\n */\n// tslint:disable-next-line: variable-name\nvar EnvelopeCurves = (function () {\n    var curveLen = 128;\n    var i;\n    var k;\n    // cosine curve\n    var cosineCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        cosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n    }\n    // ripple curve\n    var rippleCurve = [];\n    var rippleCurveFreq = 6.4;\n    for (i = 0; i < curveLen - 1; i++) {\n        k = (i / (curveLen - 1));\n        var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n        rippleCurve[i] = sineWave / 10 + k * 0.83;\n    }\n    rippleCurve[curveLen - 1] = 1;\n    // stairs curve\n    var stairsCurve = [];\n    var steps = 5;\n    for (i = 0; i < curveLen; i++) {\n        stairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n    }\n    // in-out easing curve\n    var sineCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        k = i / (curveLen - 1);\n        sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n    // a bounce curve\n    var bounceCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        k = i / (curveLen - 1);\n        var freq = Math.pow(k, 3) * 4 + 0.2;\n        var val = Math.cos(freq * Math.PI * 2 * k);\n        bounceCurve[i] = Math.abs(val * (1 - k));\n    }\n    /**\n     *  Invert a value curve to make it work for the release\n     */\n    function invertCurve(curve) {\n        var out = new Array(curve.length);\n        for (var j = 0; j < curve.length; j++) {\n            out[j] = 1 - curve[j];\n        }\n        return out;\n    }\n    /**\n     *  reverse the curve\n     */\n    function reverseCurve(curve) {\n        return curve.slice(0).reverse();\n    }\n    /**\n     *  attack and release curve arrays\n     */\n    return {\n        bounce: {\n            In: invertCurve(bounceCurve),\n            Out: bounceCurve,\n        },\n        cosine: {\n            In: cosineCurve,\n            Out: reverseCurve(cosineCurve),\n        },\n        exponential: \"exponential\",\n        linear: \"linear\",\n        ripple: {\n            In: rippleCurve,\n            Out: invertCurve(rippleCurve),\n        },\n        sine: {\n            In: sineCurve,\n            Out: invertCurve(sineCurve),\n        },\n        step: {\n            In: stairsCurve,\n            Out: invertCurve(stairsCurve),\n        },\n    };\n})();\n//# sourceMappingURL=Envelope.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\n/**\n * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts\n * an audio signal as the input and will apply the envelope to the amplitude\n * of the signal.\n * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n * @param attack The amount of time it takes for the envelope to go from 0 to it's maximum value.\n * @param decay\tThe period of time after the attack that it takes for the envelope\n *                       \tto fall to the sustain value. Value must be greater than 0.\n * @param sustain\tThe percent of the maximum value that the envelope rests at until\n *                                \tthe release is triggered.\n * @param release\tThe amount of time after the release is triggered it takes to reach 0.\n *                         \tValue must be greater than 0.\n *  @example\n * var ampEnv = new AmplitudeEnvelope({\n * \t\"attack\": 0.1,\n * \t\"decay\": 0.2,\n * \t\"sustain\": 1.0,\n * \t\"release\": 0.8\n * }).toDestination();\n * //create an oscillator and connect it\n * var osc = new Tone.Oscillator().connect(ampEnv).start();\n * //trigger the envelopes attack and release \"8t\" apart\n * ampEnv.triggerAttackRelease(\"8t\");\n */\nvar AmplitudeEnvelope = /** @class */ (function (_super) {\n    __extends(AmplitudeEnvelope, _super);\n    function AmplitudeEnvelope() {\n        var _this = _super.call(this, optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"])) || this;\n        _this.name = \"AmplitudeEnvelope\";\n        _this._gainNode = new Gain({\n            context: _this.context,\n            gain: 0,\n        });\n        _this.output = _this._gainNode;\n        _this.input = _this._gainNode;\n        _this._sig.connect(_this._gainNode.gain);\n        _this.output = _this._gainNode;\n        _this.input = _this._gainNode;\n        return _this;\n    }\n    /**\n     * Clean up\n     */\n    AmplitudeEnvelope.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._gainNode.dispose();\n        return this;\n    };\n    return AmplitudeEnvelope;\n}(Envelope));\nexport { AmplitudeEnvelope };\n//# sourceMappingURL=AmplitudeEnvelope.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Volume } from \"../component/channel/Volume\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n *  Base-class for all instruments\n */\nvar Instrument = /** @class */ (function (_super) {\n    __extends(Instrument, _super);\n    function Instrument() {\n        var _this = _super.call(this, optionsFromArguments(Instrument.getDefaults(), arguments)) || this;\n        /**\n         * Keep track of all events scheduled to the transport\n         * when the instrument is 'synced'\n         */\n        _this._scheduledEvents = [];\n        /**\n         * If the instrument is currently synced\n         */\n        _this._synced = false;\n        // tslint:disable-next-line: variable-name\n        _this._original_triggerAttack = _this.triggerAttack;\n        // tslint:disable-next-line: variable-name\n        _this._original_triggerRelease = _this.triggerRelease;\n        var options = optionsFromArguments(Instrument.getDefaults(), arguments);\n        _this._volume = new Volume({\n            context: _this.context,\n            volume: options.volume,\n        });\n        _this.volume = _this._volume.volume;\n        _this.output = _this._volume;\n        readOnly(_this, \"volume\");\n        return _this;\n    }\n    Instrument.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            volume: 0,\n        });\n    };\n    /**\n     * Sync the instrument to the Transport. All subsequent calls of\n     * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n     * will be scheduled along the transport.\n     * @example\n     * instrument.sync()\n     * //schedule 3 notes when the transport first starts\n     * instrument.triggerAttackRelease('C4', '8n', 0)\n     * instrument.triggerAttackRelease('E4', '8n', '8n')\n     * instrument.triggerAttackRelease('G4', '8n', '4n')\n     * //start the transport to hear the notes\n     * Transport.start()\n     * @returns {Instrument} this\n     */\n    Instrument.prototype.sync = function () {\n        if (!this._synced) {\n            this._synced = true;\n            this._syncMethod(\"triggerAttack\", 1);\n            this._syncMethod(\"triggerRelease\", 0);\n        }\n        return this;\n    };\n    /**\n     * Wrap the given method so that it can be synchronized\n     * @param method Which method to wrap and sync\n     * @param  timePosition What position the time argument appears in\n     */\n    Instrument.prototype._syncMethod = function (method, timePosition) {\n        var _this = this;\n        var originalMethod = this[\"_original_\" + method] = this[method];\n        this[method] = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var time = args[timePosition];\n            var id = _this.context.transport.schedule(function (t) {\n                args[timePosition] = t;\n                originalMethod.apply(_this, args);\n            }, time);\n            _this._scheduledEvents.push(id);\n        };\n    };\n    /**\n     * Unsync the instrument from the Transport\n     */\n    Instrument.prototype.unsync = function () {\n        var _this = this;\n        this._scheduledEvents.forEach(function (id) { return _this.context.transport.clear(id); });\n        this._scheduledEvents = [];\n        if (this._synced) {\n            this._synced = false;\n            this.triggerAttack = this._original_triggerAttack;\n            this.triggerRelease = this._original_triggerRelease;\n        }\n        return this;\n    };\n    /**\n     *  Trigger the attack and then the release after the duration.\n     *  @param  note     The note to trigger.\n     *  @param  duration How long the note should be held for before\n     *                          triggering the release. This value must be greater than 0.\n     *  @param time  When the note should be triggered.\n     *  @param  velocity The velocity the note should be triggered at.\n     *  @example\n     * //trigger \"C4\" for the duration of an 8th note\n     * synth.triggerAttackRelease(\"C4\", \"8n\");\n     */\n    Instrument.prototype.triggerAttackRelease = function (note, duration, time, velocity) {\n        var computedTime = this.toSeconds(time);\n        var computedDuration = this.toSeconds(duration);\n        this.triggerAttack(note, computedTime, velocity);\n        this.triggerRelease(computedTime + computedDuration);\n        return this;\n    };\n    /**\n     *  clean up\n     *  @returns {Instrument} this\n     */\n    Instrument.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._volume.dispose();\n        this.unsync();\n        this._scheduledEvents = [];\n        return this;\n    };\n    return Instrument;\n}(ToneAudioNode));\nexport { Instrument };\n//# sourceMappingURL=Instrument.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Instrument } from \"../instrument/Instrument\";\n/**\n * Abstract base class for other monophonic instruments to extend.\n */\nvar Monophonic = /** @class */ (function (_super) {\n    __extends(Monophonic, _super);\n    function Monophonic() {\n        var _this = _super.call(this, optionsFromArguments(Monophonic.getDefaults(), arguments)) || this;\n        var options = optionsFromArguments(Monophonic.getDefaults(), arguments);\n        _this.portamento = options.portamento;\n        return _this;\n    }\n    Monophonic.getDefaults = function () {\n        return Object.assign(Instrument.getDefaults(), {\n            portamento: 0,\n        });\n    };\n    /**\n     *  Trigger the attack of the note optionally with a given velocity.\n     *\n     *\n     *  @param  note The note to trigger.\n     *  @param  time When the note should start.\n     *  @param  velocity The velocity scaler determines how \"loud\" the note\n     *                   will be triggered.\n     *  @example\n     * synth.triggerAttack(\"C4\");\n     *  @example\n     * //trigger the note a half second from now at half velocity\n     * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n     */\n    Monophonic.prototype.triggerAttack = function (note, time, velocity) {\n        if (velocity === void 0) { velocity = 1; }\n        this.log(\"triggerAttack\", note, time, velocity);\n        var seconds = this.toSeconds(time);\n        this._triggerEnvelopeAttack(seconds, velocity);\n        this.setNote(note, seconds);\n        return this;\n    };\n    /**\n     *  Trigger the release portion of the envelope\n     *  @param  {Time} [time=now] If no time is given, the release happens immediatly\n     *  @returns {Monophonic} this\n     *  @example\n     * synth.triggerRelease();\n     */\n    Monophonic.prototype.triggerRelease = function (time) {\n        this.log(\"triggerRelease\", time);\n        var seconds = this.toSeconds(time);\n        this._triggerEnvelopeRelease(seconds);\n        return this;\n    };\n    /**\n     *  Get the level of the output at the given time. Measures\n     *  the envelope(s) value at the time.\n     *  @param time The time to query the envelope value\n     *  @return The output level between 0-1\n     */\n    Monophonic.prototype.getLevelAtTime = function (time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    };\n    /**\n     *  Set the note at the given time. If no time is given, the note\n     *  will set immediately.\n     *  @param note The note to change to.\n     *  @param  time The time when the note should be set.\n     * @example\n     * //change to F#6 in one quarter note from now.\n     * synth.setNote(\"F#6\", \"+4n\");\n     * @example\n     * //change to Bb4 right now\n     * synth.setNote(\"Bb4\");\n     */\n    Monophonic.prototype.setNote = function (note, time) {\n        var computedTime = this.toSeconds(time);\n        var computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;\n        if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {\n            var portTime = this.toSeconds(this.portamento);\n            this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);\n        }\n        else {\n            this.frequency.setValueAtTime(computedFrequency, computedTime);\n        }\n        return this;\n    };\n    return Monophonic;\n}(Instrument));\nexport { Monophonic };\n//# sourceMappingURL=Monophonic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { Monophonic } from \"./Monophonic\";\n/**\n * Synth is composed simply of a {@link OmniOscillator} routed through an {@link AmplitudeEnvelope}.\n * ```\n * +----------------+   +-------------------+\n * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output\n * +----------------+   +-------------------+\n * ```\n * @param options the options available for the synth.\n * @example\n * var synth = new Synth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n */\nvar Synth = /** @class */ (function (_super) {\n    __extends(Synth, _super);\n    function Synth() {\n        var _this = _super.call(this, optionsFromArguments(Synth.getDefaults(), arguments)) || this;\n        _this.name = \"Synth\";\n        /**\n         *  The oscillator.\n         */\n        _this.oscillator = new OmniOscillator({ context: _this.context });\n        /**\n         * The frequency signal\n         */\n        _this.frequency = _this.oscillator.frequency;\n        /**\n         * The detune signal\n         */\n        _this.detune = _this.oscillator.detune;\n        /**\n         * The envelope\n         */\n        _this.envelope = new AmplitudeEnvelope({ context: _this.context });\n        _this._internalChannels = [_this.oscillator, _this.envelope];\n        var options = optionsFromArguments(Synth.getDefaults(), arguments);\n        _this.oscillator.set(options.oscillator);\n        _this.envelope.set(options.envelope);\n        // connect the oscillators to the output\n        _this.oscillator.chain(_this.envelope, _this.output);\n        readOnly(_this, [\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n        return _this;\n    }\n    Synth.getDefaults = function () {\n        return Object.assign(Monophonic.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(Source.getDefaults())), {\n                attack: 0.005,\n                decay: 0.1,\n                release: 1,\n                sustain: 0.3,\n            }),\n            oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), Object.keys(Source.getDefaults())), {\n                type: \"triangle\",\n            }),\n        });\n    };\n    /**\n     *  start the attack portion of the envelope\n     *  @param time the time the attack should start\n     *  @param velocity the velocity of the note (0-1)\n     */\n    Synth.prototype._triggerEnvelopeAttack = function (time, velocity) {\n        if (velocity === void 0) { velocity = 1; }\n        var computedTime = this.toSeconds(time);\n        // the envelopes\n        this.envelope.triggerAttack(computedTime, velocity);\n        this.oscillator.start(computedTime);\n        // if there is no release portion, stop the oscillator\n        if (this.envelope.sustain === 0) {\n            var computedAttack = this.toSeconds(this.envelope.attack);\n            var computedDecay = this.toSeconds(this.envelope.decay);\n            this.oscillator.stop(computedTime + computedAttack + computedDecay);\n        }\n    };\n    /**\n     *  start the release portion of the envelope\n     *  @param time the time the release should start\n     */\n    Synth.prototype._triggerEnvelopeRelease = function (time) {\n        time = this.toSeconds(time);\n        this.envelope.triggerRelease(time);\n        this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n    };\n    /**\n     *  clean up\n     */\n    Synth.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.oscillator.dispose();\n        this.envelope.dispose();\n        return this;\n    };\n    return Synth;\n}(Monophonic));\nexport { Synth };\n//# sourceMappingURL=Synth.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ToneAudioBuffers } from \"../core/context/ToneAudioBuffers\";\nimport { intervalToFrequencyRatio } from \"../core/type/Conversions\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { isArray, isNote, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { ToneBufferSource } from \"../source/buffer/BufferSource\";\n/**\n * Pass in an object which maps the note's pitch or midi value to the url,\n * then you can trigger the attack and release of that note like other instruments.\n * By automatically repitching the samples, it is possible to play pitches which\n * were not explicitly included which can save loading time.\n *\n * For sample or buffer playback where repitching is not necessary,\n * use {@link Player}.\n * @param samples An object of samples mapping either Midi\n *                         Note Numbers or Scientific Pitch Notation\n *                         to the url of that sample.\n * @param onload The callback to invoke when all of the samples are loaded.\n * @param baseUrl The root URL of all of the samples, which is prepended to all the URLs.\n * @example\n * var sampler = new Sampler({\n * \t\"C3\" : \"path/to/C3.mp3\",\n * \t\"D#3\" : \"path/to/Dsharp3.mp3\",\n * \t\"F#3\" : \"path/to/Fsharp3.mp3\",\n * \t\"A3\" : \"path/to/A3.mp3\",\n * }, function(){\n * \t//sampler will repitch the closest sample\n * \tsampler.triggerAttack(\"D3\")\n * })\n */\nvar Sampler = /** @class */ (function (_super) {\n    __extends(Sampler, _super);\n    function Sampler() {\n        var _this = _super.call(this, optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\")) || this;\n        _this.name = \"Sampler\";\n        /**\n         * The object of all currently playing BufferSources\n         */\n        _this._activeSources = new Map();\n        var options = optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n        var urlMap = {};\n        Object.keys(options.urls).forEach(function (note) {\n            var noteNumber = parseInt(note, 10);\n            _this.assert(isNote(note)\n                || (isNumber(noteNumber) && isFinite(noteNumber)), \"url key is neither a note or midi pitch: \" + note);\n            if (isNote(note)) {\n                // convert the note name to MIDI\n                var mid = new FrequencyClass(_this.context, note).toMidi();\n                urlMap[mid] = options.urls[note];\n            }\n            else if (isNumber(noteNumber) && isFinite(noteNumber)) {\n                // otherwise if it's numbers assume it's midi\n                urlMap[noteNumber] = options.urls[noteNumber];\n            }\n        });\n        _this._buffers = new ToneAudioBuffers(urlMap, options.onload, options.baseUrl);\n        _this.attack = options.attack;\n        _this.release = options.release;\n        _this.curve = options.curve;\n        return _this;\n    }\n    Sampler.getDefaults = function () {\n        return Object.assign(Instrument.getDefaults(), {\n            attack: 0,\n            baseUrl: \"\",\n            curve: \"exponential\",\n            onload: noOp,\n            release: 0.1,\n            urls: {},\n        });\n    };\n    /**\n     * Returns the difference in steps between the given midi note at the closets sample.\n     */\n    Sampler.prototype._findClosest = function (midi) {\n        // searches within 8 octaves of the given midi note\n        var MAX_INTERVAL = 96;\n        var interval = 0;\n        while (interval < MAX_INTERVAL) {\n            // check above and below\n            if (this._buffers.has(midi + interval)) {\n                return -interval;\n            }\n            else if (this._buffers.has(midi - interval)) {\n                return interval;\n            }\n            interval++;\n        }\n        throw new Error(\"No available buffers for note: \" + midi);\n    };\n    /**\n     * @param  notes\tThe note to play, or an array of notes.\n     * @param  time     When to play the note\n     * @param  velocity The velocity to play the sample back.\n     */\n    Sampler.prototype.triggerAttack = function (notes, time, velocity) {\n        var _this = this;\n        if (velocity === void 0) { velocity = 1; }\n        this.log(\"triggerAttack\", notes, time, velocity);\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        notes.forEach(function (note) {\n            var midi = new FrequencyClass(_this.context, note).toMidi();\n            // find the closest note pitch\n            var difference = _this._findClosest(midi);\n            var closestNote = midi - difference;\n            var buffer = _this._buffers.get(closestNote);\n            var playbackRate = intervalToFrequencyRatio(difference);\n            // play that note\n            var source = new ToneBufferSource({\n                buffer: buffer,\n                context: _this.context,\n                curve: _this.curve,\n                fadeIn: _this.attack,\n                fadeOut: _this.release,\n                playbackRate: playbackRate,\n            }).connect(_this.output);\n            source.start(time, 0, buffer.duration / playbackRate, velocity);\n            // add it to the active sources\n            if (!isArray(_this._activeSources.get(midi))) {\n                _this._activeSources.set(midi, []);\n            }\n            _this._activeSources.get(midi).push(source);\n            // remove it when it's done\n            source.onended = function () {\n                if (_this._activeSources && _this._activeSources.has(midi)) {\n                    var sources = _this._activeSources.get(midi);\n                    var index = sources.indexOf(source);\n                    if (index !== -1) {\n                        sources.splice(index, 1);\n                    }\n                }\n            };\n        });\n        return this;\n    };\n    /**\n     * @param  notes\tThe note to release, or an array of notes.\n     * @param  time     \tWhen to release the note.\n     */\n    Sampler.prototype.triggerRelease = function (notes, time) {\n        var _this = this;\n        this.log(\"triggerRelease\", notes, time);\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        notes.forEach(function (note) {\n            var midi = new FrequencyClass(_this.context, note).toMidi();\n            // find the note\n            if (_this._activeSources.has(midi) && _this._activeSources.get(midi).length) {\n                var sources = _this._activeSources.get(midi);\n                time = _this.toSeconds(time);\n                sources.forEach(function (source) {\n                    source.stop(time);\n                });\n                _this._activeSources.set(midi, []);\n            }\n        });\n        return this;\n    };\n    /**\n     * Release all currently active notes.\n     * @param  time     \tWhen to release the notes.\n     */\n    Sampler.prototype.releaseAll = function (time) {\n        var computedTime = this.toSeconds(time);\n        this._activeSources.forEach(function (sources) {\n            while (sources.length) {\n                var source = sources.shift();\n                source.stop(computedTime);\n            }\n        });\n        return this;\n    };\n    /**\n     * Sync the instrument to the Transport. All subsequent calls of\n     * [triggerAttack](#triggerattack) and [triggerRelease](#triggerrelease)\n     * will be scheduled along the transport.\n     * @example\n     * synth.sync()\n     * //schedule 3 notes when the transport first starts\n     * synth.triggerAttackRelease('8n', 0)\n     * synth.triggerAttackRelease('8n', '8n')\n     * synth.triggerAttackRelease('8n', '4n')\n     * //start the transport to hear the notes\n     * Transport.start()\n     * @returns {Tone.Instrument} this\n     */\n    Sampler.prototype.sync = function () {\n        this._syncMethod(\"triggerAttack\", 1);\n        this._syncMethod(\"triggerRelease\", 1);\n        return this;\n    };\n    /**\n     * Invoke the attack phase, then after the duration, invoke the release.\n     * @param  notes\tThe note to play and release, or an array of notes.\n     * @param  duration The time the note should be held\n     * @param  time     When to start the attack\n     * @param  velocity The velocity of the attack\n     */\n    Sampler.prototype.triggerAttackRelease = function (notes, duration, time, velocity) {\n        var _this = this;\n        if (velocity === void 0) { velocity = 1; }\n        var computedTime = this.toSeconds(time);\n        this.triggerAttack(notes, computedTime, velocity);\n        if (isArray(duration)) {\n            this.assert(isArray(notes), \"notes must be an array when duration is array\");\n            notes.forEach(function (note, index) {\n                var d = duration[Math.min(index, duration.length - 1)];\n                _this.triggerRelease(note, computedTime + _this.toSeconds(d));\n            });\n        }\n        else {\n            this.triggerRelease(notes, computedTime + this.toSeconds(duration));\n        }\n        return this;\n    };\n    /**\n     * Add a note to the sampler.\n     * @param  note      The buffer's pitch.\n     * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n     * @param  callback  The callback to invoke when the url is loaded.\n     */\n    Sampler.prototype.add = function (note, url, callback) {\n        this.assert(isNote(note) || isFinite(note), \"note must be a pitch or midi: \" + note);\n        if (isNote(note)) {\n            // convert the note name to MIDI\n            var mid = new FrequencyClass(this.context, note).toMidi();\n            this._buffers.add(mid, url, callback);\n        }\n        else {\n            // otherwise if it's numbers assume it's midi\n            this._buffers.add(note, url, callback);\n        }\n        return this;\n    };\n    Object.defineProperty(Sampler.prototype, \"loaded\", {\n        /**\n         * If the buffers are loaded or not\n         */\n        get: function () {\n            return this._buffers.loaded;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Clean up\n     */\n    Sampler.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._buffers.dispose();\n        this._activeSources.forEach(function (sources) {\n            sources.forEach(function (source) { return source.dispose(); });\n        });\n        this._activeSources.clear();\n        return this;\n    };\n    return Sampler;\n}(Instrument));\nexport { Sampler };\n//# sourceMappingURL=Sampler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport \"../core/clock/Transport\";\nimport { ToneWithContext } from \"../core/context/ToneWithContext\";\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isBoolean, isNumber } from \"../core/util/TypeCheck\";\n/**\n * ToneEvent abstracts away this.context.transport.schedule and provides a schedulable\n * callback for a single or repeatable events along the timeline.\n *\n * @param callback The callback to invoke at the time.\n * @param value The value or values which should be passed to the callback function on invocation.\n * @example\n * var chord = new ToneEvent(function(time, chord){\n * \t//the chord as well as the exact time of the event\n * \t//are passed in as arguments to the callback function\n * }, [\"D4\", \"E4\", \"F4\"]);\n * //start the chord at the beginning of the transport timeline\n * chord.start();\n * //loop it every measure for 8 measures\n * chord.loop = 8;\n * chord.loopEnd = \"1m\";\n */\nvar ToneEvent = /** @class */ (function (_super) {\n    __extends(ToneEvent, _super);\n    function ToneEvent() {\n        var _this = _super.call(this, optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"])) || this;\n        _this.name = \"ToneEvent\";\n        /**\n         *  Tracks the scheduled events\n         */\n        _this._state = new StateTimeline(\"stopped\");\n        /**\n         *  A delay time from when the event is scheduled to start\n         */\n        _this._startOffset = 0;\n        var options = optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"]);\n        _this._loop = options.loop;\n        _this.callback = options.callback;\n        _this.value = options.value;\n        _this._loopStart = _this.toTicks(options.loopStart);\n        _this._loopEnd = _this.toTicks(options.loopEnd);\n        _this._playbackRate = options.playbackRate;\n        _this._probability = options.probability;\n        _this._humanize = options.humanize;\n        _this.mute = options.mute;\n        _this.playbackRate = options.playbackRate;\n        return _this;\n    }\n    ToneEvent.getDefaults = function () {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            callback: noOp,\n            humanize: false,\n            loop: false,\n            loopEnd: \"1m\",\n            loopStart: 0,\n            mute: false,\n            playbackRate: 1,\n            probability: 1,\n            value: null,\n        });\n    };\n    /**\n     *  Reschedule all of the events along the timeline\n     *  with the updated values.\n     *  @param after Only reschedules events after the given time.\n     *  @private\n     */\n    ToneEvent.prototype._rescheduleEvents = function (after) {\n        var _this = this;\n        if (after === void 0) { after = -1; }\n        // if no argument is given, schedules all of the events\n        this._state.forEachFrom(after, function (event) {\n            var duration;\n            if (event.state === \"started\") {\n                if (event.id !== -1) {\n                    _this.context.transport.clear(event.id);\n                }\n                var startTick = event.time + Math.round(_this.startOffset / _this._playbackRate);\n                if (_this._loop === true || isNumber(_this._loop) && _this._loop > 1) {\n                    duration = Infinity;\n                    if (isNumber(_this._loop)) {\n                        duration = (_this._loop) * _this._getLoopDuration();\n                    }\n                    var nextEvent = _this._state.getAfter(startTick);\n                    if (nextEvent !== null) {\n                        duration = Math.min(duration, nextEvent.time - startTick);\n                    }\n                    if (duration !== Infinity) {\n                        // schedule a stop since it's finite duration\n                        _this._state.setStateAtTime(\"stopped\", startTick + duration + 1, { id: -1 });\n                        duration = new TicksClass(_this.context, duration);\n                    }\n                    var interval = new TicksClass(_this.context, _this._getLoopDuration());\n                    event.id = _this.context.transport.scheduleRepeat(_this._tick.bind(_this), interval, new TicksClass(_this.context, startTick), duration);\n                }\n                else {\n                    event.id = _this.context.transport.schedule(_this._tick.bind(_this), new TicksClass(_this.context, startTick));\n                }\n            }\n        });\n    };\n    Object.defineProperty(ToneEvent.prototype, \"state\", {\n        /**\n         *  Returns the playback state of the note, either \"started\" or \"stopped\".\n         */\n        get: function () {\n            return this._state.getValueAtTime(this.context.transport.ticks);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneEvent.prototype, \"startOffset\", {\n        /**\n         * The start from the scheduled start time.\n         */\n        get: function () {\n            return this._startOffset;\n        },\n        set: function (offset) {\n            this._startOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneEvent.prototype, \"probability\", {\n        /**\n         *  The probability of the notes being triggered.\n         */\n        get: function () {\n            return this._probability;\n        },\n        set: function (prob) {\n            this._probability = prob;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneEvent.prototype, \"humanize\", {\n        /**\n         *  If set to true, will apply small random variation\n         *  to the callback time. If the value is given as a time, it will randomize\n         *  by that amount.\n         * @example\n         * event.humanize = true;\n         */\n        get: function () {\n            return this._humanize;\n        },\n        set: function (variation) {\n            this._humanize = variation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Start the note at the given time.\n     *  @param  time  When the event should start.\n     */\n    ToneEvent.prototype.start = function (time) {\n        var ticks = this.toTicks(time);\n        if (this._state.getValueAtTime(ticks) === \"stopped\") {\n            this._state.add({\n                id: -1,\n                state: \"started\",\n                time: ticks,\n            });\n            this._rescheduleEvents(ticks);\n        }\n        return this;\n    };\n    /**\n     *  Stop the Event at the given time.\n     *  @param  time  When the event should stop.\n     */\n    ToneEvent.prototype.stop = function (time) {\n        this.cancel(time);\n        var ticks = this.toTicks(time);\n        if (this._state.getValueAtTime(ticks) === \"started\") {\n            this._state.setStateAtTime(\"stopped\", ticks, { id: -1 });\n            var previousEvent = this._state.getBefore(ticks);\n            var reschedulTime = ticks;\n            if (previousEvent !== null) {\n                reschedulTime = previousEvent.time;\n            }\n            this._rescheduleEvents(reschedulTime);\n        }\n        return this;\n    };\n    /**\n     *  Cancel all scheduled events greater than or equal to the given time\n     *  @param  time  The time after which events will be cancel.\n     */\n    ToneEvent.prototype.cancel = function (time) {\n        var _this = this;\n        time = defaultArg(time, -Infinity);\n        var ticks = this.toTicks(time);\n        this._state.forEachFrom(ticks, function (event) {\n            _this.context.transport.clear(event.id);\n        });\n        this._state.cancel(ticks);\n        return this;\n    };\n    /**\n     *  The callback function invoker. Also\n     *  checks if the Event is done playing\n     *  @param  time  The time of the event in seconds\n     */\n    ToneEvent.prototype._tick = function (time) {\n        var ticks = this.context.transport.getTicksAtTime(time);\n        if (!this.mute && this._state.getValueAtTime(ticks) === \"started\") {\n            if (this.probability < 1 && Math.random() > this.probability) {\n                return;\n            }\n            if (this.humanize) {\n                var variation = 0.02;\n                if (!isBoolean(this.humanize)) {\n                    variation = this.toSeconds(this.humanize);\n                }\n                time += (Math.random() * 2 - 1) * variation;\n            }\n            this.callback(time, this.value);\n        }\n    };\n    /**\n     *  Get the duration of the loop.\n     */\n    ToneEvent.prototype._getLoopDuration = function () {\n        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n    };\n    Object.defineProperty(ToneEvent.prototype, \"loop\", {\n        /**\n         *  If the note should loop or not\n         *  between ToneEvent.loopStart and\n         *  ToneEvent.loopEnd. If set to true,\n         *  the event will loop indefinitely,\n         *  if set to a number greater than 1\n         *  it will play a specific number of\n         *  times, if set to false, 0 or 1, the\n         *  part will only play once.\n         */\n        get: function () {\n            return this._loop;\n        },\n        set: function (loop) {\n            this._loop = loop;\n            this._rescheduleEvents();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneEvent.prototype, \"playbackRate\", {\n        /**\n         * \tThe playback rate of the note. Defaults to 1.\n         *  @example\n         * note.loop = true;\n         * //repeat the note twice as fast\n         * note.playbackRate = 2;\n         */\n        get: function () {\n            return this._playbackRate;\n        },\n        set: function (rate) {\n            this._playbackRate = rate;\n            this._rescheduleEvents();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneEvent.prototype, \"loopEnd\", {\n        /**\n         *  The loopEnd point is the time the event will loop\n         *  if ToneEvent.loop is true.\n         */\n        get: function () {\n            return new TicksClass(this.context, this._loopEnd).toSeconds();\n        },\n        set: function (loopEnd) {\n            this._loopEnd = this.toTicks(loopEnd);\n            if (this._loop) {\n                this._rescheduleEvents();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneEvent.prototype, \"loopStart\", {\n        /**\n         *  The time when the loop should start.\n         */\n        get: function () {\n            return new TicksClass(this.context, this._loopStart).toSeconds();\n        },\n        set: function (loopStart) {\n            this._loopStart = this.toTicks(loopStart);\n            if (this._loop) {\n                this._rescheduleEvents();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToneEvent.prototype, \"progress\", {\n        /**\n         *  The current progress of the loop interval.\n         *  Returns 0 if the event is not started yet or\n         *  it is not set to loop.\n         */\n        get: function () {\n            if (this._loop) {\n                var ticks = this.context.transport.ticks;\n                var lastEvent = this._state.get(ticks);\n                if (lastEvent !== null && lastEvent.state === \"started\") {\n                    var loopDuration = this._getLoopDuration();\n                    var progress = (ticks - lastEvent.time) % loopDuration;\n                    return progress / loopDuration;\n                }\n                else {\n                    return 0;\n                }\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ToneEvent.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.cancel();\n        this._state.dispose();\n        return this;\n    };\n    return ToneEvent;\n}(ToneWithContext));\nexport { ToneEvent };\n//# sourceMappingURL=ToneEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isArray, isDefined, isObject, isUndef } from \"../core/util/TypeCheck\";\nimport { ToneEvent } from \"./ToneEvent\";\n/**\n *  Part is a collection ToneEvents which can be started/stopped and looped as a single unit.\n *\n *  @param callback The callback to invoke on each event\n *  @param events the array of events\n *  @example\n * var part = new Part(function(time, note){\n * \t//the notes given as the second element in the array\n * \t//will be passed in as the second argument\n * \tsynth.triggerAttackRelease(note, \"8n\", time);\n * }, [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n *  @example\n * //use an array of objects as long as the object has a \"time\" attribute\n * var part = new Part(function(time, value){\n * \t//the value is an object which contains both the note and the velocity\n * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n * }, [{\"time\" : 0, \"note\" : \"C3\", \"velocity\": 0.9},\n * \t   {\"time\" : \"0:2\", \"note\" : \"C4\", \"velocity\": 0.5}\n * ]).start(0);\n */\nvar Part = /** @class */ (function (_super) {\n    __extends(Part, _super);\n    function Part() {\n        var _this = _super.call(this, optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"])) || this;\n        _this.name = \"Part\";\n        /**\n         *  Tracks the scheduled events\n         */\n        _this._state = new StateTimeline(\"stopped\");\n        /**\n         * The events that belong to this part\n         */\n        _this._events = new Set();\n        var options = optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"]);\n        // add the events\n        options.events.forEach(function (event) {\n            if (isArray(event)) {\n                _this.add(event[0], event[1]);\n            }\n            else {\n                _this.add(event);\n            }\n        });\n        return _this;\n    }\n    Part.getDefaults = function () {\n        return Object.assign(ToneEvent.getDefaults(), {\n            events: [],\n        });\n    };\n    /**\n     *  Start the part at the given time.\n     *  @param  time    When to start the part.\n     *  @param  offset  The offset from the start of the part to begin playing at.\n     */\n    Part.prototype.start = function (time, offset) {\n        var _this = this;\n        var ticks = this.toTicks(time);\n        if (this._state.getValueAtTime(ticks) !== \"started\") {\n            offset = defaultArg(offset, this._loop ? this._loopStart : 0);\n            if (this._loop) {\n                offset = defaultArg(offset, this._loopStart);\n            }\n            else {\n                offset = defaultArg(offset, 0);\n            }\n            var computedOffset_1 = this.toTicks(offset);\n            this._state.add({\n                id: -1,\n                offset: computedOffset_1,\n                state: \"started\",\n                time: ticks,\n            });\n            this._forEach(function (event) {\n                _this._startNote(event, ticks, computedOffset_1);\n            });\n        }\n        return this;\n    };\n    /**\n     *  Start the event in the given event at the correct time given\n     *  the ticks and offset and looping.\n     *  @param  event\n     *  @param  ticks\n     *  @param  offset\n     */\n    Part.prototype._startNote = function (event, ticks, offset) {\n        ticks -= offset;\n        if (this._loop) {\n            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n                if (event.startOffset < offset) {\n                    // start it on the next loop\n                    ticks += this._getLoopDuration();\n                }\n                event.start(new TicksClass(this.context, ticks));\n            }\n            else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n                event.loop = false;\n                event.start(new TicksClass(this.context, ticks));\n            }\n        }\n        else if (event.startOffset >= offset) {\n            event.start(new TicksClass(this.context, ticks));\n        }\n    };\n    Object.defineProperty(Part.prototype, \"startOffset\", {\n        get: function () {\n            return this._startOffset;\n        },\n        set: function (offset) {\n            var _this = this;\n            this._startOffset = offset;\n            this._forEach(function (event) {\n                event.startOffset += _this._startOffset;\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Stop the part at the given time.\n     *  @param  time  When to stop the part.\n     */\n    Part.prototype.stop = function (time) {\n        var ticks = this.toTicks(time);\n        this._state.cancel(ticks);\n        this._state.setStateAtTime(\"stopped\", ticks);\n        this._forEach(function (event) {\n            event.stop(time);\n        });\n        return this;\n    };\n    /**\n     * Get/Set an Event's value at the given time.\n     * If a value is passed in and no event exists at\n     * the given time, one will be created with that value.\n     * If two events are at the same time, the first one will\n     * be returned.\n     * @example\n     * part.at(\"1m\"); //returns the part at the first measure\n     * part.at(\"2m\", \"C2\"); //set the value at \"2m\" to C2.\n     * //if an event didn't exist at that time, it will be created.\n     * @param time The time of the event to get or set.\n     * @param value If a value is passed in, the value of the event at the given time will be set to it.\n     */\n    Part.prototype.at = function (time, value) {\n        var timeInTicks = new TransportTimeClass(this.context, time).toTicks();\n        var tickTime = new TicksClass(this.context, 1).toSeconds();\n        var iterator = this._events.values();\n        var result = iterator.next();\n        while (!result.done) {\n            var event_1 = result.value;\n            if (Math.abs(timeInTicks - event_1.startOffset) < tickTime) {\n                if (isDefined(value)) {\n                    event_1.value = value;\n                }\n                return event_1;\n            }\n            result = iterator.next();\n        }\n        // if there was no event at that time, create one\n        if (isDefined(value)) {\n            this.add(time, value);\n            // return the new event\n            return this.at(time);\n        }\n        else {\n            return null;\n        }\n    };\n    Part.prototype.add = function (time, value) {\n        // extract the parameters\n        if (isObject(time) && time.hasOwnProperty(\"time\")) {\n            value = time;\n            time = value.time;\n        }\n        var ticks = this.toTicks(time);\n        var event;\n        if (value instanceof ToneEvent) {\n            event = value;\n            event.callback = this._tick.bind(this);\n        }\n        else {\n            event = new ToneEvent({\n                callback: this._tick.bind(this),\n                context: this.context,\n                value: value,\n            });\n        }\n        // the start offset\n        event.startOffset = ticks;\n        // initialize the values\n        event.set({\n            humanize: this.humanize,\n            loop: this.loop,\n            loopEnd: this.loopEnd,\n            loopStart: this.loopStart,\n            playbackRate: this.playbackRate,\n            probability: this.probability,\n        });\n        this._events.add(event);\n        // start the note if it should be played right now\n        this._restartEvent(event);\n        return this;\n    };\n    /**\n     *  Restart the given event\n     */\n    Part.prototype._restartEvent = function (event) {\n        var _this = this;\n        this._state.forEach(function (stateEvent) {\n            if (stateEvent.state === \"started\") {\n                _this._startNote(event, stateEvent.time, stateEvent.offset);\n            }\n            else {\n                // stop the note\n                event.stop(new TicksClass(_this.context, stateEvent.time));\n            }\n        });\n    };\n    Part.prototype.remove = function (time, value) {\n        var _this = this;\n        // extract the parameters\n        if (isObject(time) && time.hasOwnProperty(\"time\")) {\n            value = time;\n            time = value.time;\n        }\n        time = this.toTicks(time);\n        this._events.forEach(function (event) {\n            if (event.startOffset === time) {\n                if (isUndef(value) || (isDefined(value) && event.value === value)) {\n                    _this._events.delete(event);\n                    event.dispose();\n                }\n            }\n        });\n        return this;\n    };\n    /**\n     *  Remove all of the notes from the group.\n     */\n    Part.prototype.clear = function () {\n        this._forEach(function (event) { return event.dispose(); });\n        this._events.clear();\n        return this;\n    };\n    /**\n     *  Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n     *  @param after The time after which to cancel the scheduled events.\n     */\n    Part.prototype.cancel = function (after) {\n        this._forEach(function (event) { return event.cancel(after); });\n        this._state.cancel(this.toTicks(after));\n        return this;\n    };\n    /**\n     *  Iterate over all of the events\n     */\n    Part.prototype._forEach = function (callback) {\n        if (this._events) {\n            this._events.forEach(function (event) {\n                if (event instanceof Part) {\n                    event._forEach(callback);\n                }\n                else {\n                    callback(event);\n                }\n            });\n        }\n        return this;\n    };\n    /**\n     *  Set the attribute of all of the events\n     *  @param  attr  the attribute to set\n     *  @param  value      The value to set it to\n     */\n    Part.prototype._setAll = function (attr, value) {\n        this._forEach(function (event) {\n            event[attr] = value;\n        });\n    };\n    /**\n     *  Internal tick method\n     *  @param  time  The time of the event in seconds\n     */\n    Part.prototype._tick = function (time, value) {\n        if (!this.mute) {\n            this.callback(time, value);\n        }\n    };\n    /**\n     *  Determine if the event should be currently looping\n     *  given the loop boundries of this Part.\n     *  @param  event  The event to test\n     */\n    Part.prototype._testLoopBoundries = function (event) {\n        if (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)) {\n            event.cancel(0);\n        }\n        else if (event.state === \"stopped\") {\n            // reschedule it if it's stopped\n            this._restartEvent(event);\n        }\n    };\n    Object.defineProperty(Part.prototype, \"probability\", {\n        /**\n         *  The probability of the notes being triggered.\n         */\n        get: function () {\n            return this._probability;\n        },\n        set: function (prob) {\n            this._probability = prob;\n            this._setAll(\"probability\", prob);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Part.prototype, \"humanize\", {\n        /**\n         * If set to true, will apply small random variation\n         * to the callback time. If the value is given as a time, it will randomize\n         * by that amount.\n         * @example\n         * event.humanize = true;\n         */\n        get: function () {\n            return this._humanize;\n        },\n        set: function (variation) {\n            this._humanize = variation;\n            this._setAll(\"humanize\", variation);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Part.prototype, \"loop\", {\n        /**\n         * If the part should loop or not\n         * between Part.loopStart and\n         * Part.loopEnd. If set to true,\n         * the part will loop indefinitely,\n         * if set to a number greater than 1\n         * it will play a specific number of\n         * times, if set to false, 0 or 1, the\n         * part will only play once.\n         * @example\n         * //loop the part 8 times\n         * part.loop = 8;\n         */\n        get: function () {\n            return this._loop;\n        },\n        set: function (loop) {\n            var _this = this;\n            this._loop = loop;\n            this._forEach(function (event) {\n                event.loopStart = _this.loopStart;\n                event.loopEnd = _this.loopEnd;\n                event.loop = loop;\n                _this._testLoopBoundries(event);\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Part.prototype, \"loopEnd\", {\n        /**\n         *  The loopEnd point determines when it will\n         *  loop if Part.loop is true.\n         *  @memberOf Part#\n         *  @type {Time}\n         *  @name loopEnd\n         */\n        get: function () {\n            return new TicksClass(this.context, this._loopEnd).toSeconds();\n        },\n        set: function (loopEnd) {\n            var _this = this;\n            this._loopEnd = this.toTicks(loopEnd);\n            if (this._loop) {\n                this._forEach(function (event) {\n                    event.loopEnd = loopEnd;\n                    _this._testLoopBoundries(event);\n                });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Part.prototype, \"loopStart\", {\n        /**\n         *  The loopStart point determines when it will\n         *  loop if Part.loop is true.\n         */\n        get: function () {\n            return new TicksClass(this.context, this._loopStart).toSeconds();\n        },\n        set: function (loopStart) {\n            var _this = this;\n            this._loopStart = this.toTicks(loopStart);\n            if (this._loop) {\n                this._forEach(function (event) {\n                    event.loopStart = _this.loopStart;\n                    _this._testLoopBoundries(event);\n                });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Part.prototype, \"playbackRate\", {\n        /**\n         * \tThe playback rate of the part\n         */\n        get: function () {\n            return this._playbackRate;\n        },\n        set: function (rate) {\n            this._playbackRate = rate;\n            this._setAll(\"playbackRate\", rate);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Part.prototype, \"length\", {\n        /**\n         * \tThe number of scheduled notes in the part.\n         */\n        get: function () {\n            return this._events.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Part.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.clear();\n        return this;\n    };\n    return Part;\n}(ToneEvent));\nexport { Part };\n//# sourceMappingURL=Part.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isString } from \"../core/util/TypeCheck\";\nimport { Part } from \"./Part\";\nimport { ToneEvent } from \"./ToneEvent\";\n/**\n * A sequence is an alternate notation of a part. Instead\n * of passing in an array of [time, event] pairs, pass\n * in an array of events which will be spaced at the\n * given subdivision. Sub-arrays will subdivide that beat\n * by the number of items are in the array.\n * Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n * @param  callback  The callback to invoke with every note\n * @param  sequence  The sequence\n * @param  subdivision  The subdivision between which events are placed.\n * @example\n * var seq = new Sequence(function(time, note){\n * \tconsole.log(note);\n * //straight quater notes\n * }, [\"C4\", \"E4\", \"G4\", \"A4\"], \"4n\");\n * @example\n * var seq = new Sequence(function(time, note){\n * \tconsole.log(note);\n * //subdivisions are given as subarrays\n * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]);\n */\nvar Sequence = /** @class */ (function (_super) {\n    __extends(Sequence, _super);\n    function Sequence() {\n        var _this = _super.call(this, optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"])) || this;\n        _this.name = \"Sequence\";\n        /**\n         * The object responsible for scheduling all of the events\n         */\n        _this._part = new Part({\n            callback: _this._seqCallback.bind(_this),\n            context: _this.context,\n        });\n        /**\n         * private reference to all of the sequence proxies\n         */\n        _this._events = [];\n        /**\n         * The proxied array\n         */\n        _this._eventsArray = [];\n        var options = optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]);\n        _this._subdivision = _this.toTicks(options.subdivision);\n        _this.events = options.events;\n        // set all of the values\n        _this.loop = options.loop;\n        _this.loopStart = options.loopStart;\n        _this.loopEnd = options.loopEnd;\n        _this.playbackRate = options.playbackRate;\n        _this.probability = options.probability;\n        _this.humanize = options.humanize;\n        _this.mute = options.mute;\n        _this.playbackRate = options.playbackRate;\n        return _this;\n    }\n    Sequence.getDefaults = function () {\n        return Object.assign(omitFromObject(ToneEvent.getDefaults(), [\"value\"]), {\n            events: [],\n            loop: true,\n            loopEnd: 0,\n            loopStart: 0,\n            subdivision: \"8n\",\n        });\n    };\n    /**\n     * The internal callback for when an event is invoked\n     */\n    Sequence.prototype._seqCallback = function (time, value) {\n        if (value !== null) {\n            this.callback(time, value);\n        }\n    };\n    Object.defineProperty(Sequence.prototype, \"events\", {\n        /**\n         * The sequence\n         */\n        get: function () {\n            return this._events;\n        },\n        set: function (s) {\n            this.clear();\n            this._eventsArray = s;\n            this._events = this._createSequence(this._eventsArray);\n            this._eventsUpdated();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Start the part at the given time.\n     *  @param  time    When to start the part.\n     *  @param  offset  The offset index to start at\n     */\n    Sequence.prototype.start = function (time, offset) {\n        this._part.start(time, offset ? this._indexTime(offset) : offset);\n        return this;\n    };\n    /**\n     *  Stop the part at the given time.\n     *  @param  time  When to stop the part.\n     */\n    Sequence.prototype.stop = function (time) {\n        this._part.stop(time);\n        return this;\n    };\n    Object.defineProperty(Sequence.prototype, \"subdivision\", {\n        /**\n         *  The subdivision of the sequence. This can only be\n         *  set in the constructor. The subdivision is the\n         *  interval between successive steps.\n         */\n        get: function () {\n            return new TicksClass(this.context, this._subdivision).toSeconds();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Create a sequence proxy which can be monitored to create subsequences\n     */\n    Sequence.prototype._createSequence = function (array) {\n        var _this = this;\n        return new Proxy(array, {\n            get: function (target, property) {\n                // property is index in this case\n                return target[property];\n            },\n            set: function (target, property, value) {\n                if (isString(property) && isFinite(parseInt(property, 10))) {\n                    var index = parseInt(property, 10);\n                    if (isArray(value)) {\n                        target[property] = _this._createSequence(value);\n                    }\n                    else {\n                        target[property] = value;\n                    }\n                }\n                else {\n                    target[property] = value;\n                }\n                _this._eventsUpdated();\n                // return true to accept the changes\n                return true;\n            },\n        });\n    };\n    /**\n     * When the sequence has changed, all of the events need to be recreated\n     */\n    Sequence.prototype._eventsUpdated = function () {\n        this._part.clear();\n        this._rescheduleSequence(this._eventsArray, this._subdivision, this.startOffset);\n        // update the loopEnd\n        this.loopEnd = this.loopEnd;\n    };\n    /**\n     * reschedule all of the events that need to be rescheduled\n     */\n    Sequence.prototype._rescheduleSequence = function (sequence, subdivision, startOffset) {\n        var _this = this;\n        sequence.forEach(function (value, index) {\n            var eventOffset = index * (subdivision) + startOffset;\n            if (isArray(value)) {\n                _this._rescheduleSequence(value, subdivision / value.length, eventOffset);\n            }\n            else {\n                var startTime = new TicksClass(_this.context, eventOffset, \"i\").toSeconds();\n                _this._part.add(startTime, value);\n            }\n        });\n    };\n    /**\n     *  Get the time of the index given the Sequence's subdivision\n     *  @param  index\n     *  @return The time of that index\n     *  @private\n     */\n    Sequence.prototype._indexTime = function (index) {\n        return new TicksClass(this.context, index * (this._subdivision) + this.startOffset).toSeconds();\n    };\n    /**\n     * Clear all of the events\n     */\n    Sequence.prototype.clear = function () {\n        this._part.clear();\n        return this;\n    };\n    Sequence.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._part.dispose();\n        return this;\n    };\n    Object.defineProperty(Sequence.prototype, \"loop\", {\n        ///////////////////////////////////////////////////////////////////////////\n        // PROXY CALLS\n        ///////////////////////////////////////////////////////////////////////////\n        get: function () {\n            return this._part.loop;\n        },\n        set: function (l) {\n            if (this._part) {\n                this._part.loop = l;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"loopStart\", {\n        /**\n         * The index at which the sequence should start looping\n         */\n        get: function () {\n            return this._loopStart;\n        },\n        set: function (index) {\n            this._loopStart = index;\n            if (this._part) {\n                this._part.loopStart = this._indexTime(index);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"loopEnd\", {\n        /**\n         * The index at which the sequence should end looping\n         */\n        get: function () {\n            return this._loopEnd;\n        },\n        set: function (index) {\n            this._loopEnd = index;\n            if (this._part) {\n                if (index === 0) {\n                    this._part.loopEnd = this._indexTime(this._eventsArray.length);\n                }\n                else {\n                    this._part.loopEnd = this._indexTime(index);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"startOffset\", {\n        get: function () {\n            return this._part.startOffset;\n        },\n        set: function (start) {\n            if (this._part) {\n                this._part.startOffset = start;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"playbackRate\", {\n        get: function () {\n            return this._part.playbackRate;\n        },\n        set: function (rate) {\n            if (this._part) {\n                this._part.playbackRate = rate;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"probability\", {\n        get: function () {\n            return this._part.probability;\n        },\n        set: function (prob) {\n            if (this._part) {\n                this._part.probability = prob;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"humanize\", {\n        get: function () {\n            return this._part.humanize;\n        },\n        set: function (variation) {\n            if (this._part) {\n                this._part.humanize = variation;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sequence.prototype, \"length\", {\n        /**\n         * The number of scheduled events\n         */\n        get: function () {\n            return this._part.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Sequence;\n}(ToneEvent));\nexport { Sequence };\n//# sourceMappingURL=Sequence.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See {@link AudioToGain}.\n *\n * @example\n * var a2g = new GainToAudio();\n */\nvar GainToAudio = /** @class */ (function (_super) {\n    __extends(GainToAudio, _super);\n    function GainToAudio() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.name = \"GainToAudio\";\n        /**\n         * The node which converts the audio ranges\n         */\n        _this._norm = new WaveShaper({\n            context: _this.context,\n            mapping: function (x) { return Math.abs(x) * 2 - 1; },\n        });\n        /**\n         * The NormalRange input [0, 1]\n         */\n        _this.input = _this._norm;\n        /**\n         * The AudioRange output [-1, 1]\n         */\n        _this.output = _this._norm;\n        return _this;\n    }\n    /**\n     *  clean up\n     */\n    GainToAudio.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._norm.dispose();\n        return this;\n    };\n    return GainToAudio;\n}(SignalOperator));\nexport { GainToAudio };\n//# sourceMappingURL=GainToAudio.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Gain } from \"../../core/context/Gain\";\nimport { connect, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { GainToAudio } from \"../../signal/GainToAudio\";\nimport { Signal } from \"../../signal/Signal\";\n/**\n * Tone.Crossfade provides equal power fading between two inputs.\n * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n * ```\n *                                             +---------+\n *                                            +> input a +>--+\n * +-----------+   +---------------------+     |         |   |\n * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |\n * +-----------+   |                     |     +---------+   |\n *               +-> pan               R +>-+                |   +--------+\n *               | +---------------------+  |                +---> output +>\n *  +------+     |                          |  +---------+   |   +--------+\n *  | fade +>----+                          | +> input b +>--+\n *  +------+                                |  |         |\n *                                          +--> gain    |\n *                                             +---------+\n * ```\n * @example\n * var crossFade = new CrossFade(0.5);\n * //connect effect A to crossfade from\n * //effect output 0 to crossfade input 0\n * effectA.connect(crossFade.a);\n * //connect effect B to crossfade from\n * //effect output 0 to crossfade input 1\n * effectB.connect(crossFade.b);\n * crossFade.fade.value = 0;\n * // ^ only effectA is output\n * crossFade.fade.value = 1;\n * // ^ only effectB is output\n * crossFade.fade.value = 0.5;\n * // ^ the two signals are mixed equally.\n */\nvar CrossFade = /** @class */ (function (_super) {\n    __extends(CrossFade, _super);\n    function CrossFade() {\n        var _this = _super.call(this, Object.assign(optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]))) || this;\n        _this.name = \"CrossFade\";\n        /**\n         * The crossfading is done by a StereoPannerNode\n         */\n        _this._panner = _this.context.createStereoPanner();\n        /**\n         * Split the output of the panner node into two values used to control the gains.\n         */\n        _this._split = _this.context.createChannelSplitter(2);\n        /**\n         * Convert the fade value into an audio range value so it can be connected\n         * to the panner.pan AudioParam\n         */\n        _this._g2a = new GainToAudio({ context: _this.context });\n        /**\n         * The input which is at full level when fade = 0\n         */\n        _this.a = new Gain({\n            context: _this.context,\n            gain: 0,\n        });\n        /**\n         * The input which is at full level when fade = 1\n         */\n        _this.b = new Gain({\n            context: _this.context,\n            gain: 0,\n        });\n        /**\n         * The output is a mix between `a` and `b` at the ratio of `fade`\n         */\n        _this.output = new Gain({ context: _this.context });\n        _this._internalChannels = [_this.a, _this.b];\n        var options = optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]);\n        _this.fade = new Signal({\n            context: _this.context,\n            units: \"normalRange\",\n            value: options.fade,\n        });\n        readOnly(_this, \"fade\");\n        _this.context.getConstant(1).connect(_this._panner);\n        _this._panner.connect(_this._split);\n        connect(_this._split, _this.a.gain, 0);\n        connect(_this._split, _this.b.gain, 1);\n        _this.fade.chain(_this._g2a, _this._panner.pan);\n        _this.a.connect(_this.output);\n        _this.b.connect(_this.output);\n        return _this;\n    }\n    CrossFade.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            fade: 0.5,\n        });\n    };\n    CrossFade.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.a.dispose();\n        this.b.dispose();\n        this.output.dispose();\n        this.fade.dispose();\n        this._g2a.dispose();\n        this._panner.disconnect();\n        this._split.disconnect();\n        return this;\n    };\n    return CrossFade;\n}(ToneAudioNode));\nexport { CrossFade };\n//# sourceMappingURL=CrossFade.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * \t@class  Effect is the base class for effects. Connect the effect between\n * \t        the effectSend and effectReturn GainNodes, then control the amount of\n * \t        effect which goes to the output using the wet control.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param {NormalRange|Object} [wet] The starting wet value.\n */\nvar Effect = /** @class */ (function (_super) {\n    __extends(Effect, _super);\n    function Effect(options) {\n        var _this = _super.call(this, options) || this;\n        _this.name = \"Effect\";\n        /**\n         *  the drywet knob to control the amount of effect\n         */\n        _this._dryWet = new CrossFade({ context: _this.context });\n        /**\n         *  The wet control is how much of the effected\n         *  will pass through to the output. 1 = 100% effected\n         *  signal, 0 = 100% dry signal.\n         */\n        _this.wet = _this._dryWet.fade;\n        /**\n         *  connect the effectSend to the input of hte effect\n         */\n        _this.effectSend = new Gain({ context: _this.context });\n        /**\n         *  connect the output of the effect to the effectReturn\n         */\n        _this.effectReturn = new Gain({ context: _this.context });\n        /**\n         * The effect input node\n         */\n        _this.input = new Gain({ context: _this.context });\n        /**\n         * The effect output\n         */\n        _this.output = _this._dryWet;\n        // connections\n        _this.input.fan(_this._dryWet.a, _this.effectSend);\n        _this.effectReturn.connect(_this._dryWet.b);\n        _this.wet.setValueAtTime(options.wet, 0);\n        _this._internalChannels = [_this.effectReturn, _this.effectSend];\n        readOnly(_this, \"wet\");\n        return _this;\n    }\n    Effect.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            wet: 1,\n        });\n    };\n    /**\n     *  chains the effect in between the effectSend and effectReturn\n     */\n    Effect.prototype.connectEffect = function (effect) {\n        // add it to the internal channels\n        this._internalChannels.push(effect);\n        this.effectSend.chain(effect, this.effectReturn);\n        return this;\n    };\n    Effect.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._dryWet.dispose();\n        this.effectSend.dispose();\n        this.effectReturn.dispose();\n        this.wet.dispose();\n        return this;\n    };\n    return Effect;\n}(ToneAudioNode));\nexport { Effect };\n//# sourceMappingURL=Effect.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\nvar FeedbackEffect = /** @class */ (function (_super) {\n    __extends(FeedbackEffect, _super);\n    function FeedbackEffect(options) {\n        var _this = _super.call(this, options) || this;\n        _this.name = \"FeedbackEffect\";\n        _this._feedbackGain = new Gain({\n            context: _this.context,\n            gain: options.feedback,\n            units: \"normalRange\",\n        });\n        _this.feedback = _this._feedbackGain.gain;\n        readOnly(_this, \"feedback\");\n        // the feedback loop\n        _this.effectReturn.chain(_this._feedbackGain, _this.effectSend);\n        return _this;\n    }\n    FeedbackEffect.getDefaults = function () {\n        return Object.assign(Effect.getDefaults(), {\n            feedback: 0.125,\n        });\n    };\n    FeedbackEffect.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._feedbackGain.dispose();\n        this.feedback.dispose();\n        return this;\n    };\n    return FeedbackEffect;\n}(Effect));\nexport { FeedbackEffect };\n//# sourceMappingURL=FeedbackEffect.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Delay } from \"../core/context/Delay\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { FeedbackEffect } from \"./FeedbackEffect\";\n/**\n * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.\n *\n * @param delayTime The delay applied to the incoming signal.\n * @param feedback The amount of the effected signal which is fed back through the delay.\n * @example\n * var feedbackDelay = new FeedbackDelay(\"8n\", 0.5).toDestination();\n * var tom = new Tone.MembraneSynth({\n * \t\"octaves\" : 4,\n * \t\"pitchDecay\" : 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\",\"32n\");\n */\nvar FeedbackDelay = /** @class */ (function (_super) {\n    __extends(FeedbackDelay, _super);\n    function FeedbackDelay() {\n        var _this = _super.call(this, optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"])) || this;\n        _this.name = \"FeedbackDelay\";\n        var options = optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n        _this._delayNode = new Delay({\n            context: _this.context,\n            delayTime: options.delayTime,\n            maxDelay: options.maxDelay,\n        });\n        _this.delayTime = _this._delayNode.delayTime;\n        // connect it up\n        _this.connectEffect(_this._delayNode);\n        readOnly(_this, \"delayTime\");\n        return _this;\n    }\n    FeedbackDelay.getDefaults = function () {\n        return Object.assign(FeedbackEffect.getDefaults(), {\n            delayTime: 0.25,\n            maxDelay: 1,\n        });\n    };\n    FeedbackDelay.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._delayNode.dispose();\n        this.delayTime.dispose();\n        return this;\n    };\n    return FeedbackDelay;\n}(FeedbackEffect));\nexport { FeedbackDelay };\n//# sourceMappingURL=FeedbackDelay.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * Convolver is a wrapper around the Native Web Audio\n * [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n * Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n * [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n *\n * @param url The URL of the impulse response or the Tone.Buffer contianing the impulse response.\n * @param onload The callback to invoke when the url is loaded.\n * @example\n * //initializing the convolver with an impulse response\n * var convolver = new Convolver(\"./path/to/ir.wav\").toDestination();\n */\nvar Convolver = /** @class */ (function (_super) {\n    __extends(Convolver, _super);\n    function Convolver() {\n        var _this = _super.call(this, optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"])) || this;\n        _this.name = \"Convolver\";\n        /**\n         *  The native ConvolverNode\n         */\n        _this._convolver = _this.context.createConvolver();\n        var options = optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"]);\n        _this._buffer = new ToneAudioBuffer(options.url, function (buffer) {\n            _this.buffer = buffer;\n            options.onload();\n        });\n        // set if it's already loaded\n        if (_this._buffer.loaded) {\n            _this.buffer = _this._buffer;\n        }\n        // initially set normalization\n        _this.normalize = options.normalize;\n        // connect it up\n        _this.connectEffect(_this._convolver);\n        return _this;\n    }\n    Convolver.getDefaults = function () {\n        return Object.assign(Effect.getDefaults(), {\n            normalize: true,\n            onload: noOp,\n        });\n    };\n    /**\n     * Load an impulse response url as an audio buffer.\n     * Decodes the audio asynchronously and invokes\n     * the callback once the audio buffer loads.\n     * @param url The url of the buffer to load. filetype support depends on the browser.\n     */\n    Convolver.prototype.load = function (url) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, this._buffer.load(url)];\n                    case 1:\n                        _a.buffer = _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Object.defineProperty(Convolver.prototype, \"buffer\", {\n        /**\n         *  The convolver's buffer\n         */\n        get: function () {\n            if (this._buffer.length) {\n                return this._buffer;\n            }\n            else {\n                return null;\n            }\n        },\n        set: function (buffer) {\n            if (buffer) {\n                this._buffer.set(buffer);\n            }\n            // if it's already got a buffer, create a new one\n            if (this._convolver.buffer) {\n                // disconnect the old one\n                this.effectSend.disconnect();\n                this._convolver.disconnect();\n                // create and connect a new one\n                this._convolver = this.context.createConvolver();\n                this.connectEffect(this._convolver);\n            }\n            var buff = this._buffer.get();\n            this._convolver.buffer = buff ? buff : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Convolver.prototype, \"normalize\", {\n        /**\n         * The normalize property of the ConvolverNode interface is a boolean that\n         * controls whether the impulse response from the buffer will be scaled by\n         * an equal-power normalization when the buffer attribute is set, or not.\n         */\n        get: function () {\n            return this._convolver.normalize;\n        },\n        set: function (norm) {\n            this._convolver.normalize = norm;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Convolver.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._buffer.dispose();\n        this._convolver.disconnect();\n        return this;\n    };\n    return Convolver;\n}(Effect));\nexport { Convolver };\n//# sourceMappingURL=Convolver.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n *  Wrapper around the native Web Audio's [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n *  Extracts FFT or Waveform data from the incoming signal.\n *  @param type The return type of the analysis, either \"fft\", or \"waveform\".\n *  @param size The size of the FFT. This must be a power of two in the range 16 to 16384.\n */\nvar Analyser = /** @class */ (function (_super) {\n    __extends(Analyser, _super);\n    function Analyser() {\n        var _this = _super.call(this, optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"])) || this;\n        _this.name = \"Analyser\";\n        /**\n         *  The analyser node.\n         */\n        _this._analyser = _this.context.createAnalyser();\n        var options = optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"]);\n        // set the values initially\n        _this.size = options.size;\n        _this.type = options.type;\n        _this.input = _this.output = _this._analyser;\n        return _this;\n    }\n    Analyser.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            size: 1024,\n            smoothing: 0.8,\n            type: \"fft\",\n        });\n    };\n    /**\n     *  Run the analysis given the current settings and return the\n     */\n    Analyser.prototype.getValue = function () {\n        if (this._type === \"fft\") {\n            this._analyser.getFloatFrequencyData(this._buffer);\n        }\n        else if (this._type === \"waveform\") {\n            this._analyser.getFloatTimeDomainData(this._buffer);\n        }\n        return this._buffer;\n    };\n    Object.defineProperty(Analyser.prototype, \"size\", {\n        /**\n         *  The size of analysis. This must be a power of two in the range 16 to 16384.\n         */\n        get: function () {\n            return this._analyser.frequencyBinCount;\n        },\n        set: function (size) {\n            this._analyser.fftSize = size * 2;\n            this._buffer = new Float32Array(size);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Analyser.prototype, \"type\", {\n        /**\n         *  The analysis function returned by analyser.getValue(), either \"fft\" or \"waveform\".\n         */\n        get: function () {\n            return this._type;\n        },\n        set: function (type) {\n            this.assert(type === \"waveform\" || type === \"fft\", \"Analyser: invalid type: \" + type);\n            this._type = type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Analyser.prototype, \"smoothing\", {\n        /**\n         *  0 represents no time averaging with the last analysis frame.\n         */\n        get: function () {\n            return this._analyser.smoothingTimeConstant;\n        },\n        set: function (val) {\n            this._analyser.smoothingTimeConstant = val;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *  Clean up.\n     */\n    Analyser.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._analyser.disconnect();\n        return this;\n    };\n    return Analyser;\n}(ToneAudioNode));\nexport { Analyser };\n//# sourceMappingURL=Analyser.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Merge brings multiple mono input channels into a single multichannel output channel.\n *\n * @param channels The number of channels to merge.\n * @example\n * var merge = new Merge().toDestination();\n * //routing a sine tone in the left channel\n * //and noise in the right channel\n * var osc = new Tone.Oscillator().connect(merge.left);\n * var noise = new Tone.Noise().connect(merge.right);\n * //starting our oscillators\n * noise.start();\n * osc.start();\n */\nvar Merge = /** @class */ (function (_super) {\n    __extends(Merge, _super);\n    function Merge() {\n        var _this = _super.call(this, optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"])) || this;\n        _this.name = \"Merge\";\n        var options = optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]);\n        _this._merger = _this.output = _this.input = _this.context.createChannelMerger(options.channels);\n        return _this;\n    }\n    Merge.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            channels: 2,\n        });\n    };\n    Merge.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._merger.disconnect();\n        return this;\n    };\n    return Merge;\n}(ToneAudioNode));\nexport { Merge };\n//# sourceMappingURL=Merge.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { isNumber } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\n/**\n *  @class  Tone.Filter is a filter which allows for all of the same native methods\n *          as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n *          Tone.Filter has the added ability to set the filter rolloff at -12\n *          (default), -24 and -48.\n *\n *  @constructor\n *  @extends {Tone.AudioNode}\n *  @param frequency The cutoff frequency of the filter.\n *  @param type The type of filter.\n *  @param rolloff The drop in decibels per octave after the cutoff frequency\n *  @example\n *  var filter = new Filter(200, \"highpass\");\n */\nvar Filter = /** @class */ (function (_super) {\n    __extends(Filter, _super);\n    function Filter() {\n        var _this = _super.call(this, optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"])) || this;\n        _this.name = \"Filter\";\n        _this.input = new Gain({ context: _this.context });\n        _this.output = new Gain({ context: _this.context });\n        _this._filters = [];\n        var options = optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]);\n        _this._filters = [];\n        _this.Q = new Signal({\n            context: _this.context,\n            units: \"positive\",\n            value: options.Q,\n        });\n        _this.frequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        _this.detune = new Signal({\n            context: _this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        _this.gain = new Signal({\n            context: _this.context,\n            units: \"decibels\",\n            value: options.gain,\n        });\n        _this._type = options.type;\n        _this.rolloff = options.rolloff;\n        readOnly(_this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n        return _this;\n    }\n    Filter.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            Q: 1,\n            detune: 0,\n            frequency: 350,\n            gain: 0,\n            rolloff: -12,\n            type: \"lowpass\",\n        });\n    };\n    Object.defineProperty(Filter.prototype, \"type\", {\n        /**\n         * The type of the filter. Types: \"lowpass\", \"highpass\",\n         * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n         */\n        get: function () {\n            return this._type;\n        },\n        set: function (type) {\n            var types = [\"lowpass\", \"highpass\", \"bandpass\",\n                \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n            this.assert(types.indexOf(type) !== -1, \"Invalid filter type: \" + type);\n            this._type = type;\n            this._filters.forEach(function (filter) { return filter.type = type; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Filter.prototype, \"rolloff\", {\n        /**\n         * The rolloff of the filter which is the drop in db\n         * per octave. Implemented internally by cascading filters.\n         * Only accepts the values -12, -24, -48 and -96.\n         */\n        get: function () {\n            return this._rolloff;\n        },\n        set: function (rolloff) {\n            var rolloffNum = isNumber(rolloff) ? rolloff : parseInt(rolloff, 10);\n            var possibilities = [-12, -24, -48, -96];\n            var cascadingCount = possibilities.indexOf(rolloffNum);\n            // check the rolloff is valid\n            this.assert(cascadingCount !== -1, \"rolloff can only be \" + possibilities.join(\", \"));\n            cascadingCount += 1;\n            this._rolloff = rolloffNum;\n            this.input.disconnect();\n            this._filters.forEach(function (filter) { return filter.disconnect(); });\n            this._filters = new Array(cascadingCount);\n            for (var count = 0; count < cascadingCount; count++) {\n                var filter = this.context.createBiquadFilter();\n                filter.type = this._type;\n                this.frequency.connect(filter.frequency);\n                this.detune.connect(filter.detune);\n                this.Q.connect(filter.Q);\n                this.gain.connect(filter.gain);\n                this._filters[count] = filter;\n            }\n            this._internalChannels = this._filters;\n            connectSeries.apply(void 0, [this.input].concat(this._internalChannels, [this.output]));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the frequency response curve. This curve represents how the filter\n     * responses to frequencies between 20hz-20khz.\n     * @param  len The number of values to return\n     * @return The frequency response curve between 20-20kHz\n     */\n    Filter.prototype.getFrequencyResponse = function (len) {\n        var _this = this;\n        if (len === void 0) { len = 128; }\n        // start with all 1s\n        var totalResponse = new Float32Array(len).map(function () { return 1; });\n        var freqValues = new Float32Array(len);\n        for (var i = 0; i < len; i++) {\n            var norm = Math.pow(i / len, 2);\n            var freq = norm * (20000 - 20) + 20;\n            freqValues[i] = freq;\n        }\n        var magValues = new Float32Array(len);\n        var phaseValues = new Float32Array(len);\n        this._filters.forEach(function () {\n            var filterClone = _this.context.createBiquadFilter();\n            filterClone.type = _this._type;\n            filterClone.Q.value = _this.Q.value;\n            filterClone.frequency.value = _this.frequency.value;\n            filterClone.gain.value = _this.gain.value;\n            filterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n            magValues.forEach(function (val, i) {\n                totalResponse[i] *= val;\n            });\n        });\n        return totalResponse;\n    };\n    /**\n     *  Clean up.\n     */\n    Filter.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._filters.forEach(function (filter) {\n            filter.disconnect();\n        });\n        writable(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n        this.frequency.dispose();\n        this.Q.dispose();\n        this.detune.dispose();\n        this.gain.dispose();\n        return this;\n    };\n    return Filter;\n}(ToneAudioNode));\nexport { Filter };\n//# sourceMappingURL=Filter.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Filter } from \"../filter/Filter\";\n/**\n *  Split the incoming signal into three bands (low, mid, high)\n *  with two crossover frequency controls.\n * ```\n *            +----------------------+\n *          +-> input < lowFrequency +------------------> low\n *          | +----------------------+\n *          |\n *          | +--------------------------------------+\n * input ---+-> lowFrequency < input < highFrequency +--> mid\n *          | +--------------------------------------+\n *          |\n *          | +-----------------------+\n *          +-> highFrequency < input +-----------------> high\n *            +-----------------------+\n * ```\n *\n *  @param lowFrequency the low/mid crossover frequency\n *  @param highFrequency the mid/high crossover frequency\n */\nvar MultibandSplit = /** @class */ (function (_super) {\n    __extends(MultibandSplit, _super);\n    function MultibandSplit() {\n        var _this = _super.call(this, optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"])) || this;\n        _this.name = \"MultibandSplit\";\n        /**\n         *  the input\n         */\n        _this.input = new Gain({ context: _this.context });\n        /**\n         * no output node, use either low, mid or high outputs\n         */\n        _this.output = undefined;\n        /**\n         *  The low band.\n         */\n        _this.low = new Filter({\n            context: _this.context,\n            frequency: 0,\n            type: \"lowpass\",\n        });\n        /**\n         *  the lower filter of the mid band\n         */\n        _this._lowMidFilter = new Filter({\n            context: _this.context,\n            frequency: 0,\n            type: \"highpass\",\n        });\n        /**\n         *  The mid band output.\n         */\n        _this.mid = new Filter({\n            context: _this.context,\n            frequency: 0,\n            type: \"lowpass\",\n        });\n        /**\n         *  The high band output.\n         */\n        _this.high = new Filter({\n            context: _this.context,\n            frequency: 0,\n            type: \"highpass\",\n        });\n        _this._internalChannels = [_this.low, _this.mid, _this.high];\n        var options = optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"]);\n        _this.lowFrequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n            value: options.lowFrequency,\n        });\n        _this.highFrequency = new Signal({\n            context: _this.context,\n            units: \"frequency\",\n            value: options.highFrequency,\n        });\n        _this.Q = new Signal({\n            context: _this.context,\n            units: \"positive\",\n            value: options.Q,\n        });\n        _this.input.fan(_this.low, _this.high);\n        _this.input.chain(_this._lowMidFilter, _this.mid);\n        // the frequency control signal\n        _this.lowFrequency.fan(_this.low.frequency, _this._lowMidFilter.frequency);\n        _this.highFrequency.fan(_this.mid.frequency, _this.high.frequency);\n        // the Q value\n        _this.Q.connect(_this.low.Q);\n        _this.Q.connect(_this._lowMidFilter.Q);\n        _this.Q.connect(_this.mid.Q);\n        _this.Q.connect(_this.high.Q);\n        readOnly(_this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n        return _this;\n    }\n    MultibandSplit.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            Q: 1,\n            highFrequency: 2500,\n            lowFrequency: 400,\n        });\n    };\n    /**\n     *  Clean up.\n     */\n    MultibandSplit.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        writable(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n        this.low.dispose();\n        this._lowMidFilter.dispose();\n        this.mid.dispose();\n        this.high.dispose();\n        this.lowFrequency.dispose();\n        this.highFrequency.dispose();\n        this.Q.dispose();\n        return this;\n    };\n    return MultibandSplit;\n}(ToneAudioNode));\nexport { MultibandSplit };\n//# sourceMappingURL=MultibandSplit.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\nvar EQ3 = /** @class */ (function (_super) {\n    __extends(EQ3, _super);\n    function EQ3() {\n        var _this = _super.call(this, optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"])) || this;\n        _this.name = \"EQ3\";\n        /**\n         *  the output\n         */\n        _this.output = new Gain({ context: _this.context });\n        _this._internalChannels = [];\n        var options = optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"]);\n        _this.input = _this._multibandSplit = new MultibandSplit({\n            context: _this.context,\n            highFrequency: options.highFrequency,\n            lowFrequency: options.lowFrequency,\n        });\n        _this._lowGain = new Gain({\n            context: _this.context,\n            gain: options.low,\n            units: \"decibels\",\n        });\n        _this._midGain = new Gain({\n            context: _this.context,\n            gain: options.mid,\n            units: \"decibels\",\n        });\n        _this._highGain = new Gain({\n            context: _this.context,\n            gain: options.high,\n            units: \"decibels\",\n        });\n        _this.low = _this._lowGain.gain;\n        _this.mid = _this._midGain.gain;\n        _this.high = _this._highGain.gain;\n        _this.Q = _this._multibandSplit.Q;\n        _this.lowFrequency = _this._multibandSplit.lowFrequency;\n        _this.highFrequency = _this._multibandSplit.highFrequency;\n        // the frequency bands\n        _this._multibandSplit.low.chain(_this._lowGain, _this.output);\n        _this._multibandSplit.mid.chain(_this._midGain, _this.output);\n        _this._multibandSplit.high.chain(_this._highGain, _this.output);\n        readOnly(_this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n        _this._internalChannels = [_this._multibandSplit];\n        return _this;\n    }\n    EQ3.getDefaults = function () {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            high: 0,\n            highFrequency: 2500,\n            low: 0,\n            lowFrequency: 400,\n            mid: 0,\n        });\n    };\n    /**\n     *  Clean up.\n     */\n    EQ3.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        writable(this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n        this._multibandSplit.dispose();\n        this.lowFrequency.dispose();\n        this.highFrequency.dispose();\n        this._lowGain.dispose();\n        this._midGain.dispose();\n        this._highGain.dispose();\n        this.low.dispose();\n        this.mid.dispose();\n        this.high.dispose();\n        this.Q.dispose();\n        return this;\n    };\n    return EQ3;\n}(ToneAudioNode));\nexport { EQ3 };\n//# sourceMappingURL=EQ3.js.map","export { getContext, setContext } from \"./core/Global\";\nexport * from \"./core/index\";\nexport * from \"./source/index\";\nexport * from \"./instrument/index\";\nexport * from \"./event/index\";\nexport * from \"./effect/index\";\nexport * from \"./component/index\";\nimport { getContext } from \"./core/Global\";\nexport { start } from \"./core/Global\";\n/**\n *  The current audio context time\n */\nexport function now() {\n    return getContext().now();\n}\n/**\n * The Transport object belonging to the global Tone.js Context\n */\n// tslint:disable-next-line: variable-name\nexport var Transport = getContext().transport;\n/**\n * The Destination (output) belonging to the global Tone.js Context\n */\n// tslint:disable-next-line: variable-name\nexport var Destination = getContext().destination;\n//# sourceMappingURL=index.js.map","export var version = \"14.1.18\";\n//# sourceMappingURL=version.js.map"],"sourceRoot":""}